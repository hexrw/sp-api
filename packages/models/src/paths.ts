export interface paths {
    "/aplus/2020-11-01/contentAsinValidations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Checks if the A+ Content document is valid for use on a set of ASINs.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["validateContentDocumentAsinRelations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentDocuments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of all A+ Content documents, including metadata, that are assigned to a selling partner. To get the actual contents of the A+ Content documents, call the `getContentDocument` operation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["searchContentDocuments"];
        put?: never;
        /** @description Creates a new A+ Content document.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createContentDocument"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns an A+ Content document, if available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getContentDocument"];
        put?: never;
        /** @description Updates an existing A+ Content document.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["updateContentDocument"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/approvalSubmissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits an A+ Content document for review, approval, and publishing.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["postContentDocumentApprovalSubmission"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of ASINs that are related to the specified A+ Content document, if available. If you don't include the `asinSet` parameter, this operation returns all ASINs related to the content document.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listContentDocumentAsinRelations"];
        put?: never;
        /** @description Replaces all ASINs related to the specified A+ Content document, if available. This operation can add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN will suspend the content document from that ASIN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["postContentDocumentAsinRelations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/suspendSubmissions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits a request to suspend visible A+ Content. This doesn't delete the content document or the ASIN relations.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["postContentDocumentSuspendSubmission"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/aplus/2020-11-01/contentPublishRecords": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Searches for A+ Content publishing records, if available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["searchContentPublishRecords"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/appIntegrations/2024-04-01/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a notification for sellers in Seller Central.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createNotification"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/appIntegrations/2024-04-01/notifications/{notificationId}/feedback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Records the seller's response to a notification.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["recordActionFeedback"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/appIntegrations/2024-04-01/notifications/deletion": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Remove your application's notifications from the Appstore notifications dashboard.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Sellers whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["deleteNotifications"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/applications/2023-11-30/clientSecret": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Rotates application client secrets for a developer application. Developers must register a destination queue in the developer console before calling this operation. When this operation is called a new client secret is generated and sent to the developer-registered queue. For more information, refer to [Rotate your application client secret](https://developer-docs.amazon.com/sp-api/v0/docs/application-management-api-v2023-11-30-use-case-guide#tutorial-rotate-your-applications-client-secret).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["rotateApplicationClientSecret"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundEligibility": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Determines if the packages you specify are eligible for an AWD inbound order and contains error details for ineligible packages.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["checkInboundEligibility"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a draft AWD inbound order with a list of packages for inbound shipment. The operation creates one shipment per order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createInbound"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundOrders/{orderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves an AWD inbound order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInbound"];
        /** @description Updates an AWD inbound order that is in `DRAFT` status and not yet confirmed. Use this operation to update the `packagesToInbound`, `originAddress` and `preferences` attributes.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateInbound"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundOrders/{orderId}/cancellation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Cancels an AWD Inbound order and its associated shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["cancelInbound"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundOrders/{orderId}/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms an AWD inbound order in `DRAFT` status.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmInbound"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundShipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInboundShipments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundShipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves an AWD inbound shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) */
        get: operations["getInboundShipment"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundShipments/{shipmentId}/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves the box labels for a shipment ID that you specify. This is an asynchronous operation. If the label status is `GENERATED`, then the label URL is available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInboundShipmentLabels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inboundShipments/{shipmentId}/transport": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates transport details for an AWD shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateInboundShipmentTransportDetails"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/awd/2024-05-09/inventory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Lists AWD inventory associated with a merchant with the ability to apply optional filters.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInventory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batches/products/pricing/2022-05-01/items/competitiveSummary": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the competitive summary response, including featured buying options for the ASIN and `marketplaceId` combination.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.033 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API. */
        post: operations["getCompetitiveSummary"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batches/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the set of responses that correspond to the batched list of up to 40 requests defined in the request body. The response for each successful (HTTP status code 200) request in the set includes the computed listing price at or below which a seller can expect to become the featured offer (before applicable promotions). This is called the featured offer expected price (FOEP). Featured offer is not guaranteed because competing offers might change. Other offers might be featured based on factors such as fulfillment capabilities to a specific customer. The response to an unsuccessful request includes the available error text.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.033 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API. */
        post: operations["getFeaturedOfferExpectedPriceBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batches/products/pricing/v0/itemOffers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the lowest priced offers for a batch of items based on ASIN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getItemOffersBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/batches/products/pricing/v0/listingOffers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the lowest priced offers for a batch of listings by SKU.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getListingOffersBatch"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/2020-12-01/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search for and return a list of Amazon catalog items and associated information.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["catalogItems_2020-12-01_searchCatalogItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/2020-12-01/items/{asin}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details for an item in the Amazon catalog.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["catalogItems_2020-12-01_getCatalogItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/2022-04-01/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search for a list of Amazon catalog items and item-related information. You can search by identifier or by keywords.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["searchCatalogItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/2022-04-01/items/{asin}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves details for an item in the Amazon catalog.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getCatalogItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/2024-11-01/automotive/vehicles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the latest collection of vehicles */
        get: operations["getVehicles"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/catalog/v0/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the parent categories to which an item belongs, based on the specified ASIN or SellerSKU.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listCatalogCategories"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/returns/topics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve the topics that customers mention when they return items in a browse node. */
        get: operations["getBrowseNodeReturnTopics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/returns/trends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve the trends of topics that customers mention when they return items in a browse node. */
        get: operations["getBrowseNodeReturnTrends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/reviews/topics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve a browse node's ten most positive and ten most negative review topics. */
        get: operations["getBrowseNodeReviewTopics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/browseNodes/{browseNodeId}/reviews/trends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve the positive and negative review trends of items in a browse node for the past six months. */
        get: operations["getBrowseNodeReviewTrends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/items/{asin}/browseNode": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description This API returns the associated browse node of the requested ASIN. A browse node is a location in a browse tree that is used for navigation, product classification, and website content on the Amazon retail website. */
        get: operations["getItemBrowseNode"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/items/{asin}/reviews/topics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve an item's ten most positive and ten most negative review topics. */
        get: operations["getItemReviewTopics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/customerFeedback/2024-06-01/items/{asin}/reviews/trends": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve an item's positive and negative review trends for the past six months. */
        get: operations["getItemReviewTrends"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dataKiosk/2023-11-15/documents/{documentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the information required for retrieving a Data Kiosk document's contents. See the `createQuery` operation for details about document retention.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dataKiosk/2023-11-15/queries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns details for the Data Kiosk queries that match the specified filters. See the `createQuery` operation for details about query retention.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getQueries"];
        put?: never;
        /** @description Creates a Data Kiosk query request.
         *
         *     **Note:** The retention of a query varies based on the fields requested. Each field within a schema is annotated with a `@resultRetention` directive that defines how long a query containing that field will be retained. When a query contains multiple fields with different retentions, the shortest (minimum) retention is applied. The retention of a query's resulting documents always matches the retention of the query.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createQuery"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dataKiosk/2023-11-15/queries/{queryId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns query details for the query specified by the `queryId` parameter. See the `createQuery` operation for details about query retention.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2.0 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getQuery"];
        put?: never;
        post?: never;
        /** @description Cancels the query specified by the `queryId` parameter. Only queries with a non-terminal `processingStatus` (`IN_QUEUE`, `IN_PROGRESS`) can be cancelled. Cancelling a query that already has a `processingStatus` of `CANCELLED` will no-op. Cancelled queries are returned in subsequent calls to the `getQuery` and `getQueries` operations.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["cancelQuery"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/definitions/2020-09-01/productTypes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search for and return a list of Amazon product types that have definitions available.
         *
         *     **Usage Plans:**
         *
         *     | Plan type | Rate (requests per second) | Burst |
         *     | ---- | ---- | ---- |
         *     |Default| 5 | 10 |
         *     |Selling partner specific| Variable | Variable |
         *
         *     The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["searchDefinitionsProductTypes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/definitions/2020-09-01/productTypes/{productType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve an Amazon product type definition.
         *
         *     **Usage Plans:**
         *
         *     | Plan type | Rate (requests per second) | Burst |
         *     | ---- | ---- | ---- |
         *     |Default| 5 | 10 |
         *     |Selling partner specific| Variable | Variable |
         *
         *     The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getDefinitionsProductType"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/easyShip/2022-03-23/package": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about a package, including dimensions, weight, time slot information for handover, invoice and item information, and status.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getScheduledPackage"];
        put?: never;
        /** @description Schedules an Easy Ship order and returns the scheduled package information.
         *
         *     This operation does the following:
         *
         *     *  Specifies the time slot and handover method for the order to be scheduled for delivery.
         *
         *     * Updates the Easy Ship order status.
         *
         *     * Generates a shipping label and an invoice. Calling `createScheduledPackage` also generates a warranty document if you specify a `SerialNumber` value. To get these documents, see [How to get invoice, shipping label, and warranty documents](doc:easyship-api-v2022-03-23-use-case-guide).
         *
         *     * Shows the status of Easy Ship orders when you call the `getOrders` operation of the Selling Partner API for Orders and examine the `EasyShipShipmentStatus` property in the response body.
         *
         *     See the **Shipping Label**, **Invoice**, and **Warranty** columns in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) to see which documents are supported in each marketplace.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createScheduledPackage"];
        delete?: never;
        options?: never;
        head?: never;
        /** @description Updates the time slot for handing over the package indicated by the specified `scheduledPackageId`. You can get the new `slotId` value for the time slot by calling the `listHandoverSlots` operation before making another `patch` call.
         *
         *     See the **Update Package** column in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) to see which marketplaces this operation is supported in.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        patch: operations["updateScheduledPackages"];
        trace?: never;
    };
    "/easyShip/2022-03-23/packages/bulk": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description This operation automatically schedules a time slot for all the `amazonOrderId`s given as input, generating the associated shipping labels, along with other compliance documents according to the marketplace (refer to the [marketplace document support table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table)).
         *
         *     Developers calling this operation may optionally assign a `packageDetails` object, allowing them to input a preferred time slot for each order in ther request. In this case, Amazon will try to schedule the respective packages using their optional settings. On the other hand, *i.e.*, if the time slot is not provided, Amazon will then pick the earliest time slot possible.
         *
         *     Regarding the shipping label's file format, external developers are able to choose between PDF or ZPL, and Amazon will create the label accordingly.
         *
         *     This operation returns an array composed of the scheduled packages, and a short-lived URL pointing to a zip file containing the generated shipping labels and the other documents enabled for your marketplace. If at least an order couldn't be scheduled, then Amazon adds the `rejectedOrders` list into the response, which contains an entry for each order we couldn't process. Each entry is composed of an error message describing the reason of the failure, so that sellers can take action.
         *
         *     The table below displays the supported request and burst maximum rates:
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createScheduledPackageBulk"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/easyShip/2022-03-23/timeSlot": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns time slots available for Easy Ship orders to be scheduled based on the package weight and dimensions that the seller specifies.
         *
         *     This operation is available for scheduled and unscheduled orders based on marketplace support. See **Get Time Slots** in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table).
         *
         *     This operation can return time slots that have either pickup or drop-off handover methods - see **Supported Handover Methods** in the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["listHandoverSlots"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/returns": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve a list of return items. You can filter results by location, RMA ID, status, or time. */
        get: operations["listReturns"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/returns/{returnId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve the return item with the specified ID. */
        get: operations["getReturn"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a list of shipments created for the seller in the status you specify. Shipments can be further filtered based on the fulfillment node or the time of the shipments' last update. */
        get: operations["externalFulfillmentShipments_2024-09-11_getShipments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a single shipment with the ID you specify. */
        get: operations["externalFulfillmentShipments_2024-09-11_getShipment"];
        put?: never;
        /** @description Confirm or reject the specified shipment. */
        post: operations["processShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve invoices for the shipment you specify. */
        get: operations["retrieveInvoice"];
        put?: never;
        /** @description Get invoices for the shipment you specify. */
        post: operations["generateInvoice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}/packages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Provide details about the packages in the specified shipment. */
        post: operations["createPackages"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}/packages/{packageId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the details about the packages that will be used to fulfill the specified shipment. */
        put: operations["updatePackage"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** @description Updates the status of the packages. */
        patch: operations["updatePackageStatus"];
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}/shipLabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Generate and retrieve all shipping labels for one or more packages in the shipment you specify. */
        put: operations["generateShipLabels"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/2024-09-11/shipments/{shipmentId}/shippingOptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get a list of shipping options for a package in a shipment given the shipment's marketplace and channel. If the marketplace and channel have a pre-determined shipping option, then this operation returns an empty response. */
        get: operations["retrieveShippingOptions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/externalFulfillment/inventory/2024-09-11/inventories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Make up to 10 inventory requests. The response includes the set of responses that correspond to requests. The response for each successful request in the set includes the  inventory count for the provided `sku` and `locationId` pair. */
        post: operations["batchInventory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/prepInstructions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns labeling requirements and item preparation instructions to help prepare items for shipment to Amazon's fulfillment network.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPrepInstructions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/shipmentItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of items in a specified inbound shipment, or a list of items that were updated within a specified time frame.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipmentItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of inbound shipments based on criteria that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/shipments/{shipmentId}/billOfLading": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a bill of lading for a Less Than Truckload/Full Truckload (LTL/FTL) shipment. The getBillOfLading operation returns PDF document data for printing a bill of lading for an Amazon-partnered Less Than Truckload/Full Truckload (LTL/FTL) inbound shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getBillOfLading"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/shipments/{shipmentId}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of items in a specified inbound shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipmentItemsByShipmentId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v0/shipments/{shipmentId}/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns package/pallet labels for faster and more accurate shipment processing at the Amazon fulfillment center.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getLabels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inbound/v1/eligibility/itemPreview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description This operation gets an eligibility preview for an item that you specify. You can specify the type of eligibility preview that you want (INBOUND or COMMINGLING). For INBOUND previews, you can specify the marketplace in which you want to determine the item's eligibility.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getItemEligibilityPreview"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inventory/v1/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Requests that Amazon create product-details in the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information. */
        post: operations["createInventoryItem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inventory/v1/items/{sellerSku}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** @description Requests that Amazon Deletes an item from the Sandbox Inventory in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information. */
        delete: operations["deleteInventoryItem"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inventory/v1/items/inventory": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Requests that Amazon add items to the Sandbox Inventory with desired amount of quantity in the sandbox environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information. */
        post: operations["addInventory"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/inventory/v1/summaries": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of inventory summaries. The summaries returned depend on the presence or absence of the startDateTime, sellerSkus and sellerSku parameters:
         *
         *     - All inventory summaries with available details are returned when the startDateTime, sellerSkus and sellerSku parameters are omitted.
         *     - When startDateTime is provided, the operation returns inventory summaries that have had changes after the date and time specified. The sellerSkus and sellerSku parameters are ignored. Important: To avoid errors, use both startDateTime and nextToken to get the next page of inventory summaries that have changed after the date and time specified.
         *     - When the sellerSkus parameter is provided, the operation returns inventory summaries for only the specified sellerSkus. The sellerSku parameter is ignored.
         *     - When the sellerSku parameter is provided, the operation returns inventory summaries for only the specified sellerSku.
         *
         *     Note: The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     Usage Plan:
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits). */
        get: operations["getInventorySummaries"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/deliveryOffers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns delivery options that include an estimated delivery date and offer expiration, based on criteria that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["deliveryOffers"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/features": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of features available for Multi-Channel Fulfillment orders in the marketplace you specify, and whether the seller for which you made the call is enrolled for each feature.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFeatures"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/features/inventory/{featureName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of inventory items that are eligible for the fulfillment feature you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).. */
        get: operations["getFeatureInventory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/features/inventory/{featureName}/{sellerSku}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the number of items with the `sellerSku` you specify that can have orders fulfilled using the specified feature. Note that if the `sellerSku` isn't eligible, the response will contain an empty `skuInfo` object. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFeatureSKU"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of fulfillment orders fulfilled after (or at) a specified date-time, or indicated by the `nextToken` parameter.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) */
        get: operations["listAllFulfillmentOrders"];
        put?: never;
        /** @description Requests that Amazon ship items from the seller's inventory in Amazon's fulfillment network to a destination address.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) */
        post: operations["createFulfillmentOrder"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the fulfillment order indicated by the specified order identifier.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFulfillmentOrder"];
        /** @description Updates and/or requests shipment for a fulfillment order with an order hold on it.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateFulfillmentOrder"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Requests that Amazon stop attempting to fulfill the fulfillment order indicated by the specified order identifier.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["cancelFulfillmentOrder"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/return": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Creates a fulfillment return.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["createFulfillmentReturn"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders/{sellerFulfillmentOrderId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Requests that Amazon update the status of an order in the sandbox testing environment. This is a sandbox-only operation and must be directed to a sandbox endpoint. Refer to [Fulfillment Outbound Dynamic Sandbox Guide](https://developer-docs.amazon.com/sp-api/docs/fulfillment-outbound-dynamic-sandbox-guide) and [Selling Partner API sandbox](https://developer-docs.amazon.com/sp-api/docs/the-selling-partner-api-sandbox) for more information. */
        put: operations["submitFulfillmentOrderStatusUpdate"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/fulfillmentOrders/preview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns a list of fulfillment order previews based on shipping criteria that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getFulfillmentPreview"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/returnReasonCodes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of return reason codes for a seller SKU in a given marketplace. The parameters for this operation may contain special characters that require URL encoding. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listReturnReasonCodes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/2020-07-01/tracking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns delivery tracking information for a package in an outbound shipment for a Multi-Channel Fulfillment order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPackageTrackingDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/brazil/v0/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the shipment details required to issue an invoice for the specified shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1.133 | 25 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipmentDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits a shipment invoice document for a given shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1.133 | 25 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["shipmentInvoicingV0_submitInvoice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the invoice status for the shipment you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1.133 | 25 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoiceStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/feeds/2021-06-30/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates a feed document for the feed type that you specify. This operation returns a presigned URL for uploading the feed document contents. It also returns a `feedDocumentId` value that you can pass in with a subsequent call to the [`createFeed`](https://developer-docs.amazon.com/sp-api/reference/createfeed) operation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createFeedDocument"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/feeds/2021-06-30/documents/{feedDocumentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the information required for retrieving a feed document's contents.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFeedDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/feeds/2021-06-30/feeds": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns feed details for the feeds that match the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFeeds"];
        put?: never;
        /** @description Creates a feed. Upload the contents of the feed document before calling this operation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0083 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         *
         *     The rate limit for the [`JSON_LISTINGS_FEED`](https://developer-docs.amazon.com/sp-api/docs/listings-feed-type-values#listings-feed) feed type differs from the rate limit for the [`createFeed`](https://developer-docs.amazon.com/sp-api/reference/createfeed) operation. For more information, refer to the [Building Listings Management Workflows Guide](https://developer-docs.amazon.com/sp-api/docs/building-listings-management-workflows-guide#should-i-submit-in-bulk-using-the-json_listings_feed-or-individually-with-the-listings-items-api). */
        post: operations["createFeed"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/feeds/2021-06-30/feeds/{feedId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns feed details (including the `resultDocumentId`, if available) for the feed that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getFeed"];
        put?: never;
        post?: never;
        /** @description Cancels the feed that you specify. Only feeds with `processingStatus=IN_QUEUE` can be cancelled. Cancelled feeds are returned in subsequent calls to the [`getFeed`](https://developer-docs.amazon.com/sp-api/reference/getfeed) and [`getFeeds`](https://developer-docs.amazon.com/sp-api/reference/getfeeds) operations.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["cancelFeed"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/2024-06-19/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns transactions for the given parameters. Financial events might not include orders from the last 48 hours.
         *
         *     **Usage plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits). */
        get: operations["listTransactions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/2024-06-01/paymentMethods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the list of payment methods for the seller, which can be filtered by method type.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | .5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPaymentMethods"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/2024-06-01/payouts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Initiates an on-demand payout to the seller's default deposit method in Seller Central for the given `marketplaceId` and `accountType`, if eligible. You can only initiate one on-demand payout for each marketplace and account type within a 24-hour period.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.017 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["initiatePayout"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all Amazon SW accounts for the seller
         * @description Get Seller Wallet accounts for a seller.
         */
        get: operations["listAccounts"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find particular Amazon SW account by Amazon account identifier
         * @description Retrieve a Seller Wallet bank account by Amazon account identifier.
         */
        get: operations["sellerWallet_2024-03-01_getAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/accounts/{accountId}/balance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find balance in particular Amazon SW account by Amazon account identifier
         * @description Retrieve the balance in a given Seller Wallet bank account.
         */
        get: operations["listAccountBalances"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/transactions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * The API will return all the transactions for a given Amazon SW account sorted by the transaction request date
         * @description Retrieve a list of transactions for a given Seller Wallet bank account.
         */
        get: operations["listAccountTransactions"];
        put?: never;
        /**
         * Create a transaction request from Amazon SW account to another customer provided account
         * @description Create a transaction request from a Seller Wallet account to another customer-provided account.
         */
        post: operations["createTransaction"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find particular Amazon SW account transaction by Amazon transaction identifier
         * @description Returns a transaction
         */
        get: operations["getTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/transferPreview": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Fetch potential fees that could be applied on a transaction on the basis of the source and destination country currency code
         * @description Returns list of potential fees on a transaction based on the source and destination country currency code
         */
        get: operations["getTransferPreview"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/transferSchedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * The API will return all the transfer schedules for a given Amazon SW account
         * @description Retrieve transfer schedules of a Seller Wallet bank account.
         */
        get: operations["listTransferSchedules"];
        /**
         * Update a transfer schedule information. Only fields (i.e; transferScheduleInformation, paymentPreference, transferScheduleStatus) in the request body can be updated.
         * @description Returns a transfer belonging to the updated scheduled transfer request
         */
        put: operations["updateTransferSchedule"];
        /**
         * Create a transfer schedule request from Amazon SW account to another customer provided account
         * @description Create a transfer schedule request from a Seller Wallet account to another customer-provided account.
         */
        post: operations["createTransferSchedule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/transfers/wallet/2024-03-01/transferSchedules/{transferScheduleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find particular Amazon Seller Wallet account transfer schedule by Amazon transfer schedule identifier
         * @description Find a particular Amazon Seller Wallet account transfer schedule.
         */
        get: operations["getTransferSchedule"];
        put?: never;
        post?: never;
        /**
         * Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account
         * @description Delete a transaction request that is scheduled from Amazon Seller Wallet account to another customer-provided account.
         */
        delete: operations["deleteScheduleTransaction"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/v0/financialEventGroups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns financial event groups for a given date range. It may take up to 48 hours for orders to appear in your financial events.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listFinancialEventGroups"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/v0/financialEventGroups/{eventGroupId}/financialEvents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns all financial events for the specified financial event group. It may take up to 48 hours for orders to appear in your financial events.
         *
         *     **Note:** This operation will only retrieve group's data for the past two years. If a request is submitted for data spanning more than two years, an empty response is returned.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listFinancialEventsByGroupId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/v0/financialEvents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns financial events for the specified data range. It may take up to 48 hours for orders to appear in your financial events. **Note:** in `ListFinancialEvents`, deferred events don't show up in responses until in they are released.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listFinancialEvents"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/finances/v0/orders/{orderId}/financialEvents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns all financial events for the specified order. It may take up to 48 hours for orders to appear in your financial events.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listFinancialEventsByOrderId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a list of inbound plans with minimal information.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInboundPlans"];
        put?: never;
        /** @description Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon's fufillment network.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createInboundPlan"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Fetches the top level information about an inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInboundPlan"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/boxes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of box packages in an inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInboundPlanBoxes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/cancellation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["cancelInboundPlan"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of item packages in an inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInboundPlanItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the name of an existing inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateInboundPlanName"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/boxes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves a page of boxes from a given packing group. These boxes were previously provided through the `setPackingInformation` operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listPackingGroupBoxes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listPackingGroupItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingInformation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["setPackingInformation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listPackingOptions"];
        put?: never;
        /** @description Generates available packing options for the inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generatePackingOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions/{packingOptionId}/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms the packing option for an inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmPackingOption"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/pallets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listInboundPlanPallets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listPlacementOptions"];
        put?: never;
        /** @description Generates placement options for the inbound plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generatePlacementOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions/{placementOptionId}/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmPlacementOption"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides the full details for a specific shipment within an inbound plan. The `transportationOptionId` inside `acceptedTransportationSelection` can be used to retrieve the transportation details for the shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipment"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/boxes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of box packages in a shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listShipmentBoxes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listShipmentContentUpdatePreviews"];
        put?: never;
        /** @description Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generateShipmentContentUpdatePreviews"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipmentContentUpdatePreview"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirm a shipment content update preview and accept the changes in transportation cost.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmShipmentContentUpdatePreview"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryChallanDocument": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provide delivery challan document for PCP transportation in IN marketplace.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getDeliveryChallanDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the `generateDeliveryWindowOptions` operation before becoming available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listDeliveryWindowOptions"];
        put?: never;
        /** @description Generates available delivery window options for a given shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generateDeliveryWindowOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions/{deliveryWindowOptionId}/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program `CONFIRMED_DELIVERY_WINDOW` require a delivery window to be confirmed prior to transportation option confirmation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmDeliveryWindowOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of item packages in a shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listShipmentItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/name": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the name of an existing shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateShipmentName"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/pallets": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listShipmentPallets"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentCancellation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Cancels a self-ship appointment slot against a shipment. Only available in the following [marketplaces](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids): MX, BR, EG, SA, AE, IN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | n | n |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        put: operations["cancelSelfShipAppointment"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse. Only available in the following [marketplaces](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids): MX, BR, EG, SA, AE, IN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | n | n |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        get: operations["getSelfShipAppointmentSlots"];
        put?: never;
        /** @description Initiates the process of generating the appointment slots list. Only available in the following [marketplaces](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids): MX, BR, EG, SA, AE, IN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | n | n |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        post: operations["generateSelfShipAppointmentSlots"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots/{slotId}/schedule": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms or reschedules a self-ship appointment slot against a shipment. Only available in the following [marketplaces](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids): MX, BR, EG, SA, AE, IN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | n | n |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        post: operations["scheduleSelfShipAppointment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/sourceAddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateShipmentSourceAddress"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/trackingDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates a shipment's tracking details.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateShipmentTrackingDetails"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieves all transportation options for a shipment. Transportation options must first be generated by the `generateTransportationOptions` operation before becoming available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["listTransportationOptions"];
        put?: never;
        /** @description Generates available transportation options for a given placement option.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generateTransportationOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions/confirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmTransportationOptions"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/items/compliance": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List the inbound compliance details for MSKUs in a given marketplace.\n\n**Note:** MSKUs that contain certain characters must be encoded. For more information, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\nThe following characters must be double percent encoded:\n\n- `%`\n- `+`\n- `,`\n\n**Examples:** An MSKU value of `test%msku` is encoded as `test%2525msku`. An MSKU value of `test,msku` is encoded as `test%252Cmsku`.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| n | n |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        get: operations["listItemComplianceDetails"];
        /** @description Update compliance details for a list of MSKUs. The details provided here are only used for the India (IN - A21TJRUUN4KGV) marketplace compliance validation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateItemComplianceDetails"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/items/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description For a given marketplace - creates labels for a list of MSKUs.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createMarketplaceItemLabels"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/items/prepDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get preparation details for a list of MSKUs in a specified marketplace.\n\n**Note:** MSKUs that contain certain characters must be encoded. For more information, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).\n\nThe following characters must be double percent encoded:\n\n- `%`\n- `+`\n- `,`\n\n**Examples:** An MSKU value of `test%msku` is encoded as `test%2525msku`. An MSKU value of `test,msku` is encoded as `test%252Cmsku`.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| n | n |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).  */
        get: operations["listPrepDetails"];
        put?: never;
        /** @description Set the preparation details for a list of MSKUs in a specified marketplace.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["setPrepDetails"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/inbound/fba/2024-03-20/operations/{operationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets the status of the processing of an asynchronous API call.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 6 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInboundOperationStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/2020-09-01/items/{sellerId}/{sku}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Creates a new or fully-updates an existing listings item for a selling partner.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["listingsItems_2020-09-01_putListingsItem"];
        post?: never;
        /** @description Delete a listings item for a selling partner.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["listingsItems_2020-09-01_deleteListingsItem"];
        options?: never;
        head?: never;
        /** @description Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that must be encoded to successfully call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        patch: operations["listingsItems_2020-09-01_patchListingsItem"];
        trace?: never;
    };
    "/listings/2021-08-01/items/{sellerId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Search for and return a list of selling partner listings items and their respective details.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["searchListingsItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/listings/2021-08-01/items/{sellerId}/{sku}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns details about a listings item for a selling partner.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput can receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API documentation. */
        get: operations["getListingsItem"];
        /** @description Creates a new or fully-updates an existing listings item for a selling partner.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput can receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API documentation. */
        put: operations["putListingsItem"];
        post?: never;
        /** @description Delete a listings item for a selling partner.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput can receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API documentation. */
        delete: operations["deleteListingsItem"];
        options?: never;
        head?: never;
        /** @description Partially update (patch) a listings item for a selling partner. Only top-level listings item attributes can be patched. Patching nested attributes is not supported.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput can receive higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api) in the Selling Partner API documentation. */
        patch: operations["patchListingsItem"];
        trace?: never;
    };
    "/listings/2021-08-01/restrictions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns listing restrictions for an item in the Amazon Catalog.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getListingsRestrictions"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of message types that are available for an order that you specify. A message type is represented by an actions object, which contains a path and query parameter(s). You can use the path and parameter(s) to call an operation that sends a message.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getMessagingActionsForOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/attributes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a response containing attributes related to an order. This includes buyer preferences.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 | */
        get: operations["GetAttributes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/amazonMotors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message to a buyer to provide details about an Amazon Motors order. This message can only be sent by Amazon Motors sellers.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["CreateAmazonMotors"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmCustomizationDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message asking a buyer to provide or verify customization details such as name spelling, images, initials, etc.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmCustomizationDetails"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmDeliveryDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message to a buyer to arrange a delivery or to confirm contact information for making a delivery.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createConfirmDeliveryDetails"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmOrderDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message to ask a buyer an order-related question prior to shipping their order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createConfirmOrderDetails"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/confirmServiceDetails": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message to contact a Home Service customer to arrange a service call or to gather information prior to a service call.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createConfirmServiceDetails"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/digitalAccessKey": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a buyer a message to share a digital access key that is required to utilize digital content in their order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createDigitalAccessKey"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/invoice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message providing the buyer an invoice */
        post: operations["sendInvoice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a critical message that contains documents that a seller is legally obligated to provide to the buyer. This message should only be used to deliver documents that are required by law.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createLegalDisclosure"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/unexpectedProblem": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a critical message to a buyer that an unexpected problem was encountered affecting the completion of the order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createUnexpectedProblem"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/messaging/v1/orders/{amazonOrderId}/messages/warranty": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a message to a buyer to provide details about warranty information on a purchase in their order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["CreateWarranty"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfn/v0/additionalSellerInputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Gets a list of additional seller inputs required for a ship method. This is generally used for international shipping.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getAdditionalSellerInputs"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfn/v0/eligibleShippingServices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns a list of shipping service offers that satisfy the specified shipment request details.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 6 | 12 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getEligibleShipmentServices"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfn/v0/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a shipment with the information provided.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["merchantFulfillmentV0_createShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mfn/v0/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the shipment information for an existing shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["merchantFulfillmentV0_getShipment"];
        put?: never;
        post?: never;
        /** @description Cancel the shipment indicated by the specified shipment identifier.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that are applied to the requested operation when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the SP-API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["merchantFulfillmentV0_cancelShipment"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/v1/destinations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about all destinations. The `getDestinations` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getDestinations"];
        put?: never;
        /** @description Creates a destination resource to receive notifications. The `createDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createDestination"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/v1/destinations/{destinationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about the destination that you specify. The `getDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getDestination"];
        put?: never;
        post?: never;
        /** @description Deletes the destination that you specify. The `deleteDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["deleteDestination"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/v1/subscriptions/{notificationType}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about subscription of the specified notification type and payload version. `payloadVersion` is an optional parameter. When `payloadVersion` is not provided, it will return latest payload version subscription's information. You can use this API to get subscription information when you do not have a subscription identifier.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getSubscription"];
        put?: never;
        /** @description Creates a subscription for the specified notification type to be delivered to the specified destination. Before you can subscribe, you must first create the destination by calling the `createDestination` operation. In cases where the specified notification type supports multiple payload versions, you can utilize this API to subscribe to a different payload version if you already have an existing subscription for a different payload version.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createSubscription"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/v1/subscriptions/{notificationType}/{subscriptionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about a subscription for the specified notification type. The `getSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getSubscriptionById"];
        put?: never;
        post?: never;
        /** @description Deletes the subscription indicated by the subscription identifier and notification type that you specify. The subscription identifier can be for any subscription associated with your application. After you successfully call this operation, notifications will stop being sent for the associated subscription. The `deleteSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["deleteSubscriptionById"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns orders that are created or updated during the specified time period. If you want to return specific types of orders, you can apply filters to your request. `NextToken` doesn't affect any filters that you include in your request; it only impacts the pagination for the filtered orders response.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["ordersV0_getOrders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["ordersV0_getOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/address": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the shipping address for the order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderAddress"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/buyerInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns buyer information for the order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderBuyerInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/orderItems": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns detailed order item information for the order that you specify. If `NextToken` is provided, it's used to retrieve the next page of order items.
         *
         *     __Note__: When an order is in the Pending state (the order has been placed but payment has not been authorized), the getOrderItems operation does not return information about pricing, taxes, shipping charges, gift status or promotions for the order items in the order. After an order leaves the Pending state (this occurs when payment has been authorized) and enters the Unshipped, Partially Shipped, or Shipped state, the getOrderItems operation returns information about pricing, taxes, shipping charges, gift status and promotions for the order items in the order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderItems"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/orderItems/buyerInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns buyer information for the order items in the order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderItemsBuyerInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/regulatedInfo": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns regulated information for the order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderRegulatedInfo"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** @description Updates (approves or rejects) the verification status of an order containing regulated products.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 30 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        patch: operations["updateVerificationStatus"];
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/shipment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Update the shipment status for an order that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["updateShipmentStatus"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/orders/v0/orders/{orderId}/shipmentConfirmation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Updates the shipment confirmation status for a specified order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["confirmShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/fees/v0/feesEstimate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the estimated fees for a list of products.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getMyFeesEstimates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/fees/v0/items/{Asin}/feesEstimate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the estimated fees for the item indicated by the specified ASIN in the marketplace specified in the request body.
         *
         *     You can call `getMyFeesEstimateForASIN` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take estimated fees into account. Each fees request must include an original identifier. This identifier is included in the fees estimate so you can correlate a fees estimate with the original request.
         *
         *     **Note:** This identifier value is used to identify an estimate. Actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
         *
         *     **Note:** When using the `getMyFeesEstimateForASIN` operation with an ASIN, the fee estimates might be different. This is because these estimates use the item's catalog size, which might not always match the actual size of the item sent to Amazon.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getMyFeesEstimateForASIN"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/fees/v0/listings/{SellerSKU}/feesEstimate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the estimated fees for the item indicated by the specified seller SKU in the marketplace specified in the request body.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     You can call `getMyFeesEstimateForSKU` for an item on behalf of a selling partner before the selling partner sets the item's price. The selling partner can then take any estimated fees into account. Each fees estimate request must include an original identifier. This identifier is included in the fees estimate so that you can correlate a fees estimate with the original request.
         *
         *     **Note:** This identifier value is used to identify an estimate. Actual costs may vary. Search "fees" in [Seller Central](https://sellercentral.amazon.com/) and consult the store-specific fee schedule for the most up-to-date information.
         *
         *     **Note:** When sellers use the `getMyFeesEstimateForSKU` operation with their `SellerSKU`, they get accurate fees based on real item measurements, but only after they've sent their items to Amazon.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getMyFeesEstimateForSKU"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/pricing/v0/competitivePrice": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns competitive pricing information for a seller's offer listings based on seller SKU or ASIN.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getCompetitivePricing"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/pricing/v0/items/{Asin}/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the lowest priced offers for a single item based on ASIN.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getItemOffers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/pricing/v0/listings/{SellerSKU}/offers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the lowest priced offers for a single SKU listing.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getListingOffers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/products/pricing/v0/price": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns pricing information for a seller's offer listings based on seller SKU or ASIN.
         *
         *     **Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.5 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPricing"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/replenishment/2022-11-07/offers/metrics/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns aggregated replenishment program metrics for a selling partner's offers.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["listOfferMetrics"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/replenishment/2022-11-07/offers/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the details of a selling partner's replenishment program offers.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["listOffers"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/replenishment/2022-11-07/sellingPartners/metrics/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns aggregated replenishment program metrics for a selling partner.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getSellingPartnerMetrics"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/2021-06-30/documents/{reportDocumentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the information required for retrieving a report document's contents.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getReportDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/2021-06-30/reports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns report details for the reports that match the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getReports"];
        put?: never;
        /** @description Creates a report.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createReport"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/2021-06-30/reports/{reportId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns report details (including the `reportDocumentId`, if available) for the report that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getReport"];
        put?: never;
        post?: never;
        /** @description Cancels the report that you specify. Only reports with `processingStatus=IN_QUEUE` can be cancelled. Cancelled reports are returned in subsequent calls to the `getReport` and `getReports` operations.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["cancelReport"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/2021-06-30/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns report schedule details that match the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getReportSchedules"];
        put?: never;
        /** @description Creates a report schedule. If a report schedule with the same report type and marketplace IDs already exists, it will be cancelled and replaced with this one.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createReportSchedule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reports/2021-06-30/schedules/{reportScheduleId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns report schedule details for the report schedule that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getReportSchedule"];
        put?: never;
        post?: never;
        /** @description Cancels the report schedule that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0222 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["cancelReportSchedule"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sales/v1/orderMetrics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns aggregated order metrics for given interval, broken down by granularity, for given buyer type.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | .5 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrderMetrics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sellers/v1/account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns information about a seller account and its marketplaces.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.016 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sellers/v1/marketplaceParticipations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of marketplaces where the seller can list items and information about the seller's participation in those marketplaces.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.016 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getMarketplaceParticipations"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/appointmentSlots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets appointment slots as per the service context specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 20 | 40 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getAppointmentSlots"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates an upload destination.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createServiceDocumentUploadDestination"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/reservation": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a reservation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createReservation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/reservation/{reservationId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update a reservation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateReservation"];
        post?: never;
        /** @description Cancel a reservation.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        delete: operations["cancelReservation"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets service job details for the specified filter query.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 40 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getServiceJobs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets details of service job indicated by the provided `serviceJobID`.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 20 | 40 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getServiceJobByServiceJobId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/appointments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Adds an appointment to the service job indicated by the service job identifier specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["addAppointmentForServiceJobByServiceJobId"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Reschedules an appointment for the service job indicated by the service job identifier specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["rescheduleAppointmentForServiceJobByServiceJobId"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/fulfillment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Updates the appointment fulfillment data related to a given `jobID` and `appointmentID`.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["setAppointmentFulfillmentData"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/appointments/{appointmentId}/resources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Assigns new resource(s) or overwrite/update the existing one(s) to a service job appointment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 2 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["assignAppointmentResources"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/appointmentSlots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Gets appointment slots for the service associated with the service job id specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getAppointmmentSlotsByJobId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/cancellations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Cancels the service job indicated by the service job identifier specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["cancelServiceJobByServiceJobId"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceJobs/{serviceJobId}/completions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Completes the service job indicated by the service job identifier specified.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["completeServiceJobByServiceJobId"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceResources/{resourceId}/capacity/fixed": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Provides capacity in fixed-size slots.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getFixedSlotCapacity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceResources/{resourceId}/capacity/range": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Provides capacity slots in a format similar to availability records.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["getRangeSlotCapacity"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/service/v1/serviceResources/{resourceId}/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update the schedule of the given resource.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["updateSchedule"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Verify if the current account is valid.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        get: operations["shipping_getAccount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/purchaseShipment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Purchase shipping labels.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        post: operations["purchaseShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Get service rates.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        post: operations["getRates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Create a new shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Return the entire shipment object for the shipmentId.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        get: operations["shipping_getShipment"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/shipments/{shipmentId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Cancel a shipment by the given shipmentId.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        post: operations["cancelShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/shipments/{shipmentId}/containers/{trackingId}/label": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Retrieve shipping label based on the shipment id and tracking id.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        post: operations["retrieveShippingLabel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/shipments/{shipmentId}/purchaseLabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Purchase shipping labels based on a given rate.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 15 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        post: operations["purchaseLabels"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v1/tracking/{trackingId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Return the tracking information of a shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     For more information, see "Usage Plans and Rate Limits" in the Selling Partner API documentation. */
        get: operations["getTrackingInformation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/accessPoints": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of access points in proximity of input postal code.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getAccessPoints"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/carrierAccountFormInputs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description This API will return a list of input schema required to register a shipper account with the carrier.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getCarrierAccountFormInputs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/carrierAccounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description This API will return Get all carrier accounts for a merchant.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["getCarrierAccounts"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/carrierAccounts/{carrierId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description This API associates/links the specified carrier account with the merchant.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["linkCarrierAccount"];
        /** @description This API associates/links the specified carrier account with the merchant.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 5 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["shippingV2_linkCarrierAccount"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/carrierAccounts/{carrierId}/unlink": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description This API Unlink the specified carrier account with the merchant.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["unlinkCarrierAccount"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/claims": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description This API will be used to create claim for single eligible shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createClaim"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/collectionForms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description This API  Call to generate the collection form.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["generateCollectionForm"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/collectionForms/{collectionFormId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description This API reprint a collection form.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getCollectionForm"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/collectionForms/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description This API Call to get the history of the previously generated collection forms.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["getCollectionFormHistory"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/ndrFeedback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description This API submits the NDR (Non-delivery Report) Feedback for any eligible shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["submitNdrFeedback"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/oneClickShipment": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Purchases a shipping service identifier and returns purchase-related details and documents.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["oneClickShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Purchases a shipping service and returns purchase related details and documents.
         *
         *     Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to "TOKEN_EXPIRED". If you receive this error response, you must get the rates for the shipment again.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["shippingV2_purchaseShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments/{shipmentId}/cancel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["shippingV2_cancelShipment"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments/{shipmentId}/documents": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the shipping documents associated with a package in a shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getShipmentDocuments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments/additionalInputs/schema": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getAdditionalInputs"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments/directPurchase": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["directPurchaseShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/shipments/rates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns the available shipping service offerings.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["shippingV2_getRates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/tracking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns tracking information for a purchased shipment.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getTracking"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/shipping/v2/unmanifestedShipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments
         *             with an eligible carrier for manifesting shall be returned.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 80 | 100 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        put: operations["getUnmanifestedShipments"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/solicitations/v1/orders/{amazonOrderId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of solicitation types that are available for an order that you specify. A solicitation type is represented by an actions object, which contains a path and query parameter(s). You can use the path and parameter(s) to call an operation that sends a solicitation. Currently only the productReviewAndSellerFeedbackSolicitation solicitation type is available.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getSolicitationActionsForOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/solicitations/v1/orders/{amazonOrderId}/solicitations/productReviewAndSellerFeedback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sends a solicitation to a buyer asking for seller feedback and a product review for the specified order. Send only one productReviewAndSellerFeedback or free form proactive message per order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 5 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createProductReviewAndSellerFeedbackSolicitation"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supplySources/2020-07-01/supplySources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The path to retrieve paginated supply sources. */
        get: operations["getSupplySources"];
        put?: never;
        /** @description Create a new supply source. */
        post: operations["createSupplySource"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supplySources/2020-07-01/supplySources/{supplySourceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Retrieve a supply source. */
        get: operations["getSupplySource"];
        /** @description Update the configuration and capabilities of a supply source. */
        put: operations["updateSupplySource"];
        post?: never;
        /** @description Archive a supply source, making it inactive. Cannot be undone. */
        delete: operations["archiveSupplySource"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/supplySources/2020-07-01/supplySources/{supplySourceId}/status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** @description Update the status of a supply source. */
        put: operations["updateSupplySourceStatus"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/attributes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns marketplace-dependent schemas and their respective set of possible values.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoicesAttributes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/documents/{invoicesDocumentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the invoice document's ID and URL. Use the URL to download the ZIP file, which contains the invoices from the corresponding `createInvoicesExport` request.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.0167 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoicesDocument"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/exports": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns invoice exports details for exports that match the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.1 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoicesExports"];
        put?: never;
        /** @description Creates an invoice export request.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.167 | 1 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createInvoicesExport"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/exports/{exportId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns invoice export details (including the `exportDocumentId`, if available) for the export that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoicesExport"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/invoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns invoice details for the invoices that match the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 0.1 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tax/invoices/2024-06-19/invoices/{invoiceId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns invoice data for the specified invoice. This operation returns only a subset of the invoices data; refer to the response definition to get all the possible attributes.
         *     To get the full invoice, use the `createInvoicesExport` operation to start an export request.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 2 | 15 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getInvoice"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/tokens/2021-03-01/restrictedDataToken": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Returns a Restricted Data Token (RDT) for one or more restricted resources that you specify. A restricted resource is the HTTP method and path from a restricted operation that returns Personally Identifiable Information (PII), plus a dataElements value that indicates the type of PII requested. See the Tokens API Use Case Guide for a list of restricted operations. Use the RDT returned here as the access token in subsequent calls to the corresponding restricted operations.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 1 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createRestrictedDataToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/uploads/2020-11-01/uploadDestinations/{resource}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Creates an upload destination, returning the information required to upload a file to the destination and to programmatically access the file.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["createUploadDestinationForResource"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/inventory/v1/warehouses/{warehouseId}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits inventory updates for the specified warehouse for either a partial or full feed of inventory items.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["submitInventoryUpdate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/2021-12-28/acknowledgements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits acknowledgements for one or more purchase orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["submitAcknowledgement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/2021-12-28/purchaseOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of purchase orders created during the time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both parameters. You can choose to get only the purchase order numbers by setting the includeDetails parameter to false. In that case, the operation returns a list of purchase order numbers. You can then call the getOrder operation to return the details of a specific order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/2021-12-28/purchaseOrders/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns purchase order information for the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/v1/acknowledgements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits acknowledgements for one or more purchase orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["vendorDirectFulfillmentOrdersV1_submitAcknowledgement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/v1/purchaseOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of purchase orders created during the time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both parameters. You can choose to get only the purchase order numbers by setting the includeDetails parameter to false. In that case, the operation returns a list of purchase order numbers. You can then call the getOrder operation to return the details of a specific order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentOrdersV1_getOrders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/orders/v1/purchaseOrders/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns purchase order information for the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentOrdersV1_getOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/payments/v1/invoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits one or more invoices for a vendor's direct fulfillment orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["submitInvoice"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/sandbox/2021-10-28/orders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits a request to generate test order data for Vendor Direct Fulfillment API entities. */
        post: operations["generateOrderScenarios"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/sandbox/2021-10-28/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the status of the transaction indicated by the specified transactionId. If the transaction was successful, also returns the requested test order data. */
        get: operations["getOrderScenarios"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/containerLabel": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * createContainerLabel
         * @description Creates a container (pallet) label for the associated shipment package.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         */
        post: operations["createContainerLabel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/customerInvoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCustomerInvoices
         * @description Returns a list of customer invoices created during a time frame that you specify. You define the time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must be no more than 7 days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getCustomerInvoices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/customerInvoices/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getCustomerInvoice
         * @description Returns a customer invoice based on the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getCustomerInvoice"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/packingSlips": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getPackingSlips
         * @description Returns a list of packing slips for the purchase orders that match the criteria specified. Date range to search must not be more than 7 days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getPackingSlips"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/packingSlips/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getPackingSlip
         * @description Returns a packing slip based on the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getPackingSlip"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/shipmentConfirmations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * submitShipmentConfirmations
         * @description Submits one or more shipment confirmations for vendor orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        post: operations["submitShipmentConfirmations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/shipmentStatusUpdates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * submitShipmentStatusUpdates
         * @description This operation is only to be used by Vendor-Own-Carrier (VOC) vendors. Calling this API submits a shipment status update for the package that a vendor has shipped. It will provide the Amazon customer visibility on their order, when the package is outside of Amazon Network visibility.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        post: operations["submitShipmentStatusUpdates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getShippingLabels
         * @description Returns a list of shipping labels created during the time frame that you specify. Use the `createdAfter` and `createdBefore` parameters to define the time frame. You must use both of these parameters. The date range to search must not be more than seven days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getShippingLabels"];
        put?: never;
        /**
         * submitShippingLabelRequest
         * @description Creates a shipping label for a purchase order and returns a `transactionId` for reference.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        post: operations["submitShippingLabelRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/2021-12-28/shippingLabels/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * getShippingLabel
         * @description Returns a shipping label for the `purchaseOrderNumber` that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        get: operations["getShippingLabel"];
        put?: never;
        /**
         * createShippingLabels
         * @description Creates shipping labels for a purchase order and returns the labels.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits).
         */
        post: operations["createShippingLabels"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/customerInvoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of customer invoices created during a time frame that you specify. You define the  time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must be no more than 7 days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getCustomerInvoices"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/customerInvoices/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a customer invoice based on the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getCustomerInvoice"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/packingSlips": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of packing slips for the purchase orders that match the criteria specified. Date range to search must not be more than 7 days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getPackingSlips"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/packingSlips/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a packing slip based on the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getPackingSlip"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/shipmentConfirmations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits one or more shipment confirmations for vendor orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["vendorDirectFulfillmentShippingV1_submitShipmentConfirmations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/shipmentStatusUpdates": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description This API call is only to be used by Vendor-Own-Carrier (VOC) vendors. Calling this API will submit a shipment status update for the package that a vendor has shipped. It will provide the Amazon customer visibility on their order, when the package is outside of Amazon Network visibility.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["vendorDirectFulfillmentShippingV1_submitShipmentStatusUpdates"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/shippingLabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of shipping labels created during the time frame that you specify. You define that time frame using the createdAfter and createdBefore parameters. You must use both of these parameters. The date range to search must not be more than 7 days.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getShippingLabels"];
        put?: never;
        /** @description Creates a shipping label for a purchase order and returns a transactionId for reference.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["vendorDirectFulfillmentShippingV1_submitShippingLabelRequest"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/shipping/v1/shippingLabels/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a shipping label for the purchaseOrderNumber that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentShippingV1_getShippingLabel"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/transactions/2021-12-28/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the status of the transaction indicated by the specified transactionId.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getTransactionStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/directFulfillment/transactions/v1/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the status of the transaction indicated by the specified transactionId.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorDirectFulfillmentTransactionsV1_getTransactionStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/orders/v1/acknowledgements": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submits acknowledgements for one or more purchase orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["vendorOrders_submitAcknowledgement"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/orders/v1/purchaseOrders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a list of purchase orders created or changed during the time frame that you specify. You define the time frame using the `createdAfter`, `createdBefore`, `changedAfter` and `changedBefore` parameters. The date range to search must not be more than 7 days. You can choose to get only the purchase order numbers by setting `includeDetails` to false. You can then use the `getPurchaseOrder` operation to receive details for a specific purchase order.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPurchaseOrders"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/orders/v1/purchaseOrders/{purchaseOrderNumber}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns a purchase order based on the `purchaseOrderNumber` value that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPurchaseOrder"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/orders/v1/purchaseOrdersStatus": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns purchase order statuses based on the filters that you specify. Date range to search must not be more than 7 days. You can return a list of purchase order statuses using the available filters, or a single purchase order status by providing the purchase order number.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["getPurchaseOrdersStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/payments/v1/invoices": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Submit new invoices to Amazon.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        post: operations["submitInvoices"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/shipping/v1/shipmentConfirmations": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * SubmitShipmentConfirmations
         * @description Submits one or more shipment confirmations for vendor orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         */
        post: operations["SubmitShipmentConfirmations"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/shipping/v1/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * GetShipmentDetails
         * @description Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         */
        get: operations["GetShipmentDetails"];
        put?: never;
        /**
         * SubmitShipments
         * @description Submits one or more shipment request for vendor Orders.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
         */
        post: operations["SubmitShipments"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/shipping/v1/transportLabels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns small parcel shipment labels based on the filters that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 10 |
         *
         *     The `x-amzn-RateLimit-Limit` response header contains the usage plan rate limits for the operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput might have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["GetShipmentLabels"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/vendor/transactions/v1/transactions/{transactionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Returns the status of the transaction that you specify.
         *
         *     **Usage Plan:**
         *
         *     | Rate (requests per second) | Burst |
         *     | ---- | ---- |
         *     | 10 | 20 |
         *
         *     The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api). */
        get: operations["vendorTransactionStatus_getTransaction"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description A token that you use to retrieve the next page of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextPageToken` is null. Note that this operation can return empty pages. */
        "aplusContent_2020-11-01_AplusPaginatedResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"] & {
            nextPageToken?: components["schemas"]["aplusContent_2020-11-01_PageToken"];
        };
        /** @description The base response data for all A+ Content operations when a request is successful or partially successful. Individual operations can extend this with additional data. */
        "aplusContent_2020-11-01_AplusResponse": {
            warnings?: components["schemas"]["aplusContent_2020-11-01_MessageSet"];
        };
        /** @description The Amazon Standard Identification Number (ASIN). */
        "aplusContent_2020-11-01_Asin": string;
        /**
         * @description A flag that provides additional information about an ASIN. This is contextual and can change depending on the request that generated it.
         * @enum {string}
         */
        "aplusContent_2020-11-01_AsinBadge": "BRAND_NOT_ELIGIBLE" | "CATALOG_NOT_FOUND" | "CONTENT_NOT_PUBLISHED" | "CONTENT_PUBLISHED";
        /** @description The set of ASIN badges. */
        "aplusContent_2020-11-01_AsinBadgeSet": components["schemas"]["aplusContent_2020-11-01_AsinBadge"][];
        /** @description The A+ Content ASIN with additional metadata for content management. If you don't include the `includedDataSet` parameter in a call to the `listContentDocumentAsinRelations` operation, the related ASINs are returned without metadata. */
        "aplusContent_2020-11-01_AsinMetadata": {
            asin: components["schemas"]["aplusContent_2020-11-01_Asin"];
            badgeSet?: components["schemas"]["aplusContent_2020-11-01_AsinBadgeSet"];
            contentReferenceKeySet?: components["schemas"]["aplusContent_2020-11-01_ContentReferenceKeySet"];
            /** @description The default image for the ASIN in the Amazon catalog. */
            imageUrl?: string;
            parent?: components["schemas"]["aplusContent_2020-11-01_Asin"];
            /** @description The title for the ASIN in the Amazon catalog. */
            title?: string;
        };
        /** @description The set of ASIN metadata. */
        "aplusContent_2020-11-01_AsinMetadataSet": components["schemas"]["aplusContent_2020-11-01_AsinMetadata"][];
        /** @description The set of ASINs. */
        "aplusContent_2020-11-01_AsinSet": components["schemas"]["aplusContent_2020-11-01_Asin"][];
        /**
         * @description The relative color scheme of your content.
         * @enum {string}
         */
        "aplusContent_2020-11-01_ColorType": "DARK" | "LIGHT";
        /**
         * @description A flag that provides additional information about an A+ Content document.
         * @enum {string}
         */
        "aplusContent_2020-11-01_ContentBadge": "BULK" | "GENERATED" | "LAUNCHPAD" | "PREMIUM" | "STANDARD";
        /** @description The set of content badges. */
        "aplusContent_2020-11-01_ContentBadgeSet": components["schemas"]["aplusContent_2020-11-01_ContentBadge"][];
        /** @description The A+ Content document. This is the enhanced content that is published to product detail pages. */
        "aplusContent_2020-11-01_ContentDocument": {
            contentModuleList: components["schemas"]["aplusContent_2020-11-01_ContentModuleList"];
            contentSubType?: components["schemas"]["aplusContent_2020-11-01_ContentSubType"];
            contentType: components["schemas"]["aplusContent_2020-11-01_ContentType"];
            locale: components["schemas"]["aplusContent_2020-11-01_LanguageTag"];
            /** @description The A+ Content document name. */
            name: string;
        };
        /** @description The A+ Content document's metadata. */
        "aplusContent_2020-11-01_ContentMetadata": {
            badgeSet: components["schemas"]["aplusContent_2020-11-01_ContentBadgeSet"];
            marketplaceId: components["schemas"]["aplusContent_2020-11-01_MarketplaceId"];
            /** @description The A+ Content document's name. */
            name: string;
            status: components["schemas"]["aplusContent_2020-11-01_ContentStatus"];
            /**
             * Format: date-time
             * @description The approximate age of the A+ Content document and metadata.
             */
            updateTime: string;
        };
        /** @description The metadata for an A+ Content document, with additional information for content management. */
        "aplusContent_2020-11-01_ContentMetadataRecord": {
            contentMetadata: components["schemas"]["aplusContent_2020-11-01_ContentMetadata"];
            contentReferenceKey: components["schemas"]["aplusContent_2020-11-01_ContentReferenceKey"];
        };
        /** @description A list of A+ Content metadata records. */
        "aplusContent_2020-11-01_ContentMetadataRecordList": components["schemas"]["aplusContent_2020-11-01_ContentMetadataRecord"][];
        /** @description An A+ Content module. An A+ Content document is composed of content modules. The `contentModuleType` property selects which content module types to use. */
        "aplusContent_2020-11-01_ContentModule": {
            contentModuleType: components["schemas"]["aplusContent_2020-11-01_ContentModuleType"];
            standardCompanyLogo?: components["schemas"]["aplusContent_2020-11-01_StandardCompanyLogoModule"];
            standardComparisonTable?: components["schemas"]["aplusContent_2020-11-01_StandardComparisonTableModule"];
            standardFourImageText?: components["schemas"]["aplusContent_2020-11-01_StandardFourImageTextModule"];
            standardFourImageTextQuadrant?: components["schemas"]["aplusContent_2020-11-01_StandardFourImageTextQuadrantModule"];
            standardHeaderImageText?: components["schemas"]["aplusContent_2020-11-01_StandardHeaderImageTextModule"];
            standardImageSidebar?: components["schemas"]["aplusContent_2020-11-01_StandardImageSidebarModule"];
            standardImageTextOverlay?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextOverlayModule"];
            standardMultipleImageText?: components["schemas"]["aplusContent_2020-11-01_StandardMultipleImageTextModule"];
            standardProductDescription?: components["schemas"]["aplusContent_2020-11-01_StandardProductDescriptionModule"];
            standardSingleImageHighlights?: components["schemas"]["aplusContent_2020-11-01_StandardSingleImageHighlightsModule"];
            standardSingleImageSpecsDetail?: components["schemas"]["aplusContent_2020-11-01_StandardSingleImageSpecsDetailModule"];
            standardSingleSideImage?: components["schemas"]["aplusContent_2020-11-01_StandardSingleSideImageModule"];
            standardTechSpecs?: components["schemas"]["aplusContent_2020-11-01_StandardTechSpecsModule"];
            standardText?: components["schemas"]["aplusContent_2020-11-01_StandardTextModule"];
            standardThreeImageText?: components["schemas"]["aplusContent_2020-11-01_StandardThreeImageTextModule"];
        };
        /** @description A list of A+ Content modules. */
        "aplusContent_2020-11-01_ContentModuleList": components["schemas"]["aplusContent_2020-11-01_ContentModule"][];
        /**
         * @description The type of A+ Content module.
         * @enum {string}
         */
        "aplusContent_2020-11-01_ContentModuleType": "STANDARD_COMPANY_LOGO" | "STANDARD_COMPARISON_TABLE" | "STANDARD_FOUR_IMAGE_TEXT" | "STANDARD_FOUR_IMAGE_TEXT_QUADRANT" | "STANDARD_HEADER_IMAGE_TEXT" | "STANDARD_IMAGE_SIDEBAR" | "STANDARD_IMAGE_TEXT_OVERLAY" | "STANDARD_MULTIPLE_IMAGE_TEXT" | "STANDARD_PRODUCT_DESCRIPTION" | "STANDARD_SINGLE_IMAGE_HIGHLIGHTS" | "STANDARD_SINGLE_IMAGE_SPECS_DETAIL" | "STANDARD_SINGLE_SIDE_IMAGE" | "STANDARD_TECH_SPECS" | "STANDARD_TEXT" | "STANDARD_THREE_IMAGE_TEXT";
        /** @description A content document with additional information for content management. */
        "aplusContent_2020-11-01_ContentRecord": {
            contentDocument?: components["schemas"]["aplusContent_2020-11-01_ContentDocument"];
            contentMetadata?: components["schemas"]["aplusContent_2020-11-01_ContentMetadata"];
            contentReferenceKey: components["schemas"]["aplusContent_2020-11-01_ContentReferenceKey"];
        };
        /** @description A unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ content identifier. */
        "aplusContent_2020-11-01_ContentReferenceKey": string;
        /** @description A set of content reference keys. */
        "aplusContent_2020-11-01_ContentReferenceKeySet": components["schemas"]["aplusContent_2020-11-01_ContentReferenceKey"][];
        /**
         * @description The submission status of the content document.
         * @enum {string}
         */
        "aplusContent_2020-11-01_ContentStatus": "APPROVED" | "DRAFT" | "REJECTED" | "SUBMITTED";
        /** @description The A+ Content document subtype. This represents a special-purpose type of an A+ Content document. Not every A+ Content document type has a subtype, and subtypes can change at any time. */
        "aplusContent_2020-11-01_ContentSubType": string;
        /**
         * @description The A+ Content document type.
         * @enum {string}
         */
        "aplusContent_2020-11-01_ContentType": "EBC" | "EMC";
        /** @description A decorator that is applied to a content string value in order to create rich text. */
        "aplusContent_2020-11-01_Decorator": {
            /** @description The relative intensity or variation of this decorator. Decorators, such as bullet-points, can have multiple indentation depths. */
            depth?: number;
            /** @description The number of content characters to alter with this decorator. Decorators, such as line breaks, can have zero length and fit between characters. */
            length?: number;
            /** @description The starting value of this decorator within the content string. Use zero (`0`) for the first value. */
            offset?: number;
            type?: components["schemas"]["aplusContent_2020-11-01_DecoratorType"];
        };
        /** @description A set of content decorators. */
        "aplusContent_2020-11-01_DecoratorSet": components["schemas"]["aplusContent_2020-11-01_Decorator"][];
        /**
         * @description The type of rich text decorator.
         * @enum {string}
         */
        "aplusContent_2020-11-01_DecoratorType": "LIST_ITEM" | "LIST_ORDERED" | "LIST_UNORDERED" | "STYLE_BOLD" | "STYLE_ITALIC" | "STYLE_LINEBREAK" | "STYLE_PARAGRAPH" | "STYLE_UNDERLINE";
        /** @description The error response that is returned when the request is unsuccessful. */
        "aplusContent_2020-11-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description The error response that is returned when a request is unsuccessful. */
        "aplusContent_2020-11-01_ErrorList": {
            /** @description A list of error responses that are returned when a request is unsuccessful. */
            errors: components["schemas"]["aplusContent_2020-11-01_Error"][];
        };
        "aplusContent_2020-11-01_GetContentDocumentResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"] & {
            contentRecord: components["schemas"]["aplusContent_2020-11-01_ContentRecord"];
        };
        /** @description A reference to an image, hosted in the A+ Content media library. */
        "aplusContent_2020-11-01_ImageComponent": {
            /** @description The alternative text for the image. */
            altText: string;
            imageCropSpecification: components["schemas"]["aplusContent_2020-11-01_ImageCropSpecification"];
            /** @description This identifier is provided by the [Uploads API](https://developer-docs.amazon.com/sp-api/reference/welcome-to-api-references). */
            uploadDestinationId: string;
        };
        /** @description The instructions for optionally cropping an image. If you don't want to crop the image, set the dimensions to the original image size. If the image is cropped and you don't include offset values, the coordinates of the top left corner of the cropped image are set to (0,0) by default. */
        "aplusContent_2020-11-01_ImageCropSpecification": {
            offset?: components["schemas"]["aplusContent_2020-11-01_ImageOffsets"];
            size: components["schemas"]["aplusContent_2020-11-01_ImageDimensions"];
        };
        /** @description The dimensions that extend from the top left corner of the image (this applies to cropped and uncropped images). `ImageDimensions` units must be in pixels. */
        "aplusContent_2020-11-01_ImageDimensions": {
            height: components["schemas"]["aplusContent_2020-11-01_IntegerWithUnits"];
            width: components["schemas"]["aplusContent_2020-11-01_IntegerWithUnits"];
        };
        /** @description The top left corner of the cropped image, specified in the original image's coordinate space. */
        "aplusContent_2020-11-01_ImageOffsets": {
            x: components["schemas"]["aplusContent_2020-11-01_IntegerWithUnits"];
            y: components["schemas"]["aplusContent_2020-11-01_IntegerWithUnits"];
        };
        /** @description A whole number dimension and its unit of measurement. For example, this can represent 100 pixels. */
        "aplusContent_2020-11-01_IntegerWithUnits": {
            /** @description The unit of measurement. */
            units: string;
            /** @description The dimension value. */
            value: number;
        };
        /** @description The IETF language tag, which supports the primary language subtag and one secondary language subtag. The secondary language subtag is usually a regional designation. This doesn't support subtags other than the primary and secondary subtags.
         *     **Pattern:** ^[a-z]{2,}-[A-Z0-9]{2,}$ */
        "aplusContent_2020-11-01_LanguageTag": string;
        "aplusContent_2020-11-01_ListContentDocumentAsinRelationsResponse": components["schemas"]["aplusContent_2020-11-01_AplusPaginatedResponse"] & {
            asinMetadataSet: components["schemas"]["aplusContent_2020-11-01_AsinMetadataSet"];
        };
        /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
        "aplusContent_2020-11-01_MarketplaceId": string;
        /** @description A set of messages to the user, such as warnings or comments. */
        "aplusContent_2020-11-01_MessageSet": components["schemas"]["aplusContent_2020-11-01_Error"][];
        /** @description A token that you use to fetch a specific page when there are multiple pages of results. */
        "aplusContent_2020-11-01_PageToken": string;
        /** @description A list of rich text content that is typically presented in a text box. */
        "aplusContent_2020-11-01_ParagraphComponent": {
            textList: components["schemas"]["aplusContent_2020-11-01_TextComponent"][];
        };
        /** @description Plain positional text that is used in collections of brief labels and descriptors. */
        "aplusContent_2020-11-01_PlainTextItem": {
            /** @description The rank or index of this text item within the collection. Different items cannot occupy the same position within a single collection. */
            position: number;
            /** @description The actual plain text. */
            value: string;
        };
        /**
         * @description The content's relative positioning.
         * @enum {string}
         */
        "aplusContent_2020-11-01_PositionType": "LEFT" | "RIGHT";
        "aplusContent_2020-11-01_PostContentDocumentApprovalSubmissionResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"];
        "aplusContent_2020-11-01_PostContentDocumentAsinRelationsRequest": {
            asinSet: components["schemas"]["aplusContent_2020-11-01_AsinSet"];
        };
        "aplusContent_2020-11-01_PostContentDocumentAsinRelationsResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"];
        "aplusContent_2020-11-01_PostContentDocumentRequest": {
            contentDocument: components["schemas"]["aplusContent_2020-11-01_ContentDocument"];
        };
        "aplusContent_2020-11-01_PostContentDocumentResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"] & {
            contentReferenceKey: components["schemas"]["aplusContent_2020-11-01_ContentReferenceKey"];
        };
        "aplusContent_2020-11-01_PostContentDocumentSuspendSubmissionResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"];
        /** @description The full context for an A+ Content publishing event. */
        "aplusContent_2020-11-01_PublishRecord": {
            asin: components["schemas"]["aplusContent_2020-11-01_Asin"];
            contentReferenceKey: components["schemas"]["aplusContent_2020-11-01_ContentReferenceKey"];
            contentSubType?: components["schemas"]["aplusContent_2020-11-01_ContentSubType"];
            contentType: components["schemas"]["aplusContent_2020-11-01_ContentType"];
            locale: components["schemas"]["aplusContent_2020-11-01_LanguageTag"];
            marketplaceId: components["schemas"]["aplusContent_2020-11-01_MarketplaceId"];
        };
        /** @description A list of A+ Content publishing records. */
        "aplusContent_2020-11-01_PublishRecordList": components["schemas"]["aplusContent_2020-11-01_PublishRecord"][];
        "aplusContent_2020-11-01_SearchContentDocumentsResponse": components["schemas"]["aplusContent_2020-11-01_AplusPaginatedResponse"] & {
            contentMetadataRecords: components["schemas"]["aplusContent_2020-11-01_ContentMetadataRecordList"];
        };
        "aplusContent_2020-11-01_SearchContentPublishRecordsResponse": components["schemas"]["aplusContent_2020-11-01_AplusPaginatedResponse"] & {
            publishRecordList: components["schemas"]["aplusContent_2020-11-01_PublishRecordList"];
        };
        /** @description The standard company logo image. */
        "aplusContent_2020-11-01_StandardCompanyLogoModule": {
            companyLogo: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
        };
        /** @description The A+ Content standard comparison product block. */
        "aplusContent_2020-11-01_StandardComparisonProductBlock": {
            asin?: components["schemas"]["aplusContent_2020-11-01_Asin"];
            /** @description When true, indicates that this content block is visually highlighted. */
            highlight?: boolean;
            image?: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
            /** @description Comparison metrics for the product. */
            metrics?: components["schemas"]["aplusContent_2020-11-01_PlainTextItem"][];
            /** @description The rank or index of this comparison product block within the module. Different blocks cannot occupy the same position within a single module. */
            position: number;
            /** @description The comparison product title. */
            title?: string;
        };
        /** @description The standard product comparison table. */
        "aplusContent_2020-11-01_StandardComparisonTableModule": {
            metricRowLabels?: components["schemas"]["aplusContent_2020-11-01_PlainTextItem"][];
            productColumns?: components["schemas"]["aplusContent_2020-11-01_StandardComparisonProductBlock"][];
        };
        /** @description Four standard images with text, presented across a single row. */
        "aplusContent_2020-11-01_StandardFourImageTextModule": {
            block1?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block2?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block3?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block4?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description Four standard images with text, presented on a grid of four quadrants. */
        "aplusContent_2020-11-01_StandardFourImageTextQuadrantModule": {
            block1: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block2: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block3: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block4: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
        };
        /** @description Standard headline text, an image, and body text. */
        "aplusContent_2020-11-01_StandardHeaderImageTextModule": {
            block?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description The A+ standard fixed-length list of text and a related headline. */
        "aplusContent_2020-11-01_StandardHeaderTextListBlock": {
            block?: components["schemas"]["aplusContent_2020-11-01_StandardTextListBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description The A+ Content standard image and caption block. */
        "aplusContent_2020-11-01_StandardImageCaptionBlock": {
            caption?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            image?: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
        };
        /** @description Two images, two paragraphs, and two bulleted lists. One image is smaller and displayed in the sidebar. */
        "aplusContent_2020-11-01_StandardImageSidebarModule": {
            descriptionListBlock?: components["schemas"]["aplusContent_2020-11-01_StandardTextListBlock"];
            descriptionTextBlock?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            imageCaptionBlock?: components["schemas"]["aplusContent_2020-11-01_StandardImageCaptionBlock"];
            sidebarImageTextBlock?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            sidebarListBlock?: components["schemas"]["aplusContent_2020-11-01_StandardTextListBlock"];
        };
        /** @description The A+ Content standard image and text box block. */
        "aplusContent_2020-11-01_StandardImageTextBlock": {
            body?: components["schemas"]["aplusContent_2020-11-01_ParagraphComponent"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            image?: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
        };
        /** @description The A+ Content standard image and text block, with a related caption. The caption might not display on all devices. */
        "aplusContent_2020-11-01_StandardImageTextCaptionBlock": {
            block?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            caption?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description A standard background image with a floating text box. */
        "aplusContent_2020-11-01_StandardImageTextOverlayModule": {
            block?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            overlayColorType: components["schemas"]["aplusContent_2020-11-01_ColorType"];
        };
        /** @description Standard images with text, presented one at a time. The user clicks on thumbnails to view each block. */
        "aplusContent_2020-11-01_StandardMultipleImageTextModule": {
            blocks?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextCaptionBlock"][];
        };
        /** @description Standard product description text. */
        "aplusContent_2020-11-01_StandardProductDescriptionModule": {
            body: components["schemas"]["aplusContent_2020-11-01_ParagraphComponent"];
        };
        /** @description A standard image with several paragraphs and a bulleted list. */
        "aplusContent_2020-11-01_StandardSingleImageHighlightsModule": {
            bulletedListBlock?: components["schemas"]["aplusContent_2020-11-01_StandardHeaderTextListBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            image?: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
            textBlock1?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
            textBlock2?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
            textBlock3?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
        };
        /** @description A standard image with paragraphs, a bulleted list, and extra space for technical details. */
        "aplusContent_2020-11-01_StandardSingleImageSpecsDetailModule": {
            descriptionBlock1?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
            descriptionBlock2?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
            descriptionHeadline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            image?: components["schemas"]["aplusContent_2020-11-01_ImageComponent"];
            specificationHeadline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            specificationListBlock?: components["schemas"]["aplusContent_2020-11-01_StandardHeaderTextListBlock"];
            specificationTextBlock?: components["schemas"]["aplusContent_2020-11-01_StandardTextBlock"];
        };
        /** @description A standard headline and body text with an image on the side. */
        "aplusContent_2020-11-01_StandardSingleSideImageModule": {
            block?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            imagePositionType: components["schemas"]["aplusContent_2020-11-01_PositionType"];
        };
        /** @description The standard table of technical feature names and definitions. */
        "aplusContent_2020-11-01_StandardTechSpecsModule": {
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            /** @description The specification list. */
            specificationList: components["schemas"]["aplusContent_2020-11-01_StandardTextPairBlock"][];
            /** @description The number of tables you want present. Features are evenly divided between the tables. */
            tableCount?: number;
        };
        /** @description The A+ Content standard text box block, which contains a paragraph and a headline. */
        "aplusContent_2020-11-01_StandardTextBlock": {
            body?: components["schemas"]["aplusContent_2020-11-01_ParagraphComponent"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description The A+ Content standard fixed-length list of text, usually presented as bullet points. */
        "aplusContent_2020-11-01_StandardTextListBlock": {
            textList: components["schemas"]["aplusContent_2020-11-01_TextItem"][];
        };
        /** @description A standard headline and body text. */
        "aplusContent_2020-11-01_StandardTextModule": {
            body: components["schemas"]["aplusContent_2020-11-01_ParagraphComponent"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description The A+ Content standard label and description block, which contains a pair of text components. */
        "aplusContent_2020-11-01_StandardTextPairBlock": {
            description?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
            label?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description Three standard images with text, presented across a single row. */
        "aplusContent_2020-11-01_StandardThreeImageTextModule": {
            block1?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block2?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            block3?: components["schemas"]["aplusContent_2020-11-01_StandardImageTextBlock"];
            headline?: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        /** @description Rich text content. */
        "aplusContent_2020-11-01_TextComponent": {
            decoratorSet?: components["schemas"]["aplusContent_2020-11-01_DecoratorSet"];
            /** @description The actual plain text. */
            value: string;
        };
        /** @description Rich positional text that is usually presented as a collection of bullet points. */
        "aplusContent_2020-11-01_TextItem": {
            /** @description The rank or index of this text item within the collection. Different items cannot occupy the same position within a single collection. */
            position: number;
            text: components["schemas"]["aplusContent_2020-11-01_TextComponent"];
        };
        "aplusContent_2020-11-01_ValidateContentDocumentAsinRelationsResponse": components["schemas"]["aplusContent_2020-11-01_AplusResponse"] & components["schemas"]["aplusContent_2020-11-01_ErrorList"];
        /**
         * @description The request for the `createNotification` operation.
         * @example {
         *       "templateId": "PRICE_CHANGE",
         *       "marketplaceId": "ATVPDKIKX0DER",
         *       "notificationParameters": {
         *         "priceValue": "200"
         *       }
         *     }
         */
        "appIntegrations-2024-04-01_CreateNotificationRequest": {
            /** @description An encrypted marketplace identifier for the posted notification. */
            marketplaceId?: string;
            notificationParameters: components["schemas"]["appIntegrations-2024-04-01_NotificationParameters"];
            /** @description The unique identifier of the notification template you used to onboard your application. */
            templateId: string;
        };
        /** @description The response for the `createNotification` operation. */
        "appIntegrations-2024-04-01_CreateNotificationResponse": {
            /** @description The unique identifier assigned to each notification. */
            notificationId?: string;
        };
        /**
         * @description The request for the `deleteNotifications` operation.
         * @example {
         *       "templateId": "PRICE_CHANGE",
         *       "deletionReason": "INCORRECT_CONTENT"
         *     }
         */
        "appIntegrations-2024-04-01_DeleteNotificationsRequest": {
            /**
             * @description The unique identifier that maps each notification status to a reason code.
             * @enum {string}
             */
            deletionReason: "INCORRECT_CONTENT" | "INCORRECT_RECIPIENT";
            /** @description The unique identifier of the notification template you used to onboard your application. */
            templateId: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "appIntegrations-2024-04-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "appIntegrations-2024-04-01_ErrorList": {
            /** @description Error response returned when the request is unsuccessful. */
            errors: components["schemas"]["appIntegrations-2024-04-01_Error"][];
        };
        /**
         * @description The dynamic parameters required by the notification templated specified by `templateId`.
         * @example {
         *       "priceValue": "200"
         *     }
         */
        "appIntegrations-2024-04-01_NotificationParameters": {
            [key: string]: unknown;
        };
        /**
         * @description The request for the `recordActionFeedback` operation.
         * @example {
         *       "feedbackActionCode": "SELLER_ACTION_COMPLETED"
         *     }
         */
        "appIntegrations-2024-04-01_RecordActionFeedbackRequest": {
            /**
             * @description The unique identifier for each notification status.
             * @enum {string}
             */
            feedbackActionCode: "SELLER_ACTION_COMPLETED";
        };
        /** @description Error response returned when the request is unsuccessful. */
        "application_2023-11-30_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "application_2023-11-30_ErrorList": {
            /** @description array of errors */
            errors: components["schemas"]["application_2023-11-30_Error"][];
        };
        /**
         * @description Shipping address that represents the origin or destination location.
         * @example {
         *       "addressLine1": "address_1",
         *       "addressLine2": "address_2",
         *       "addressLine3": "address_3",
         *       "city": "Seattle",
         *       "countryCode": "US",
         *       "county": "Washington",
         *       "district": "District1",
         *       "name": "address_name",
         *       "phoneNumber": "+14155552671",
         *       "postalCode": "123456",
         *       "stateOrRegion": "Washington"
         *     }
         */
        "awd_2024-05-09_Address": {
            /** @description First line of the address text. */
            addressLine1: string;
            /** @description Optional second line of the address text. */
            addressLine2?: string;
            /** @description Optional third line of the address text. */
            addressLine3?: string;
            /** @description Optional city where this address is located. */
            city?: string;
            /** @description Two-digit, ISO 3166-1 alpha-2 formatted country code where this address is located. */
            countryCode: string;
            /**
             * @description Optional county where this address is located.
             * @example Washington
             */
            county?: string;
            /** @description Optional district where this address is located. */
            district?: string;
            /** @description Name of the person, business, or institution at this address. */
            name: string;
            /**
             * @description Optional E.164-formatted phone number for an available contact at this address.
             * @example +14155552671
             */
            phoneNumber?: string;
            /** @description Optional postal code where this address is located. */
            postalCode?: string;
            /** @description State or region where this address is located. Note that this is contextual to the specified country code. */
            stateOrRegion: string;
        };
        /**
         * @description Identifies the carrier that will deliver the shipment.
         * @example {
         *       "carrierCodeType": "SCAC",
         *       "carrierCodeValue": "TestCarrierCode"
         *     }
         */
        "awd_2024-05-09_CarrierCode": {
            carrierCodeType?: components["schemas"]["awd_2024-05-09_CarrierCodeType"];
            /**
             * @description Value of the carrier code.
             * @example TestCarrierCode
             */
            carrierCodeValue?: string;
        };
        /**
         * @description Denotes the type for the carrier.
         * @example SCAC
         * @enum {string}
         */
        "awd_2024-05-09_CarrierCodeType": "SCAC";
        /**
         * @description Destination details of an inbound order based on the assigned region and DC for the order.
         * @example {
         *       "destinationAddress": {
         *         "addressLine1": "address_1",
         *         "addressLine2": "address_2",
         *         "addressLine3": "address_3",
         *         "city": "Seattle",
         *         "countryCode": "US",
         *         "county": "Washington",
         *         "district": "District1",
         *         "name": "address_name",
         *         "phoneNumber": "+14155552671",
         *         "postalCode": "123456",
         *         "stateOrRegion": "Washington"
         *       },
         *       "destinationRegion": "us-east"
         *     }
         */
        "awd_2024-05-09_DestinationDetails": {
            destinationAddress?: components["schemas"]["awd_2024-05-09_Address"];
            /**
             * @description Assigned region where the order will be shipped. This can differ from what was passed as preference. AWD currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast]
             * @example us-west
             */
            destinationRegion?: string;
            /** @description Unique ID of the confirmed shipment being shipped to the assigned destination. This will be available only after an inbound order is confirmed and can be used to track the shipment. */
            shipmentId?: string;
        };
        /**
         * @description Unit of measurement for package dimensions.
         * @example INCHES
         * @enum {string}
         */
        "awd_2024-05-09_DimensionUnitOfMeasurement": "INCHES" | "CENTIMETERS";
        /**
         * @description Represents an AWD distribution package.
         * @example {
         *       "contents": {
         *         "products": [
         *           {
         *             "quantity": 1,
         *             "sku": "testPen",
         *             "expiration": "2025-06-07T12:12:09.061Z",
         *             "prepDetails": {
         *               "prepCategory": "PERFORATED",
         *               "prepOwner": "AMAZON",
         *               "labelOwner": "SELF",
         *               "prepInstructions": [
         *                 {
         *                   "prepType": "ITEM_POLYBAGGING",
         *                   "prepOwner": "AMAZON"
         *                 }
         *               ]
         *             }
         *           }
         *         ]
         *       },
         *       "measurements": {
         *         "dimensions": {
         *           "height": 1,
         *           "length": 1,
         *           "unitOfMeasurement": "INCHES",
         *           "width": 1
         *         },
         *         "volume": {
         *           "unitOfMeasurement": "CUIN",
         *           "volume": 1
         *         },
         *         "weight": {
         *           "unitOfMeasurement": "POUNDS",
         *           "weight": 1
         *         }
         *       },
         *       "type": "CASE"
         *     }
         */
        "awd_2024-05-09_DistributionPackage": {
            contents: components["schemas"]["awd_2024-05-09_DistributionPackageContents"];
            measurements: components["schemas"]["awd_2024-05-09_MeasurementData"];
            type: components["schemas"]["awd_2024-05-09_DistributionPackageType"];
        };
        /** @description Represents the contents inside a package, which can be products or a nested package. */
        "awd_2024-05-09_DistributionPackageContents": {
            /** @description This is required only when `DistributionPackageType=PALLET`. */
            packages?: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"][];
            /** @description This is required only when `DistributionPackageType=CASE`. */
            products?: components["schemas"]["awd_2024-05-09_ProductQuantity"][];
        };
        /**
         * @description Represents a distribution package with its respective quantity.
         * @example {
         *       "count": 1,
         *       "distributionPackage": {
         *         "contents": {
         *           "products": [
         *             {
         *               "quantity": 1,
         *               "sku": "testPen",
         *               "expiration": "2025-06-07T12:12:09.061Z",
         *               "prepDetails": {
         *                 "prepCategory": "PERFORATED",
         *                 "prepOwner": "AMAZON",
         *                 "labelOwner": "SELF",
         *                 "prepInstructions": [
         *                   {
         *                     "prepType": "ITEM_POLYBAGGING",
         *                     "prepOwner": "AMAZON"
         *                   }
         *                 ]
         *               }
         *             }
         *           ]
         *         },
         *         "measurements": {
         *           "dimensions": {
         *             "height": 1,
         *             "length": 1,
         *             "unitOfMeasurement": "INCHES",
         *             "width": 1
         *           },
         *           "volume": {
         *             "unitOfMeasurement": "CUIN",
         *             "volume": 1
         *           },
         *           "weight": {
         *             "unitOfMeasurement": "POUNDS",
         *             "weight": 1
         *           }
         *         },
         *         "type": "CASE"
         *       }
         *     }
         */
        "awd_2024-05-09_DistributionPackageQuantity": {
            /**
             * Format: int32
             * @description Number of cases or pallets with the same package configuration.
             */
            count: number;
            distributionPackage: components["schemas"]["awd_2024-05-09_DistributionPackage"];
        };
        /**
         * @description Type of distribution packages.
         * @example CASE
         * @enum {string}
         */
        "awd_2024-05-09_DistributionPackageType": "CASE" | "PALLET";
        /** @description Error response returned when the request is unsuccessful. */
        "awd_2024-05-09_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description This exception is thrown when client inputs are invalid. */
        "awd_2024-05-09_ErrorList": {
            /** @description A list of errors describing the failures. */
            errors: components["schemas"]["awd_2024-05-09_Error"][];
        };
        /** @description The expiration details of the inventory. This object will only appear if the details parameter in the request is set to `SHOW`. */
        "awd_2024-05-09_ExpirationDetails": {
            /**
             * Format: date-time
             * @description The expiration date of the SKU.
             */
            expiration?: string;
            /**
             * Format: int64
             * @description The quantity that is present in AWD.
             */
            onhandQuantity?: number;
        };
        /** @description Represents the eligibility status of the inbound packages. */
        "awd_2024-05-09_InboundEligibility": {
            /** @description If there are order level eligibility issues, then this list will contain those error codes and descriptions. */
            ineligibilityReasons?: components["schemas"]["awd_2024-05-09_OrderIneligibilityReason"][];
            /** @description Details on SKU eligibility for each inbound package. */
            packagesToInbound: components["schemas"]["awd_2024-05-09_SkuEligibility"][];
            /**
             * Format: date-time
             * @description Timestamp when the eligibility check is performed.
             */
            previewedAt: string;
            status: components["schemas"]["awd_2024-05-09_InboundEligibilityStatus"];
        };
        /**
         * @description Enum denoting the package inbound eligibility.
         * @enum {string}
         */
        "awd_2024-05-09_InboundEligibilityStatus": "ELIGIBLE" | "INELIGIBLE";
        /**
         * @description Represents an AWD inbound order.
         * @example {
         *       "destinationDetails": {
         *         "destinationAddress": {
         *           "addressLine1": "address_1",
         *           "addressLine2": "address_2",
         *           "addressLine3": "address_3",
         *           "city": "Seattle",
         *           "countryCode": "US",
         *           "county": "Washington",
         *           "district": "District1",
         *           "name": "address_name",
         *           "phoneNumber": "+14155552671",
         *           "postalCode": "123456",
         *           "stateOrRegion": "Washington"
         *         },
         *         "destinationRegion": "us-east",
         *         "shipmentId": "TestShipmentId"
         *       },
         *       "createdAt": "2023-06-07T12:12:09.061Z",
         *       "externalReferenceId": "TestReferenceId",
         *       "orderId": "TestOrderId",
         *       "orderStatus": "DRAFT",
         *       "originAddress": {
         *         "addressLine1": "address_1",
         *         "addressLine2": "address_2",
         *         "addressLine3": "address_3",
         *         "city": "Seattle",
         *         "countryCode": "US",
         *         "county": "Washington",
         *         "district": "District1",
         *         "name": "address_name",
         *         "phoneNumber": "+14155552671",
         *         "postalCode": "123456",
         *         "stateOrRegion": "Washington"
         *       },
         *       "packagesToInbound": [
         *         {
         *           "count": 1,
         *           "distributionPackage": {
         *             "contents": {
         *               "packages": [],
         *               "products": [
         *                 {
         *                   "quantity": 1,
         *                   "sku": "testPen",
         *                   "expiration": "2025-06-07T12:12:09.061Z",
         *                   "prepDetails": {
         *                     "prepCategory": "PERFORATED",
         *                     "prepOwner": "AMAZON",
         *                     "labelOwner": "SELF",
         *                     "prepInstructions": [
         *                       {
         *                         "prepType": "ITEM_POLYBAGGING",
         *                         "prepOwner": "AMAZON"
         *                       }
         *                     ]
         *                   }
         *                 }
         *               ]
         *             },
         *             "measurements": {
         *               "dimensions": {
         *                 "height": 2.54,
         *                 "length": 2.54,
         *                 "unitOfMeasurement": "CENTIMETERS",
         *                 "width": 2.54
         *               },
         *               "weight": {
         *                 "unitOfMeasurement": "KILOGRAMS",
         *                 "weight": 0.453592
         *               }
         *             },
         *             "type": "CASE"
         *           }
         *         }
         *       ],
         *       "updatedAt": "2023-06-07T12:12:09.061Z",
         *       "preferences": {
         *         "destinationRegion": "us-west"
         *       }
         *     }
         */
        "awd_2024-05-09_InboundOrder": {
            /**
             * Format: date-time
             * @description Date when this order was created.
             */
            createdAt: string;
            destinationDetails?: components["schemas"]["awd_2024-05-09_DestinationDetails"];
            /**
             * @description Reference ID that can be used to correlate the order with partner resources.
             * @example TestReferenceId
             */
            externalReferenceId?: string;
            /** @description Inbound order ID. */
            orderId: string;
            orderStatus: components["schemas"]["awd_2024-05-09_InboundStatus"];
            originAddress: components["schemas"]["awd_2024-05-09_Address"];
            /** @description List of packages to be inbounded. */
            packagesToInbound: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"][];
            preferences?: components["schemas"]["awd_2024-05-09_InboundPreferences"];
            /**
             * Format: date-time
             * @description Date when this order was last updated.
             */
            updatedAt?: string;
        };
        /**
         * @description Payload for creating an inbound order.
         * @example {
         *       "externalReferenceId": "TestReferenceId",
         *       "originAddress": {
         *         "addressLine1": "address_1",
         *         "addressLine2": "address_2",
         *         "addressLine3": "address_3",
         *         "city": "City1",
         *         "countryCode": "CC",
         *         "district": "District1",
         *         "name": "address_name",
         *         "postalCode": "123456",
         *         "stateOrRegion": "State1"
         *       },
         *       "packagesToInbound": [
         *         {
         *           "count": 1,
         *           "distributionPackage": {
         *             "contents": {
         *               "products": [
         *                 {
         *                   "quantity": 1,
         *                   "sku": "testPen"
         *                 }
         *               ]
         *             },
         *             "measurements": {
         *               "dimensions": {
         *                 "height": 1,
         *                 "length": 1,
         *                 "unitOfMeasurement": "INCHES",
         *                 "width": 1
         *               },
         *               "volume": {
         *                 "unitOfMeasurement": "CUIN",
         *                 "volume": 1
         *               },
         *               "weight": {
         *                 "unitOfMeasurement": "POUNDS",
         *                 "weight": 1
         *               }
         *             },
         *             "type": "CASE"
         *           }
         *         }
         *       ],
         *       "preferences": {
         *         "destinationRegion": "us-west"
         *       }
         *     }
         */
        "awd_2024-05-09_InboundOrderCreationData": {
            /**
             * @description Reference ID that can be used to correlate the order with partner resources.
             * @example TestReferenceId
             */
            externalReferenceId?: string;
            originAddress: components["schemas"]["awd_2024-05-09_Address"];
            /**
             * @description List of packages to be inbounded.
             * @example [
             *       {
             *         "count": 1,
             *         "distributionPackage": {
             *           "contents": {
             *             "products": [
             *               {
             *                 "quantity": 1,
             *                 "sku": "testPen"
             *               }
             *             ]
             *           },
             *           "measurements": {
             *             "dimensions": {
             *               "height": 1,
             *               "length": 1,
             *               "unitOfMeasurement": "INCHES",
             *               "width": 1
             *             },
             *             "volume": {
             *               "unitOfMeasurement": "CUIN",
             *               "volume": 1
             *             },
             *             "weight": {
             *               "unitOfMeasurement": "POUNDS",
             *               "weight": 1
             *             }
             *           },
             *           "type": "CASE"
             *         }
             *       }
             *     ]
             */
            packagesToInbound: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"][];
            preferences?: components["schemas"]["awd_2024-05-09_InboundPreferences"];
        };
        /** @description A response that contains the reference identifiers for the newly created or updated inbound order. Consists of an order ID and version. */
        "awd_2024-05-09_InboundOrderReference": {
            /** @description Order ID of the inbound order. */
            orderId: string;
        };
        /**
         * @description Represents the packages to inbound.
         * @example {
         *       "packagesToInbound": [
         *         {
         *           "count": 1,
         *           "distributionPackage": {
         *             "contents": {
         *               "products": [
         *                 {
         *                   "quantity": 1,
         *                   "sku": "testPen"
         *                 }
         *               ]
         *             },
         *             "measurements": {
         *               "dimensions": {
         *                 "height": 1,
         *                 "length": 1,
         *                 "unitOfMeasurement": "INCHES",
         *                 "width": 1
         *               },
         *               "volume": {
         *                 "unitOfMeasurement": "CUIN",
         *                 "volume": 1
         *               },
         *               "weight": {
         *                 "unitOfMeasurement": "POUNDS",
         *                 "weight": 1
         *               }
         *             },
         *             "type": "CASE"
         *           }
         *         }
         *       ]
         *     }
         */
        "awd_2024-05-09_InboundPackages": {
            /**
             * @description List of packages to be inbounded.
             * @example [
             *       {
             *         "count": 1,
             *         "distributionPackage": {
             *           "contents": {
             *             "products": [
             *               {
             *                 "quantity": 1,
             *                 "sku": "testPen"
             *               }
             *             ]
             *           },
             *           "measurements": {
             *             "dimensions": {
             *               "height": 1,
             *               "length": 1,
             *               "unitOfMeasurement": "INCHES",
             *               "width": 1
             *             },
             *             "volume": {
             *               "unitOfMeasurement": "CUIN",
             *               "volume": 1
             *             },
             *             "weight": {
             *               "unitOfMeasurement": "POUNDS",
             *               "weight": 1
             *             }
             *           },
             *           "type": "CASE"
             *         }
             *       }
             *     ]
             */
            packagesToInbound: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"][];
        };
        /** @description Preferences that can be passed in context of an inbound order */
        "awd_2024-05-09_InboundPreferences": {
            /** @description Pass a preferred region so that the inbound order can be shipped to an AWD warehouse located in that region. This doesn't guarantee the order to be assigned in the specified destination region as it depends on warehouse capacity availability. AWD currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast] */
            destinationRegion?: string;
        };
        /** @description Represents an AWD inbound shipment. */
        "awd_2024-05-09_InboundShipment": {
            carrierCode?: components["schemas"]["awd_2024-05-09_CarrierCode"];
            /**
             * Format: date-time
             * @description Timestamp when the shipment was created. The date is returned in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
             */
            createdAt?: string;
            destinationAddress: components["schemas"]["awd_2024-05-09_Address"];
            /**
             * @description Assigned region where the order will be shipped. This can differ from what was passed as preference. AWD currently supports following region IDs: [us-west, us-east, us-southcentral, us-southeast]
             * @example us-west
             */
            destinationRegion?: string;
            /**
             * @description Client-provided reference ID that can correlate this shipment to client resources. For example, to map this shipment to an internal bookkeeping order record.
             * @example TestReferenceId
             */
            externalReferenceId?: string;
            /** @description The AWD inbound order ID that this inbound shipment belongs to. */
            orderId: string;
            originAddress: components["schemas"]["awd_2024-05-09_Address"];
            /** @description Quantity received (at the receiving end) as part of this shipment. */
            receivedQuantity?: components["schemas"]["awd_2024-05-09_InventoryQuantity"][];
            /**
             * Format: date-time
             * @description Timestamp when the shipment will be shipped.
             */
            shipBy?: string;
            /** @description Packages that are part of this shipment. */
            shipmentContainerQuantities: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"][];
            /** @description Unique shipment ID. */
            shipmentId: string;
            /** @description Quantity details at SKU level for the shipment. This attribute will only appear if the skuQuantities parameter in the request is set to SHOW. */
            shipmentSkuQuantities?: components["schemas"]["awd_2024-05-09_SkuQuantity"][];
            shipmentStatus: components["schemas"]["awd_2024-05-09_InboundShipmentStatus"];
            /** @description Carrier-unique tracking ID for this shipment. */
            trackingId?: string;
            /**
             * Format: date-time
             * @description Timestamp when the shipment was updated. The date is returned in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
             */
            updatedAt?: string;
            /**
             * @description An AWD-provided reference ID that you can use to interact with the warehouse. For example, a carrier appointment booking.
             * @example TestWarehouseReferenceId
             */
            warehouseReferenceId?: string;
        };
        /**
         * @description Possible shipment statuses used by shipments.
         * @enum {string}
         */
        "awd_2024-05-09_InboundShipmentStatus": "CREATED" | "SHIPPED" | "IN_TRANSIT" | "RECEIVING" | "DELIVERED" | "CLOSED" | "CANCELLED";
        /** @description Summary for an AWD inbound shipment containing the shipment ID, which can be used to retrieve the actual shipment. */
        "awd_2024-05-09_InboundShipmentSummary": {
            /**
             * Format: date-time
             * @description Timestamp when the shipment was created.
             */
            createdAt?: string;
            /**
             * @description Optional client-provided reference ID that can be used to correlate this shipment with client resources. For example, to map this shipment to an internal bookkeeping order record.
             * @example TestReferenceId
             */
            externalReferenceId?: string;
            /** @description The AWD inbound order ID that this inbound shipment belongs to. */
            orderId: string;
            /** @description A unique shipment ID. */
            shipmentId: string;
            shipmentStatus: components["schemas"]["awd_2024-05-09_InboundShipmentStatus"];
            /**
             * Format: date-time
             * @description Timestamp when the shipment was updated.
             */
            updatedAt?: string;
        };
        /**
         * @description The supported statuses for an inbound order.
         * @enum {string}
         */
        "awd_2024-05-09_InboundStatus": "DRAFT" | "VALIDATING" | "CONFIRMED" | "CLOSED" | "EXPIRED" | "CANCELLED";
        /** @description Additional inventory details. This object is only displayed if the details parameter in the request is set to `SHOW`. */
        "awd_2024-05-09_InventoryDetails": {
            /**
             * Format: int64
             * @description Quantity that is available for downstream channel replenishment.
             */
            availableDistributableQuantity?: number;
            /**
             * Format: int64
             * @description Quantity that is in transit from AWD and has not yet been received at FBA.
             */
            replenishmentQuantity?: number;
            /**
             * Format: int64
             * @description Quantity that is reserved for a downstream channel replenishment order that is being prepared for shipment.
             */
            reservedDistributableQuantity?: number;
        };
        /** @description AWD inventory payload. */
        "awd_2024-05-09_InventoryListing": {
            /** @description List of inventory summaries. */
            inventory: components["schemas"]["awd_2024-05-09_InventorySummary"][];
            /**
             * @description A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
             * @example SampleToken
             */
            nextToken?: string;
        };
        /** @description Quantity of inventory with an associated measurement unit context. */
        "awd_2024-05-09_InventoryQuantity": {
            /** @description Quantity of the respective inventory. */
            quantity: number;
            unitOfMeasurement: components["schemas"]["awd_2024-05-09_InventoryUnitOfMeasurement"];
        };
        /** @description Summary of inventory per SKU. */
        "awd_2024-05-09_InventorySummary": {
            /** @description The expiration details of the inventory. This object will only appear if the `details` parameter in the request is set to `SHOW`. */
            expirationDetails?: components["schemas"]["awd_2024-05-09_ExpirationDetails"][];
            inventoryDetails?: components["schemas"]["awd_2024-05-09_InventoryDetails"];
            /** @description The seller or merchant SKU. */
            sku: string;
            /**
             * Format: int64
             * @description Total quantity that is in-transit from the seller and has not yet been received at an AWD Distribution Center
             */
            totalInboundQuantity?: number;
            /**
             * Format: int64
             * @description Total quantity that is present in AWD distribution centers.
             */
            totalOnhandQuantity?: number;
        };
        /**
         * @description Unit of measurement for the inventory.
         * @enum {string}
         */
        "awd_2024-05-09_InventoryUnitOfMeasurement": "PRODUCT_UNITS" | "CASES" | "PALLETS";
        /**
         * @description The entity that labels the products.
         * @enum {string}
         */
        "awd_2024-05-09_LabelOwner": "AMAZON" | "SELF";
        /**
         * @description The status of your label.
         * @enum {string}
         */
        "awd_2024-05-09_LabelStatus": "GENERATING" | "GENERATED" | "GENERATION_FAILED" | "NOT_READY";
        /** @description Package weight and dimension. */
        "awd_2024-05-09_MeasurementData": {
            dimensions?: components["schemas"]["awd_2024-05-09_PackageDimensions"];
            volume?: components["schemas"]["awd_2024-05-09_PackageVolume"];
            weight: components["schemas"]["awd_2024-05-09_PackageWeight"];
        };
        /**
         * @description Represents one ineligibility reason for the order (there can be multiple reasons).
         * @example {
         *       "code": "INVALID_MSKU",
         *       "description": "The MSKU of an invalid order."
         *     }
         */
        "awd_2024-05-09_OrderIneligibilityReason": {
            /**
             * @description Code for the order ineligibility.
             * @example INVALID_MSKU
             */
            code: string;
            /**
             * @description Description detailing the ineligibility reason of the order.
             * @example The MSKU passed as part of order is invalid
             */
            description: string;
        };
        /** @description Dimensions of the package. */
        "awd_2024-05-09_PackageDimensions": {
            /**
             * Format: double
             * @description Height of the package.
             */
            height: number;
            /**
             * Format: double
             * @description Length of the package.
             */
            length: number;
            unitOfMeasurement: components["schemas"]["awd_2024-05-09_DimensionUnitOfMeasurement"];
            /**
             * Format: double
             * @description Width of the package.
             */
            width: number;
        };
        /** @description Represents the volume of the package with a unit of measurement. */
        "awd_2024-05-09_PackageVolume": {
            unitOfMeasurement: components["schemas"]["awd_2024-05-09_VolumeUnitOfMeasurement"];
            /**
             * Format: double
             * @description The package volume value.
             */
            volume: number;
        };
        /** @description Represents the weight of the package with a unit of measurement. */
        "awd_2024-05-09_PackageWeight": {
            unitOfMeasurement: components["schemas"]["awd_2024-05-09_WeightUnitOfMeasurement"];
            /**
             * Format: double
             * @description The package weight value.
             */
            weight: number;
        };
        /**
         * @description The preparation category for shipping an item to Amazon's fulfillment network.
         * @enum {string}
         */
        "awd_2024-05-09_PrepCategory": "ADULT" | "BABY" | "FC_PROVIDED" | "FRAGILE" | "GRANULAR" | "HANGER" | "LIQUID" | "PERFORATED" | "SET" | "SHARP" | "SMALL" | "TEXTILE" | "NO_PREP" | "UNKNOWN";
        /** @description The preparation details for a product. This contains the prep category, prep owner, and label owner.
         *     Prep instructions are generated based on the specified category. */
        "awd_2024-05-09_PrepDetails": {
            labelOwner?: components["schemas"]["awd_2024-05-09_LabelOwner"];
            prepCategory?: components["schemas"]["awd_2024-05-09_PrepCategory"];
            /** @description Contains information about the preparation of the inbound products. The system auto-generates this field with the use of the `prepCategory`, and if you attempt to pass a value for this field, the system will ignore it. */
            prepInstructions?: components["schemas"]["awd_2024-05-09_PrepInstruction"][];
            prepOwner?: components["schemas"]["awd_2024-05-09_PrepOwner"];
        };
        /** @description Information pertaining to the preparation of inbound products. */
        "awd_2024-05-09_PrepInstruction": {
            prepOwner?: components["schemas"]["awd_2024-05-09_PrepOwner"];
            /** @description The type of preparation to be done. For more information about preparing items, refer to [Prep guidance](https://sellercentral.amazon.com/help/hub/reference/external/GF4G7547KSLDX2KC) on Seller Central. */
            prepType?: string;
        };
        /**
         * @description The owner of the preparations, if special preparations are required.
         * @enum {string}
         */
        "awd_2024-05-09_PrepOwner": "AMAZON" | "SELF";
        /**
         * @description Product instance attribute that is not described at the SKU level in the catalog.
         * @example {
         *       "name": "TestAttribute",
         *       "value": "TestAttributeValue"
         *     }
         */
        "awd_2024-05-09_ProductAttribute": {
            /**
             * @description Product attribute name.
             * @example TestAttribute
             */
            name?: string;
            /**
             * @description Product attribute value.
             * @example TestAttributeValue
             */
            value?: string;
        };
        /** @description Represents a product with the SKU details and the corresponding quantity. */
        "awd_2024-05-09_ProductQuantity": {
            /**
             * @description Contains attributes for this instance of the product. For example, item color, or other attributes that distinguish the product beyond the SKU. This is metadata for the product and Amazon does not process this data.
             * @example {
             *       "name": "TestAttribute",
             *       "value": "TestAttributeValue"
             *     }
             */
            attributes?: components["schemas"]["awd_2024-05-09_ProductAttribute"][];
            /**
             * Format: date-time
             * @description The expiration date for the SKU. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
             */
            expiration?: string;
            prepDetails?: components["schemas"]["awd_2024-05-09_PrepDetails"];
            /**
             * Format: int32
             * @description Product quantity.
             */
            quantity: number;
            /** @description The seller or merchant SKU. */
            sku: string;
        };
        /** @description Shipment labels. */
        "awd_2024-05-09_ShipmentLabels": {
            /** @description The URL to download shipment labels. The URL is active for 600 seconds from generation. */
            labelDownloadURL?: string;
            labelStatus: components["schemas"]["awd_2024-05-09_LabelStatus"];
        };
        /** @description A list of inbound shipment summaries filtered by the attributes specified in the request. */
        "awd_2024-05-09_ShipmentListing": {
            /**
             * @description A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
             * @example SampleToken
             */
            nextToken?: string;
            /** @description List of inbound shipment summaries. */
            shipments?: components["schemas"]["awd_2024-05-09_InboundShipmentSummary"][];
        };
        /** @description Represents eligibility of one SKU. */
        "awd_2024-05-09_SkuEligibility": {
            /** @description If not eligible, these are list of error codes and descriptions. */
            ineligibilityReasons?: components["schemas"]["awd_2024-05-09_SkuIneligibilityReason"][];
            packageQuantity: components["schemas"]["awd_2024-05-09_DistributionPackageQuantity"];
            status: components["schemas"]["awd_2024-05-09_InboundEligibilityStatus"];
        };
        /** @description Represents the ineligibility reason for one SKU. */
        "awd_2024-05-09_SkuIneligibilityReason": {
            /** @description Code for the SKU ineligibility. */
            code: string;
            /** @description Detailed description of the SKU ineligibility. */
            description: string;
        };
        /** @description Quantity details for a SKU as part of a shipment */
        "awd_2024-05-09_SkuQuantity": {
            expectedQuantity: components["schemas"]["awd_2024-05-09_InventoryQuantity"];
            receivedQuantity?: components["schemas"]["awd_2024-05-09_InventoryQuantity"];
            /** @description The merchant stock keeping unit */
            sku: string;
        };
        /** @description Tracking details for the shipment. If using SPD transportation, this can be for each case. If not using SPD transportation, this is a single tracking entry for the entire shipment. */
        "awd_2024-05-09_TrackingDetails": {
            /** @description The identifier that is received from transportation to uniquely identify a booking. */
            bookingId: string;
            carrierCode?: components["schemas"]["awd_2024-05-09_CarrierCode"];
        };
        /**
         * @description Transportation details for the shipment.
         * @example {
         *       "trackingDetails": [
         *         {
         *           "carrierCode": {
         *             "carrierCodeType": "SCAC"
         *           },
         *           "bookingId": "TRACKING_ID"
         *         }
         *       ]
         *     }
         */
        "awd_2024-05-09_TransportationDetails": {
            /** @description Tracking details for the shipment. If using SPD transportation, this can be for each case. If not using SPD transportation, this is a single tracking entry for the entire shipment. */
            trackingDetails: components["schemas"]["awd_2024-05-09_TrackingDetails"][];
        };
        /**
         * @description Unit of measurement for the package volume.
         * @enum {string}
         */
        "awd_2024-05-09_VolumeUnitOfMeasurement": "CU_IN" | "CBM" | "CC";
        /**
         * @description Unit of measurement for the package weight.
         * @enum {string}
         */
        "awd_2024-05-09_WeightUnitOfMeasurement": "POUNDS" | "KILOGRAMS";
        /** @description Description of a brand that can be used to get more fine-grained search results. */
        "catalogItems_2020-12-01_BrandRefinement": {
            /** @description Brand name. For display and can be used as a search refinement. */
            brandName: string;
            /** @description The estimated number of results that would still be returned if refinement key applied. */
            numberOfResults: number;
        };
        /** @description Description of a classification that can be used to get more fine-grained search results. */
        "catalogItems_2020-12-01_ClassificationRefinement": {
            /** @description Identifier for the classification that can be used for search refinement purposes. */
            classificationId: string;
            /** @description Display name for the classification. */
            displayName: string;
            /** @description The estimated number of results that would still be returned if refinement key applied. */
            numberOfResults: number;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "catalogItems_2020-12-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "catalogItems_2020-12-01_ErrorList": {
            errors: components["schemas"]["catalogItems_2020-12-01_Error"][];
        };
        /** @description An item in the Amazon catalog. */
        "catalogItems_2020-12-01_Item": {
            asin: components["schemas"]["catalogItems_2020-12-01_ItemAsin"];
            attributes?: components["schemas"]["catalogItems_2020-12-01_ItemAttributes"];
            identifiers?: components["schemas"]["catalogItems_2020-12-01_ItemIdentifiers"];
            images?: components["schemas"]["catalogItems_2020-12-01_ItemImages"];
            productTypes?: components["schemas"]["catalogItems_2020-12-01_ItemProductTypes"];
            salesRanks?: components["schemas"]["catalogItems_2020-12-01_ItemSalesRanks"];
            summaries?: components["schemas"]["catalogItems_2020-12-01_ItemSummaries"];
            variations?: components["schemas"]["catalogItems_2020-12-01_ItemVariations"];
            vendorDetails?: components["schemas"]["catalogItems_2020-12-01_ItemVendorDetails"];
        };
        /** @description Amazon Standard Identification Number (ASIN) is the unique identifier for an item in the Amazon catalog. */
        "catalogItems_2020-12-01_ItemAsin": string;
        /** @description A JSON object that contains structured item attribute data keyed by attribute name. Catalog item attributes are available only to brand owners and conform to the related product type definitions available in the Selling Partner API for Product Type Definitions. */
        "catalogItems_2020-12-01_ItemAttributes": {
            [key: string]: unknown;
        };
        /** @description Identifier associated with the item in the Amazon catalog, such as a UPC or EAN identifier. */
        "catalogItems_2020-12-01_ItemIdentifier": {
            /** @description Identifier. */
            identifier: string;
            /** @description Type of identifier, such as UPC, EAN, or ISBN. */
            identifierType: string;
        };
        /** @description Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers. */
        "catalogItems_2020-12-01_ItemIdentifiers": components["schemas"]["catalogItems_2020-12-01_ItemIdentifiersByMarketplace"][];
        /** @description Identifiers associated with the item in the Amazon catalog for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemIdentifiersByMarketplace": {
            /** @description Identifiers associated with the item in the Amazon catalog for the indicated Amazon marketplace. */
            identifiers: components["schemas"]["catalogItems_2020-12-01_ItemIdentifier"][];
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
        };
        /** @description Image for an item in the Amazon catalog. */
        "catalogItems_2020-12-01_ItemImage": {
            /** @description Height of the image in pixels. */
            height: number;
            /** @description Link, or URL, for the image. */
            link: string;
            /**
             * @description Variant of the image, such as MAIN or PT01.
             * @example MAIN
             * @enum {string}
             */
            variant: "MAIN" | "PT01" | "PT02" | "PT03" | "PT04" | "PT05" | "PT06" | "PT07" | "PT08" | "SWCH";
            /** @description Width of the image in pixels. */
            width: number;
        };
        /** @description Images for an item in the Amazon catalog. All image variants are provided to brand owners. Otherwise, a thumbnail of the "MAIN" image variant is provided. */
        "catalogItems_2020-12-01_ItemImages": components["schemas"]["catalogItems_2020-12-01_ItemImagesByMarketplace"][];
        /** @description Images for an item in the Amazon catalog for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemImagesByMarketplace": {
            /** @description Images for an item in the Amazon catalog for the indicated Amazon marketplace. */
            images: components["schemas"]["catalogItems_2020-12-01_ItemImage"][];
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
        };
        /** @description Product type associated with the Amazon catalog item for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemProductTypeByMarketplace": {
            /** @description Amazon marketplace identifier. */
            marketplaceId?: string;
            /**
             * @description Name of the product type associated with the Amazon catalog item.
             * @example LUGGAGE
             */
            productType?: string;
        };
        /** @description Product types associated with the Amazon catalog item. */
        "catalogItems_2020-12-01_ItemProductTypes": components["schemas"]["catalogItems_2020-12-01_ItemProductTypeByMarketplace"][];
        /** @description Sales rank of an Amazon catalog item. */
        "catalogItems_2020-12-01_ItemSalesRank": {
            /** @description Corresponding Amazon retail website link, or URL, for the sales rank. */
            link?: string;
            /** @description Sales rank value. */
            rank: number;
            /** @description Title, or name, of the sales rank. */
            title: string;
        };
        /** @description Sales ranks of an Amazon catalog item. */
        "catalogItems_2020-12-01_ItemSalesRanks": components["schemas"]["catalogItems_2020-12-01_ItemSalesRanksByMarketplace"][];
        /** @description Sales ranks of an Amazon catalog item for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemSalesRanksByMarketplace": {
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /** @description Sales ranks of an Amazon catalog item for an Amazon marketplace. */
            ranks: components["schemas"]["catalogItems_2020-12-01_ItemSalesRank"][];
        };
        /** @description Items in the Amazon catalog and search related metadata. */
        "catalogItems_2020-12-01_ItemSearchResults": {
            /** @description A list of items from the Amazon catalog. */
            items: components["schemas"]["catalogItems_2020-12-01_Item"][];
            /** @description The estimated total number of products matched by the search query (only results up to the page count limit will be returned per request regardless of the number found).
             *
             *     Note: The maximum number of items (ASINs) that can be returned and paged through is 1000. */
            numberOfResults: number;
            pagination: components["schemas"]["catalogItems_2020-12-01_Pagination"];
            refinements: components["schemas"]["catalogItems_2020-12-01_Refinements"];
        };
        /** @description Summary details of an Amazon catalog item. */
        "catalogItems_2020-12-01_ItemSummaries": components["schemas"]["catalogItems_2020-12-01_ItemSummaryByMarketplace"][];
        /** @description Summary details of an Amazon catalog item for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemSummaryByMarketplace": {
            /** @description Name of the brand associated with an Amazon catalog item. */
            brandName?: string;
            /** @description Identifier of the browse node associated with an Amazon catalog item. */
            browseNode?: string;
            /** @description Name of the color associated with an Amazon catalog item. */
            colorName?: string;
            /** @description Name, or title, associated with an Amazon catalog item. */
            itemName?: string;
            /** @description Name of the manufacturer associated with an Amazon catalog item. */
            manufacturer?: string;
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /** @description Model number associated with an Amazon catalog item. */
            modelNumber?: string;
            /** @description Name of the size associated with an Amazon catalog item. */
            sizeName?: string;
            /** @description Name of the style associated with an Amazon catalog item. */
            styleName?: string;
        };
        /** @description Variation details by marketplace for an Amazon catalog item (variation relationships). */
        "catalogItems_2020-12-01_ItemVariations": components["schemas"]["catalogItems_2020-12-01_ItemVariationsByMarketplace"][];
        /** @description Variation details for the Amazon catalog item for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemVariationsByMarketplace": {
            /** @description Identifiers (ASINs) of the related items. */
            asins: string[];
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /**
             * @description Type of variation relationship of the Amazon catalog item in the request to the related item(s): "PARENT" or "CHILD".
             * @example PARENT
             * @enum {string}
             */
            variationType: "PARENT" | "CHILD";
        };
        /** @description Vendor details associated with an Amazon catalog item. Vendor details are available to vendors only. */
        "catalogItems_2020-12-01_ItemVendorDetails": components["schemas"]["catalogItems_2020-12-01_ItemVendorDetailsByMarketplace"][];
        /** @description Vendor details associated with an Amazon catalog item for the indicated Amazon marketplace. */
        "catalogItems_2020-12-01_ItemVendorDetailsByMarketplace": {
            /** @description Brand code associated with an Amazon catalog item. */
            brandCode?: string;
            /** @description Product category associated with an Amazon catalog item. */
            categoryCode?: string;
            /** @description Manufacturer code associated with an Amazon catalog item. */
            manufacturerCode?: string;
            /** @description Parent vendor code of the manufacturer code. */
            manufacturerCodeParent?: string;
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /** @description Product group associated with an Amazon catalog item. */
            productGroup?: string;
            /**
             * @description Replenishment category associated with an Amazon catalog item.
             * @enum {string}
             */
            replenishmentCategory?: "ALLOCATED" | "BASIC_REPLENISHMENT" | "IN_SEASON" | "LIMITED_REPLENISHMENT" | "MANUFACTURER_OUT_OF_STOCK" | "NEW_PRODUCT" | "NON_REPLENISHABLE" | "NON_STOCKUPABLE" | "OBSOLETE" | "PLANNED_REPLENISHMENT";
            /** @description Product subcategory associated with an Amazon catalog item. */
            subcategoryCode?: string;
        };
        /** @description When a request produces a response that exceeds the pageSize, pagination occurs. This means the response is divided into individual pages. To retrieve the next page or the previous page, you must pass the nextToken value or the previousToken value as the pageToken parameter in the next request. When you receive the last page, there will be no nextToken key in the pagination object. */
        "catalogItems_2020-12-01_Pagination": {
            /** @description A token that can be used to fetch the next page. */
            nextToken?: string;
            /** @description A token that can be used to fetch the previous page. */
            previousToken?: string;
        };
        /** @description Search refinements. */
        "catalogItems_2020-12-01_Refinements": {
            /** @description Brand search refinements. */
            brands: components["schemas"]["catalogItems_2020-12-01_BrandRefinement"][];
            /** @description Classification search refinements. */
            classifications: components["schemas"]["catalogItems_2020-12-01_ClassificationRefinement"][];
        };
        /** @description A brand that you can use to refine your search. */
        "catalogItems_2022-04-01_BrandRefinement": {
            /** @description The brand name that you can use to refine your search. */
            brandName: string;
            /** @description The estimated number of results that would be returned if you refine your search by the specified `brandName`. */
            numberOfResults: number;
        };
        /** @description A classification that you can use to refine your search. */
        "catalogItems_2022-04-01_ClassificationRefinement": {
            /** @description The identifier of the classification that you can use to refine your search. */
            classificationId: string;
            /** @description Display name for the classification. */
            displayName: string;
            /** @description The estimated number of results that would be returned if you refine your search by the specified `classificationId`. */
            numberOfResults: number;
        };
        /** @description The value of an individual dimension for an Amazon catalog item or item package. */
        "catalogItems_2022-04-01_Dimension": {
            /** @description Unit of measurement for the dimension value. */
            unit?: string;
            /** @description Numeric value of the dimension. */
            value?: number;
        };
        /** @description Dimensions of an Amazon catalog item or item in its packaging. */
        "catalogItems_2022-04-01_Dimensions": {
            height?: components["schemas"]["catalogItems_2022-04-01_Dimension"];
            length?: components["schemas"]["catalogItems_2022-04-01_Dimension"];
            weight?: components["schemas"]["catalogItems_2022-04-01_Dimension"];
            width?: components["schemas"]["catalogItems_2022-04-01_Dimension"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "catalogItems_2022-04-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "catalogItems_2022-04-01_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["catalogItems_2022-04-01_Error"][];
        };
        /** @description An item in the Amazon catalog. */
        "catalogItems_2022-04-01_Item": {
            asin: components["schemas"]["catalogItems_2022-04-01_ItemAsin"];
            attributes?: components["schemas"]["catalogItems_2022-04-01_ItemAttributes"];
            classifications?: components["schemas"]["catalogItems_2022-04-01_ItemBrowseClassifications"];
            dimensions?: components["schemas"]["catalogItems_2022-04-01_ItemDimensions"];
            identifiers?: components["schemas"]["catalogItems_2022-04-01_ItemIdentifiers"];
            images?: components["schemas"]["catalogItems_2022-04-01_ItemImages"];
            productTypes?: components["schemas"]["catalogItems_2022-04-01_ItemProductTypes"];
            relationships?: components["schemas"]["catalogItems_2022-04-01_ItemRelationships"];
            salesRanks?: components["schemas"]["catalogItems_2022-04-01_ItemSalesRanks"];
            summaries?: components["schemas"]["catalogItems_2022-04-01_ItemSummaries"];
            vendorDetails?: components["schemas"]["catalogItems_2022-04-01_ItemVendorDetails"];
        };
        /** @description The unique identifier of an item in the Amazon catalog. */
        "catalogItems_2022-04-01_ItemAsin": string;
        /** @description A JSON object containing structured item attribute data that is keyed by attribute name. Catalog item attributes conform to the related Amazon product type definitions that you can get from the [Product Type Definitions API](https://developer-docs.amazon.com/sp-api/reference/product-type-definitions-v2020-09-01). */
        "catalogItems_2022-04-01_ItemAttributes": {
            [key: string]: unknown;
        };
        /** @description Classification (browse node) for an Amazon catalog item. */
        "catalogItems_2022-04-01_ItemBrowseClassification": {
            /** @description Identifier of the classification. */
            classificationId: string;
            /** @description Display name for the classification. */
            displayName: string;
            parent?: components["schemas"]["catalogItems_2022-04-01_ItemBrowseClassification"];
        };
        /** @description An array of classifications (browse nodes) that is associated with the item in the Amazon catalog, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemBrowseClassifications": components["schemas"]["catalogItems_2022-04-01_ItemBrowseClassificationsByMarketplace"][];
        /** @description Classifications (browse nodes) that are associated with the item in the Amazon catalog for the indicated `marketplaceId`. */
        "catalogItems_2022-04-01_ItemBrowseClassificationsByMarketplace": {
            /** @description Classifications (browse nodes) that are associated with the item in the Amazon catalog. */
            classifications?: components["schemas"]["catalogItems_2022-04-01_ItemBrowseClassification"][];
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
        };
        /** @description Sales rank of an Amazon catalog item. */
        "catalogItems_2022-04-01_ItemClassificationSalesRank": {
            /** @description Identifier of the classification that is associated with the sales rank. */
            classificationId: string;
            /** @description Corresponding Amazon retail website URL for the sales category. */
            link?: string;
            /** @description Sales rank. */
            rank: number;
            /** @description Name of the sales rank. */
            title: string;
        };
        /** @description Individual contributor to the creation of an item, such as an author or actor. */
        "catalogItems_2022-04-01_ItemContributor": {
            role: components["schemas"]["catalogItems_2022-04-01_ItemContributorRole"];
            /** @description Name of the contributor, such as `Jane Austen`. */
            value: string;
        };
        /** @description Role of an individual contributor in the creation of an item, such as author or actor. */
        "catalogItems_2022-04-01_ItemContributorRole": {
            /** @description Display name of the role in the requested locale, such as `Author` or `Actor`. */
            displayName?: string;
            /** @description Role value for the Amazon catalog item, such as `author` or `actor`. */
            value: string;
        };
        /** @description An array of dimensions that are associated with the item in the Amazon catalog, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemDimensions": components["schemas"]["catalogItems_2022-04-01_ItemDimensionsByMarketplace"][];
        /** @description Dimensions that are associated with the item in the Amazon catalog for the indicated `marketplaceId`. */
        "catalogItems_2022-04-01_ItemDimensionsByMarketplace": {
            item?: components["schemas"]["catalogItems_2022-04-01_Dimensions"];
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            package?: components["schemas"]["catalogItems_2022-04-01_Dimensions"];
        };
        /** @description Sales rank of an Amazon catalog item, grouped by website display group. */
        "catalogItems_2022-04-01_ItemDisplayGroupSalesRank": {
            /** @description Corresponding Amazon retail website URL for the sales rank. */
            link?: string;
            /** @description Sales rank. */
            rank: number;
            /** @description Name of the sales rank. */
            title: string;
            /** @description Name of the website display group that is associated with the sales rank */
            websiteDisplayGroup: string;
        };
        /** @description The identifier that is associated with the item in the Amazon catalog, such as a UPC or EAN identifier. */
        "catalogItems_2022-04-01_ItemIdentifier": {
            /** @description Identifier of the item. */
            identifier: string;
            /** @description Type of identifier, such as UPC, EAN, or ISBN. */
            identifierType: string;
        };
        /** @description Identifiers associated with the item in the Amazon catalog, such as UPC and EAN identifiers. */
        "catalogItems_2022-04-01_ItemIdentifiers": components["schemas"]["catalogItems_2022-04-01_ItemIdentifiersByMarketplace"][];
        /** @description Identifiers that are associated with the item in the Amazon catalog, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemIdentifiersByMarketplace": {
            /** @description Identifiers associated with the item in the Amazon catalog for the indicated `marketplaceId`. */
            identifiers: components["schemas"]["catalogItems_2022-04-01_ItemIdentifier"][];
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).identifier. */
            marketplaceId: string;
        };
        /** @description Image for an item in the Amazon catalog. */
        "catalogItems_2022-04-01_ItemImage": {
            /** @description Height of the image in pixels. */
            height: number;
            /** @description URL for the image. */
            link: string;
            /**
             * @description Variant of the image, such as `MAIN` or `PT01`.
             * @example MAIN
             * @enum {string}
             */
            variant: "MAIN" | "PT01" | "PT02" | "PT03" | "PT04" | "PT05" | "PT06" | "PT07" | "PT08" | "SWCH";
            /** @description Width of the image in pixels. */
            width: number;
        };
        /** @description The images for an item in the Amazon catalog. */
        "catalogItems_2022-04-01_ItemImages": components["schemas"]["catalogItems_2022-04-01_ItemImagesByMarketplace"][];
        /** @description Images for an item in the Amazon catalog, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemImagesByMarketplace": {
            /** @description Images for an item in the Amazon catalog, grouped by `marketplaceId`. */
            images: components["schemas"]["catalogItems_2022-04-01_ItemImage"][];
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
        };
        /** @description Product type that is associated with the Amazon catalog item, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemProductTypeByMarketplace": {
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId?: string;
            /**
             * @description Name of the product type that is associated with the Amazon catalog item.
             * @example LUGGAGE
             */
            productType?: string;
        };
        /** @description Product types that are associated with the Amazon catalog item. */
        "catalogItems_2022-04-01_ItemProductTypes": components["schemas"]["catalogItems_2022-04-01_ItemProductTypeByMarketplace"][];
        /** @description Relationship details for an Amazon catalog item. */
        "catalogItems_2022-04-01_ItemRelationship": {
            /** @description ASINs of the related items that are children of this item. */
            childAsins?: string[];
            /** @description ASINs of the related items that are parents of this item. */
            parentAsins?: string[];
            /**
             * @description Type of relationship.
             * @example VARIATION
             * @enum {string}
             */
            type: "VARIATION" | "PACKAGE_HIERARCHY";
            variationTheme?: components["schemas"]["catalogItems_2022-04-01_ItemVariationTheme"];
        };
        /** @description Relationships grouped by `marketplaceId` for an Amazon catalog item (for example, variations). */
        "catalogItems_2022-04-01_ItemRelationships": components["schemas"]["catalogItems_2022-04-01_ItemRelationshipsByMarketplace"][];
        /** @description Relationship details for the Amazon catalog item for the specified Amazon `marketplaceId`. */
        "catalogItems_2022-04-01_ItemRelationshipsByMarketplace": {
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            /** @description Relationships for the item. */
            relationships: components["schemas"]["catalogItems_2022-04-01_ItemRelationship"][];
        };
        /** @description Sales ranks of an Amazon catalog item. */
        "catalogItems_2022-04-01_ItemSalesRanks": components["schemas"]["catalogItems_2022-04-01_ItemSalesRanksByMarketplace"][];
        /** @description Sales ranks of an Amazon catalog item, grouped by `marketplaceId`. */
        "catalogItems_2022-04-01_ItemSalesRanksByMarketplace": {
            /** @description Sales ranks of an Amazon catalog item for a `marketplaceId`, grouped by classification. */
            classificationRanks?: components["schemas"]["catalogItems_2022-04-01_ItemClassificationSalesRank"][];
            /** @description Sales ranks of an Amazon catalog item for a `marketplaceId`, grouped by website display group. */
            displayGroupRanks?: components["schemas"]["catalogItems_2022-04-01_ItemDisplayGroupSalesRank"][];
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
        };
        /** @description Items in the Amazon catalog and search-related metadata. */
        "catalogItems_2022-04-01_ItemSearchResults": {
            /** @description A list of items from the Amazon catalog. */
            items: components["schemas"]["catalogItems_2022-04-01_Item"][];
            /** @description For searches that are based on `identifiers`, `numberOfResults` is the total number of Amazon catalog items found. For searches that are based on `keywords`, `numberOfResults` is the estimated total number of Amazon catalog items that are matched by the search query. Only results up to the page count limit are returned per request regardless of the number found.
             *
             *     **Note:** The maximum number of items (ASINs) that can be returned and paged through is 1,000. */
            numberOfResults: number;
            pagination?: components["schemas"]["catalogItems_2022-04-01_Pagination"];
            refinements?: components["schemas"]["catalogItems_2022-04-01_Refinements"];
        };
        /** @description Summaries of Amazon catalog items. */
        "catalogItems_2022-04-01_ItemSummaries": components["schemas"]["catalogItems_2022-04-01_ItemSummaryByMarketplace"][];
        /** @description Information about an Amazon catalog item for the indicated `marketplaceId`. */
        "catalogItems_2022-04-01_ItemSummaryByMarketplace": {
            /** @description When `true`, the Amazon catalog item is intended for an adult audience or is sexual in nature. */
            adultProduct?: boolean;
            /** @description When `true`, the Amazon catalog item is autographed. */
            autographed?: boolean;
            /** @description Name of the brand that is associated with the Amazon catalog item. */
            brand?: string;
            browseClassification?: components["schemas"]["catalogItems_2022-04-01_ItemBrowseClassification"];
            /** @description The color that is associated with the Amazon catalog item. */
            color?: string;
            /** @description Individual contributors to the creation of the item, such as the authors or actors. */
            contributors?: components["schemas"]["catalogItems_2022-04-01_ItemContributor"][];
            /**
             * @description Classification type that is associated with the Amazon catalog item.
             * @enum {string}
             */
            itemClassification?: "BASE_PRODUCT" | "OTHER" | "PRODUCT_BUNDLE" | "VARIATION_PARENT";
            /** @description The name that is associated with the Amazon catalog item. */
            itemName?: string;
            /** @description The name of the manufacturer that is associated with the Amazon catalog item. */
            manufacturer?: string;
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            /** @description When true, the item is classified as memorabilia. */
            memorabilia?: boolean;
            /** @description The model number that is associated with the Amazon catalog item. */
            modelNumber?: string;
            /** @description The quantity of the Amazon catalog item within one package. */
            packageQuantity?: number;
            /** @description The part number that is associated with the Amazon catalog item. */
            partNumber?: string;
            /**
             * Format: date
             * @description The earliest date on which the Amazon catalog item can be shipped to customers.
             */
            releaseDate?: string;
            /** @description The name of the size of the Amazon catalog item. */
            size?: string;
            /** @description The name of the style that is associated with the Amazon catalog item. */
            style?: string;
            /** @description When true, the Amazon catalog item is eligible for trade-in. */
            tradeInEligible?: boolean;
            /** @description The identifier of the website display group that is associated with the Amazon catalog item. */
            websiteDisplayGroup?: string;
            /** @description The display name of the website display group that is associated with the Amazon catalog item. */
            websiteDisplayGroupName?: string;
        };
        /** @description The variation theme is a list of Amazon catalog item attributes that define the variation family. */
        "catalogItems_2022-04-01_ItemVariationTheme": {
            /** @description Names of the Amazon catalog item attributes that are associated with the variation theme. */
            attributes?: string[];
            /**
             * @description Variation theme that indicates the combination of Amazon catalog item attributes that define the variation family.
             * @example COLOR_NAME/STYLE_NAME
             */
            theme?: string;
        };
        /** @description The vendor details that are associated with an Amazon catalog item. Vendor details are only available to vendors. */
        "catalogItems_2022-04-01_ItemVendorDetails": components["schemas"]["catalogItems_2022-04-01_ItemVendorDetailsByMarketplace"][];
        /** @description The vendor details that are associated with an Amazon catalog item for the specified `marketplaceId`. */
        "catalogItems_2022-04-01_ItemVendorDetailsByMarketplace": {
            /** @description The brand code that is associated with an Amazon catalog item. */
            brandCode?: string;
            /** @description The manufacturer code that is associated with an Amazon catalog item. */
            manufacturerCode?: string;
            /** @description The parent vendor code of the manufacturer code. */
            manufacturerCodeParent?: string;
            /** @description Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            productCategory?: components["schemas"]["catalogItems_2022-04-01_ItemVendorDetailsCategory"];
            /** @description The product group that is associated with an Amazon catalog item. */
            productGroup?: string;
            productSubcategory?: components["schemas"]["catalogItems_2022-04-01_ItemVendorDetailsCategory"];
            /**
             * @description The replenishment category that is associated with an Amazon catalog item.
             * @enum {string}
             */
            replenishmentCategory?: "ALLOCATED" | "BASIC_REPLENISHMENT" | "IN_SEASON" | "LIMITED_REPLENISHMENT" | "MANUFACTURER_OUT_OF_STOCK" | "NEW_PRODUCT" | "NON_REPLENISHABLE" | "NON_STOCKUPABLE" | "OBSOLETE" | "PLANNED_REPLENISHMENT";
        };
        /** @description The product category or subcategory that is associated with an Amazon catalog item. */
        "catalogItems_2022-04-01_ItemVendorDetailsCategory": {
            /** @description The display name of the product category or subcategory. */
            displayName?: string;
            /** @description The code that identifies the product category or subcategory. */
            value?: string;
        };
        /** @description Pagination occurs when a request produces a response that exceeds the `pageSize`. This means that the response is divided into individual pages. To retrieve the next page or the previous page of results, you must pass the `nextToken` value or the `previousToken` value as the `pageToken` parameter in the next request. There is no `nextToken` in the pagination object on the last page. */
        "catalogItems_2022-04-01_Pagination": {
            /** @description A token that you can use to retrieve the next page. */
            nextToken?: string;
            /** @description A token that you can use to retrieve the previous page. */
            previousToken?: string;
        };
        /** @description Optional fields that you can use to refine your search results. */
        "catalogItems_2022-04-01_Refinements": {
            /** @description A list of brands you can use to refine your search. */
            brands: components["schemas"]["catalogItems_2022-04-01_BrandRefinement"][];
            /** @description A list of classifications you can use to refine your search. */
            classifications: components["schemas"]["catalogItems_2022-04-01_ClassificationRefinement"][];
        };
        catalogItemsV0_Categories: {
            /** @description The parent product category. */
            parent?: Record<string, unknown>;
            /** @description The identifier for the product category (or browse node). */
            ProductCategoryId?: string;
            /** @description The name of the product category (or browse node). */
            ProductCategoryName?: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        catalogItemsV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional information that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        catalogItemsV0_ErrorList: components["schemas"]["catalogItemsV0_Error"][];
        catalogItemsV0_ListCatalogCategoriesResponse: {
            errors?: components["schemas"]["catalogItemsV0_ErrorList"];
            payload?: components["schemas"]["catalogItemsV0_ListOfCategories"];
        };
        catalogItemsV0_ListOfCategories: components["schemas"]["catalogItemsV0_Categories"][];
        /** @description The browse node review occurrence metrics. */
        "customerFeedback_2024-06-01_BrowseNodeAllOccurrence": {
            /**
             * Format: float
             * @description The percentage of reviews of products in the browse node that mention the topic.
             */
            allProducts: number;
            /**
             * Format: float
             * @description The percentage of reviews of the top 25 percent of products in the browse node that mention the topic.
             */
            topTwentyFivePercentProducts: number;
        };
        /** @description The effects of a topic on the star ratings in a browse node. */
        "customerFeedback_2024-06-01_BrowseNodeAllStarRatingImpact": {
            /**
             * Format: float
             * @description The effect of the topic on the star rating of all products in the browse node. This value can be positive or negative.
             */
            allProducts: number;
            /**
             * Format: float
             * @description The effect of the topic on the star rating of the top 25 percent of products in the browse node. This value can be positive or negative.
             */
            topTwentyFivePercentProducts: number;
        };
        /** @description The browse node review trend occurrence metrics. */
        "customerFeedback_2024-06-01_BrowseNodeOccurrence": {
            /**
             * Format: float
             * @description The percentage of reviews of products in the browse node that mention a topic.
             */
            allProducts: number;
        };
        /** @description The response for the `getItemBrowseNode` operation. */
        "customerFeedback_2024-06-01_BrowseNodeResponse": {
            /** @description A browse node id is the unique identifier of a given browse node. A browse node is a location in a browse tree that is used for navigation, product classification, and website content. */
            browseNodeId: string;
            /** @description The display name of the browse node as visible on the Amazon retail website. */
            displayName: string;
        };
        /** @description Topics from returns for all items in a browse node. */
        "customerFeedback_2024-06-01_BrowseNodeReturnTopics": {
            browseNodeMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeTrendMetrics"];
            /** @description The name of the return feedback topic . */
            topic: string;
        };
        /** @description The response for the `getBrowseNodeReturnTopics` operation. */
        "customerFeedback_2024-06-01_BrowseNodeReturnTopicsResponse": {
            /** @description The requested browse node id. A browse node id is the unique identifier of a given browse node. */
            browseNodeId: string;
            /** @description The two digit country code of requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The display name of the browse node, as visible on the Amazon retail website. */
            displayName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            /** @description The list of browse node return topics. */
            topics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReturnTopics"][];
        };
        /** @description The trend of return topic metrics for all items in the requested browse node. */
        "customerFeedback_2024-06-01_BrowseNodeReturnTrend": {
            /** @description The name of the topic. */
            topic: string;
            /** @description The browse node return trend metrics. */
            trendMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReturnTrendPoint"][];
        };
        /** @description The return metrics for a certain month. */
        "customerFeedback_2024-06-01_BrowseNodeReturnTrendPoint": {
            browseNodeMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeTrendMetrics"];
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
        };
        /** @description The response for the `getBrowseNodeReturnTrends` operation. */
        "customerFeedback_2024-06-01_BrowseNodeReturnTrendsResponse": {
            /** @description The requested browse node id. A browse node id is the unique identifier of a given browse node. */
            browseNodeId: string;
            /** @description The two digit country code of requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The display name of the browse node, as visible on the Amazon retail website. */
            displayName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            /** @description The browse node return trends. */
            returnTrends: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReturnTrend"][];
        };
        /** @description The browse node review subtopic metrics. */
        "customerFeedback_2024-06-01_BrowseNodeReviewSubtopicMetrics": {
            /**
             * Format: float
             * @description The percentage of reviews that mention the subtopic.
             */
            occurrencePercentage: number;
        };
        /** @description The browse node review topic. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTopic": {
            browseNodeMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTopicMetrics"];
            /** @description A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the topic. */
            reviewSnippets?: string[];
            /** @description A list of the five subtopics that occur most frequently. This value is `null` if there are no subtopics. */
            subtopics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeSubtopic"][];
            /** @description The name browse node review topic. */
            topic: string;
        };
        /** @description The browse node review topic metrics. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTopicMetrics": {
            occurrencePercentage?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeAllOccurrence"];
            starRatingImpact?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeAllStarRatingImpact"];
        };
        /** @description The 10 most positive and most negative review topics for all items in a browse node. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTopics": {
            /** @description A list of the most negative review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews of items within the requested browse node that mention the topic determine the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of items within the requested browse node determine placement in the list. This value is `null` if there are not enough negative reviews for the requested browse node.
             *
             *     **Max length:** 10 */
            negativeTopics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTopic"][];
            /** @description A list of the most positive review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews of items within the requested browse node that mention the topic determine the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of items within the requested browse node determine placement in the list. This value is `null` if there are not enough positive reviews for the requested browse node.
             *
             *     **Max length:** 10 */
            positiveTopics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTopic"][];
        };
        /** @description The response for the `getBrowseNodeReviewTopics` operation. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTopicsResponse": {
            /** @description The requested browse node id. A browse node id is the unique identifier of a given browse node. */
            browseNodeId: string;
            /** @description The two digit country code of requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The display name of the requested browse node id. The display name of the browse node as visible on the Amazon retail website. */
            displayName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            topics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTopics"];
        };
        /** @description The trend of review topic metrics for all items in the requested browse node. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTrend": {
            /** @description The name of the topic. */
            topic: string;
            /** @description The browse node's review trend metrics for the past six months. */
            trendMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrendPoint"][];
        };
        /** @description The browse node review topic metrics. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTrendMetrics": {
            occurrencePercentage: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeAllOccurrence"];
        };
        /** @description The browse node's review metrics for a certain month. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTrendPoint": {
            browseNodeMetrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrendMetrics"];
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
        };
        /** @description The 10 most positive and most negative review topics for all items in a browse node. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTrends": {
            /** @description The trends of the most negative review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic's placement in the list. This value is `null` if there aren't enough positive reviews for the requested browse node.
             *
             *     **Max length:** 10 */
            negativeTopics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrend"][];
            /** @description The trends of the most positive review topics. The percentage of reviews that contain the topic across all products in the requested browse node determine the topic's placement in the list. This value is `null` if there aren't enough positive reviews for the requested browse node.
             *
             *     **Max length:** 10 */
            positiveTopics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrend"][];
        };
        /** @description The response for the `getBrowseNodeReviewTrends` operation. */
        "customerFeedback_2024-06-01_BrowseNodeReviewTrendsResponse": {
            /** @description The requested browse node id. A browse node id is the unique identifier of a given browse node. */
            browseNodeId: string;
            /** @description The two digit country code of requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The display name of the requested browse node id. The display name of the browse node as visible on the Amazon retail website. */
            displayName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            reviewTrends: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrends"];
        };
        /** @description The effects of a topic on a browse node's star rating. */
        "customerFeedback_2024-06-01_BrowseNodeStarRatingImpact": {
            /**
             * Format: float
             * @description The effect of the topic on the star rating for all products in this browse node. This value can be positive or negative.
             */
            allProducts: number;
        };
        /** @description The browse node review subtopic. */
        "customerFeedback_2024-06-01_BrowseNodeSubtopic": {
            metrics: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewSubtopicMetrics"];
            /** @description A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the subtopic. */
            reviewSnippets?: string[];
            /** @description The name of the browse node review subtopic. */
            subtopic: string;
        };
        /** @description A single browse node review or return trend metric. */
        "customerFeedback_2024-06-01_BrowseNodeTrendMetrics": {
            occurrencePercentage: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeOccurrence"];
        };
        /** @description The child ASIN review topic mention metrics. */
        "customerFeedback_2024-06-01_ChildAsinMentionMetrics": {
            /** @description The child ASIN of the requested item. */
            asin: string;
            /** @description The number of times reviews of the child ASIN mention the topic. */
            numberOfMentions: number;
        };
        /** @description The review topic metrics for other child ASINs that have the same parent ASIN. This value is `null` if there isn't any child ASIN metric data. */
        "customerFeedback_2024-06-01_ChildAsinMetrics": {
            leastMentions?: components["schemas"]["customerFeedback_2024-06-01_ChildAsinMentionMetrics"];
            mostMentions?: components["schemas"]["customerFeedback_2024-06-01_ChildAsinMentionMetrics"];
        };
        /** @description A date range. */
        "customerFeedback_2024-06-01_DateRange": {
            /**
             * Format: date-time
             * @description The end date of the date range in ISO-8601 date/time format.
             */
            endDate: string;
            /**
             * Format: date-time
             * @description The start date of the date range in ISO-8601 date/time format.
             */
            startDate: string;
        };
        /**
         * @description Error response returned when the request is unsuccessful.
         * @example {
         *       "code": "CF_ERROR_001",
         *       "details": "The requested ASIN is not valid.",
         *       "message": "Invalid Request"
         *     }
         */
        "customerFeedback_2024-06-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "customerFeedback_2024-06-01_ErrorList": {
            /** @description List of errors. */
            errors: components["schemas"]["customerFeedback_2024-06-01_Error"][];
        };
        /** @description The browse node review topic metrics. */
        "customerFeedback_2024-06-01_ItemReviewBrowseNodeMetrics": {
            occurrencePercentage?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeOccurrence"];
            starRatingImpact?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeStarRatingImpact"];
        };
        /** @description Details of the subtopic for an item review topic. */
        "customerFeedback_2024-06-01_ItemReviewSubtopic": {
            metrics: components["schemas"]["customerFeedback_2024-06-01_ItemReviewSubtopicMetrics"];
            /** @description A list of up to three snippets from reviews that contain the subtopic. This value is `null` if there aren't enough review snippets for the subtopic. */
            reviewSnippets?: string[];
            /** @description The name of the subtopic. */
            subtopic: string;
        };
        /** @description The item review subtopic metrics. */
        "customerFeedback_2024-06-01_ItemReviewSubtopicMetrics": {
            /** @description The number of times that reviews mention the subtopic. */
            numberOfMentions: number;
            /**
             * Format: float
             * @description The percentage of reviews that mention the subtopic.
             */
            occurrencePercentage: number;
        };
        /** @description Details of item review topic. */
        "customerFeedback_2024-06-01_ItemReviewTopic": {
            asinMetrics: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopicMetrics"];
            browseNodeMetrics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewBrowseNodeMetrics"];
            childAsinMetrics?: components["schemas"]["customerFeedback_2024-06-01_ChildAsinMetrics"];
            parentAsinMetrics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopicMetrics"];
            /** @description A list of up to three snippets from reviews that contain the topic. This value is `null` if there aren't enough review snippets for the topic. */
            reviewSnippets?: string[];
            /** @description A list of up to five top subtopics for the topic. The percentage of customer reviews that mention the subtopic determine the topic's placement in the list. This value is `null` if there are no subtopics. */
            subtopics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewSubtopic"][];
            /** @description The name of the item review topic. */
            topic: string;
        };
        /** @description The item review topic metrics. */
        "customerFeedback_2024-06-01_ItemReviewTopicMetrics": {
            /** @description The number of times that reviews mention the topic. This value is `null` if reviews do not mention the topic frequently enough. */
            numberOfMentions?: number;
            /**
             * Format: float
             * @description The percentage of customer reviews that mention the topic. This value is `null` if reviews do not mention the topic frequently enough.
             */
            occurrencePercentage?: number;
            /**
             * Format: float
             * @description The effect of the topic on the star rating of the ASIN. This value can be positive or negative. This value is `null` if the topic does't affect the star rating of the ASIN.
             */
            starRatingImpact?: number;
        };
        /** @description The top 10 positive and negative item review topics. */
        "customerFeedback_2024-06-01_ItemReviewTopics": {
            /** @description A list of the most negative review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews that mention the topic determines the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of the item determines placement in the list. This value is `null` if there are not enough negative reviews for the specified ASIN.
             *
             *     **Max length:** 10 */
            negativeTopics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopic"][];
            /** @description A list of the most positive review topics. When the `sortBy` query parameter is set to `MENTIONS`, the number of reviews that mention the topic determines the topic's placement in the list. When `sortBy` is set to `STAR_RATING_IMPACT`, the effect that the topic has on the star rating of the item determines placement in the list. This value is `null` if there are not enough positive reviews for the specified ASIN.
             *
             *     **Max length:** 10 */
            positiveTopics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopic"][];
        };
        /** @description The response for the `getItemReviewTopics` operation. */
        "customerFeedback_2024-06-01_ItemReviewTopicsResponse": {
            /** @description The requested ASIN. The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. */
            asin: string;
            /** @description The two digit country code of the requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The product title of the requested ASIN. */
            itemName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            topics: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopics"];
        };
        /** @description The trend of review topic metrics for the requested item. */
        "customerFeedback_2024-06-01_ItemReviewTrend": {
            /** @description The name of the item review topic. */
            topic: string;
            /** @description The item's review trend metrics for the past six months. */
            trendMetrics: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTrendPoint"][];
        };
        /** @description The review metrics for a certain month. */
        "customerFeedback_2024-06-01_ItemReviewTrendPoint": {
            asinMetrics: components["schemas"]["customerFeedback_2024-06-01_ReviewTrendMetrics"];
            browseNodeMetrics?: components["schemas"]["customerFeedback_2024-06-01_BrowseNodeTrendMetrics"];
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            parentAsinMetrics?: components["schemas"]["customerFeedback_2024-06-01_ReviewTrendMetrics"];
        };
        /** @description The 10 most positive and most negative review topics for all items in a browse node. */
        "customerFeedback_2024-06-01_ItemReviewTrends": {
            /** @description A list of the most negative review topics. The percentage of reviews that contain the topic determines the topic's placement in the list. This value is `null` if there are not enough negative reviews for the specified ASIN.
             *
             *     **Max length:** 10 */
            negativeTopics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTrend"][];
            /** @description A list of the most positive review topics. The percentage of reviews that contain the topic determines the topic's placement in the list. This value is `null` if there are not enough positive reviews for the specified ASIN.
             *
             *     **Max length:** 10 */
            positiveTopics?: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTrend"][];
        };
        /** @description The response for the `getItemReviewTrends` operation. */
        "customerFeedback_2024-06-01_ItemReviewTrendsResponse": {
            /** @description The requested ASIN. The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. */
            asin: string;
            /** @description The two digit country code of the requested marketplace id, in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            dateRange: components["schemas"]["customerFeedback_2024-06-01_DateRange"];
            /** @description The product title of the requested ASIN. */
            itemName: string;
            /** @description The requested marketplace id. */
            marketplaceId: string;
            reviewTrends: components["schemas"]["customerFeedback_2024-06-01_ItemReviewTrends"];
        };
        /** @description The item review trend metrics. */
        "customerFeedback_2024-06-01_ReviewTrendMetrics": {
            /**
             * Format: float
             * @description The percentage of reviews that mention the topic.
             */
            occurrencePercentage: number;
        };
        /** @description The response for the `createQuery` operation. */
        "dataKiosk_2023-11-15_CreateQueryResponse": {
            /** @description The identifier for the query. This identifier is unique only in combination with a selling partner account ID. */
            queryId: string;
        };
        /** @description Information required to create the query. */
        "dataKiosk_2023-11-15_CreateQuerySpecification": {
            /** @description A token to fetch a certain page of query results when there are multiple pages of query results available. The value of this token must be fetched from the `pagination.nextToken` field of the `Query` object, and the `query` field for this object must also be set to the `query` field of the same `Query` object. A `Query` object can be retrieved from either the `getQueries` or `getQuery` operation. In the absence of this token value, the first page of query results will be requested. */
            paginationToken?: string;
            /** @description The GraphQL query to submit. A query must be at most 8000 characters after unnecessary whitespace is removed. */
            query: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "dataKiosk_2023-11-15_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "dataKiosk_2023-11-15_ErrorList": {
            /** @description Error response returned when the request is unsuccessful. */
            errors: components["schemas"]["dataKiosk_2023-11-15_Error"][];
        };
        /** @description The response for the `getDocument` operation. */
        "dataKiosk_2023-11-15_GetDocumentResponse": {
            /** @description The identifier for the Data Kiosk document. This identifier is unique only in combination with a selling partner account ID. */
            documentId: string;
            /** @description A presigned URL that can be used to retrieve the Data Kiosk document. This URL expires after 5 minutes. If the Data Kiosk document is compressed, the `Content-Encoding` header will indicate the compression algorithm.
             *
             *     **Note:** Most HTTP clients are capable of automatically decompressing downloaded files based on the `Content-Encoding` header. */
            documentUrl: string;
        };
        /** @description The response for the `getQueries` operation. */
        "dataKiosk_2023-11-15_GetQueriesResponse": {
            /** @description When a request has results that are not included in this response, pagination occurs. This means the results are divided into pages. To retrieve the next page, you must pass the `nextToken` as the `paginationToken` query parameter in the subsequent `getQueries` request. All other parameters must be provided with the same values that were provided with the request that generated this token, with the exception of `pageSize` which can be modified between calls to `getQueries`. When there are no more pages to fetch, the `nextToken` field will be absent. */
            pagination?: {
                /** @description A token that can be used to fetch the next page of results. */
                nextToken?: string;
            };
            queries: components["schemas"]["dataKiosk_2023-11-15_QueryList"];
        };
        /** @description Detailed information about the query. */
        "dataKiosk_2023-11-15_Query": {
            /**
             * Format: date-time
             * @description The date and time when the query was created, in ISO 8601 date time format.
             */
            createdTime: string;
            /** @description The data document identifier. This identifier is only present when there is data available as a result of the query. This identifier is unique only in combination with a selling partner account ID. Pass this identifier into the `getDocument` operation to get the information required to retrieve the data document's contents. */
            dataDocumentId?: string;
            /** @description The error document identifier. This identifier is only present when an error occurs during query processing. This identifier is unique only in combination with a selling partner account ID. Pass this identifier into the `getDocument` operation to get the information required to retrieve the error document's contents. */
            errorDocumentId?: string;
            /** @description When a query produces results that are not included in the data document, pagination occurs. This means the results are divided into pages. To retrieve the next page, you must pass a `CreateQuerySpecification` object with `paginationToken` set to this object's `nextToken` and with `query` set to this object's `query` in the subsequent `createQuery` request. When there are no more pages to fetch, the `nextToken` field will be absent. */
            pagination?: {
                /** @description A token that can be used to fetch the next page of results. */
                nextToken?: string;
            };
            /**
             * Format: date-time
             * @description The date and time when the query processing completed, in ISO 8601 date time format.
             */
            processingEndTime?: string;
            /**
             * Format: date-time
             * @description The date and time when the query processing started, in ISO 8601 date time format.
             */
            processingStartTime?: string;
            /**
             * @description The processing status of the query.
             * @enum {string}
             */
            processingStatus: "CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE";
            /** @description The submitted query. */
            query: string;
            /** @description The query identifier. This identifier is unique only in combination with a selling partner account ID. */
            queryId: string;
        };
        /** @description A list of queries. */
        "dataKiosk_2023-11-15_QueryList": components["schemas"]["dataKiosk_2023-11-15_Query"][];
        /** @description Error response returned when the request is unsuccessful. */
        "definitionsProductTypes_2020-09-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "definitionsProductTypes_2020-09-01_ErrorList": {
            errors: components["schemas"]["definitionsProductTypes_2020-09-01_Error"][];
        };
        /** @description An Amazon product type with a definition available. */
        "definitionsProductTypes_2020-09-01_ProductType": {
            /** @description The human-readable and localized description of the Amazon product type. */
            displayName: string;
            /** @description The Amazon marketplace identifiers for which the product type definition is available. */
            marketplaceIds: string[];
            /** @description The name of the Amazon product type. */
            name: string;
        };
        /** @description A product type definition represents the attributes and data requirements for a product type in the Amazon catalog. Product type definitions are used interchangeably between the Selling Partner API for Listings Items, Selling Partner API for Catalog Items, and JSON-based listings feeds in the Selling Partner API for Feeds. */
        "definitionsProductTypes_2020-09-01_ProductTypeDefinition": {
            /** @description Human-readable and localized description of the Amazon product type. */
            displayName: string;
            /** @description Locale of the display elements contained in the product type definition. */
            locale: string;
            /** @description Amazon marketplace identifiers for which the product type definition is applicable. */
            marketplaceIds: string[];
            metaSchema?: components["schemas"]["definitionsProductTypes_2020-09-01_SchemaLink"];
            /** @description The name of the Amazon product type that this product type definition applies to. */
            productType: string;
            productTypeVersion: components["schemas"]["definitionsProductTypes_2020-09-01_ProductTypeVersion"];
            /** @description Mapping of property group names to property groups. Property groups represent logical groupings of schema properties that can be used for display or informational purposes. */
            propertyGroups: {
                [key: string]: components["schemas"]["definitionsProductTypes_2020-09-01_PropertyGroup"];
            };
            /**
             * @description Name of the requirements set represented in this product type definition.
             * @enum {string}
             */
            requirements: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
            /**
             * @description Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all of the required attributes being present (such as for partial updates).
             * @enum {string}
             */
            requirementsEnforced: "ENFORCED" | "NOT_ENFORCED";
            schema: components["schemas"]["definitionsProductTypes_2020-09-01_SchemaLink"];
        };
        /** @description A list of Amazon product types with definitions available. */
        "definitionsProductTypes_2020-09-01_ProductTypeList": {
            productTypes: components["schemas"]["definitionsProductTypes_2020-09-01_ProductType"][];
            /** @description Amazon product type version identifier. */
            productTypeVersion: string;
        };
        /** @description The version details for an Amazon product type. */
        "definitionsProductTypes_2020-09-01_ProductTypeVersion": {
            /** @description When true, the version indicated by the version identifier is the latest available for the Amazon product type. */
            latest: boolean;
            /** @description When true, the version indicated by the version identifier is the prerelease (release candidate) for the Amazon product type. */
            releaseCandidate?: boolean;
            /** @description Version identifier. */
            version: string;
        };
        /** @description A property group represents a logical grouping of schema properties that can be used for display or informational purposes. */
        "definitionsProductTypes_2020-09-01_PropertyGroup": {
            /** @description The description of the property group. */
            description?: string;
            /** @description The names of the schema properties for the property group. */
            propertyNames?: string[];
            /** @description The display label of the property group. */
            title?: string;
        };
        "definitionsProductTypes_2020-09-01_SchemaLink": {
            /** @description Checksum hash of the schema (Base64 MD5). Can be used to verify schema contents, identify changes between schema versions, and for caching. */
            checksum: string;
            /** @description Link to retrieve the schema. */
            link: {
                /** @description URI resource for the link. */
                resource: string;
                /**
                 * @description HTTP method for the link operation.
                 * @enum {string}
                 */
                verb: "GET";
            };
        };
        /** @description An Amazon-defined order identifier. Identifies the order that the seller wants to deliver using Amazon Easy Ship. */
        "easyShip_2022-03-23_AmazonOrderId": string;
        /**
         * @description An error code that identifies the type of error that occurred. The error codes listed below are specific to the Easy Ship section.
         * @enum {string}
         */
        "easyShip_2022-03-23_Code": "InvalidInput" | "InvalidTimeSlotId" | "ScheduledPackageAlreadyExists" | "ScheduleWindowExpired" | "RetryableAfterGettingNewSlots" | "TimeSlotNotAvailable" | "ResourceNotFound" | "InvalidOrderState" | "RegionNotSupported" | "OrderNotEligibleForRescheduling" | "InternalServerError";
        /** @description The request schema for the `createScheduledPackage` operation. */
        "easyShip_2022-03-23_CreateScheduledPackageRequest": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            marketplaceId: components["schemas"]["easyShip_2022-03-23_String"];
            packageDetails: components["schemas"]["easyShip_2022-03-23_PackageDetails"];
        };
        /** @description The request body for the POST /easyShip/2022-03-23/packages/bulk API. */
        "easyShip_2022-03-23_CreateScheduledPackagesRequest": {
            labelFormat: components["schemas"]["easyShip_2022-03-23_LabelFormat"];
            marketplaceId: components["schemas"]["easyShip_2022-03-23_String"];
            /** @description An array allowing users to specify orders to be scheduled. */
            orderScheduleDetailsList: components["schemas"]["easyShip_2022-03-23_OrderScheduleDetails"][];
        };
        /** @description The response schema for the bulk scheduling API. It returns by the bulk scheduling API containing an array of the scheduled packtages, an optional list of orders we couldn't schedule with the reason, and a pre-signed URL for a ZIP file containing the associated shipping labels plus the documents enabled for your marketplace. */
        "easyShip_2022-03-23_CreateScheduledPackagesResponse": {
            printableDocumentsUrl?: components["schemas"]["easyShip_2022-03-23_URL"];
            /** @description A list of orders we couldn't scheduled on your behalf. Each element contains the reason and details on the error. */
            rejectedOrders?: components["schemas"]["easyShip_2022-03-23_RejectedOrder"][];
            /** @description A list of packages. Refer to the `Package` object. */
            scheduledPackages?: components["schemas"]["easyShip_2022-03-23_Package"][];
        };
        /**
         * Format: date-time
         * @description A datetime value in ISO 8601 format.
         */
        "easyShip_2022-03-23_DateTime": string;
        /**
         * Format: float
         * @description The numerical value of the specified dimension.
         */
        "easyShip_2022-03-23_Dimension": number;
        /** @description The dimensions of the scheduled package. */
        "easyShip_2022-03-23_Dimensions": {
            height?: components["schemas"]["easyShip_2022-03-23_Dimension"];
            identifier?: components["schemas"]["easyShip_2022-03-23_String"];
            length?: components["schemas"]["easyShip_2022-03-23_Dimension"];
            unit?: components["schemas"]["easyShip_2022-03-23_UnitOfLength"];
            width?: components["schemas"]["easyShip_2022-03-23_Dimension"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "easyShip_2022-03-23_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "easyShip_2022-03-23_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["easyShip_2022-03-23_Error"][];
        };
        /**
         * @description Identifies the method by which a seller will hand a package over to Amazon Logistics.
         * @enum {string}
         */
        "easyShip_2022-03-23_HandoverMethod": "PICKUP" | "DROPOFF";
        /** @description Invoice number and date. */
        "easyShip_2022-03-23_InvoiceData": {
            invoiceDate?: components["schemas"]["easyShip_2022-03-23_DateTime"];
            invoiceNumber: components["schemas"]["easyShip_2022-03-23_String"];
        };
        /** @description Item identifier and serial number information. */
        "easyShip_2022-03-23_Item": {
            orderItemId?: components["schemas"]["easyShip_2022-03-23_OrderItemId"];
            orderItemSerialNumbers?: components["schemas"]["easyShip_2022-03-23_OrderItemSerialNumbers"];
        };
        /** @description A list of items contained in the package. */
        "easyShip_2022-03-23_Items": components["schemas"]["easyShip_2022-03-23_Item"][];
        /**
         * @description The file format in which the shipping label will be created.
         * @enum {string}
         */
        "easyShip_2022-03-23_LabelFormat": "PDF" | "ZPL";
        /** @description The request schema for the `listHandoverSlots` operation. */
        "easyShip_2022-03-23_ListHandoverSlotsRequest": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            marketplaceId: components["schemas"]["easyShip_2022-03-23_String"];
            packageDimensions: components["schemas"]["easyShip_2022-03-23_Dimensions"];
            packageWeight: components["schemas"]["easyShip_2022-03-23_Weight"];
        };
        /** @description The response schema for the `listHandoverSlots` operation. */
        "easyShip_2022-03-23_ListHandoverSlotsResponse": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            timeSlots: components["schemas"]["easyShip_2022-03-23_TimeSlots"];
        };
        /** @description The Amazon-defined order item identifier. */
        "easyShip_2022-03-23_OrderItemId": string;
        /** @description A serial number for an item associated with the `OrderItemId` value. */
        "easyShip_2022-03-23_OrderItemSerialNumber": string;
        /** @description A list of serial numbers for the items associated with the `OrderItemId` value. */
        "easyShip_2022-03-23_OrderItemSerialNumbers": components["schemas"]["easyShip_2022-03-23_OrderItemSerialNumber"][];
        /** @description This object allows users to specify an order to be scheduled. Only the amazonOrderId is required.  */
        "easyShip_2022-03-23_OrderScheduleDetails": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            packageDetails?: components["schemas"]["easyShip_2022-03-23_PackageDetails"];
        };
        /** @description This object contains all the details of the scheduled Easy Ship package. */
        "easyShip_2022-03-23_Package": {
            invoice?: components["schemas"]["easyShip_2022-03-23_InvoiceData"];
            packageDimensions: components["schemas"]["easyShip_2022-03-23_Dimensions"];
            packageIdentifier?: components["schemas"]["easyShip_2022-03-23_PackageIdentifier"];
            packageItems?: components["schemas"]["easyShip_2022-03-23_Items"];
            packageStatus?: components["schemas"]["easyShip_2022-03-23_PackageStatus"];
            packageTimeSlot: components["schemas"]["easyShip_2022-03-23_TimeSlot"];
            packageWeight: components["schemas"]["easyShip_2022-03-23_Weight"];
            scheduledPackageId: components["schemas"]["easyShip_2022-03-23_ScheduledPackageId"];
            trackingDetails?: components["schemas"]["easyShip_2022-03-23_TrackingDetails"];
        };
        /** @description Package details. Includes `packageItems`, `packageTimeSlot`, and `packageIdentifier`. */
        "easyShip_2022-03-23_PackageDetails": {
            packageIdentifier?: components["schemas"]["easyShip_2022-03-23_PackageIdentifier"];
            packageItems?: components["schemas"]["easyShip_2022-03-23_Items"];
            packageTimeSlot: components["schemas"]["easyShip_2022-03-23_TimeSlot"];
        };
        /** @description An Amazon-defined identifier for the scheduled package. */
        "easyShip_2022-03-23_PackageId": string;
        /** @description Optional seller-created identifier that is printed on the shipping label to help the seller identify the package. */
        "easyShip_2022-03-23_PackageIdentifier": string;
        /** @description A list of packages. */
        "easyShip_2022-03-23_Packages": {
            /** @description A list of packages. */
            packages: components["schemas"]["easyShip_2022-03-23_Package"][];
        };
        /**
         * @description The status of the package.
         * @enum {string}
         */
        "easyShip_2022-03-23_PackageStatus": "ReadyForPickup" | "PickedUp" | "AtOriginFC" | "AtDestinationFC" | "Delivered" | "Rejected" | "Undeliverable" | "ReturnedToSeller" | "LostInTransit" | "LabelCanceled" | "DamagedInTransit" | "OutForDelivery";
        /** @description A order which we couldn't schedule on your behalf. It contains its id, and information on the error. */
        "easyShip_2022-03-23_RejectedOrder": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            error?: components["schemas"]["easyShip_2022-03-23_Error"];
        };
        /** @description Identifies the scheduled package to be updated. */
        "easyShip_2022-03-23_ScheduledPackageId": {
            amazonOrderId: components["schemas"]["easyShip_2022-03-23_AmazonOrderId"];
            packageId?: components["schemas"]["easyShip_2022-03-23_PackageId"];
        };
        /** @description A string of up to 255 characters. */
        "easyShip_2022-03-23_String": string;
        /** @description A time window to hand over an Easy Ship package to Amazon Logistics. */
        "easyShip_2022-03-23_TimeSlot": {
            endTime?: components["schemas"]["easyShip_2022-03-23_DateTime"];
            handoverMethod?: components["schemas"]["easyShip_2022-03-23_HandoverMethod"];
            slotId: components["schemas"]["easyShip_2022-03-23_String"];
            startTime?: components["schemas"]["easyShip_2022-03-23_DateTime"];
        };
        /** @description A list of time slots. */
        "easyShip_2022-03-23_TimeSlots": components["schemas"]["easyShip_2022-03-23_TimeSlot"][];
        /** @description Representation of tracking metadata. */
        "easyShip_2022-03-23_TrackingDetails": {
            trackingId?: components["schemas"]["easyShip_2022-03-23_String"];
        };
        /**
         * @description The unit of measurement used to measure the length.
         * @enum {string}
         */
        "easyShip_2022-03-23_UnitOfLength": "cm";
        /**
         * @description The unit of measurement used to measure the weight.
         * @enum {string}
         */
        "easyShip_2022-03-23_UnitOfWeight": "grams" | "g";
        /** @description Request to update the time slot of a package. */
        "easyShip_2022-03-23_UpdatePackageDetails": {
            packageTimeSlot: components["schemas"]["easyShip_2022-03-23_TimeSlot"];
            scheduledPackageId: components["schemas"]["easyShip_2022-03-23_ScheduledPackageId"];
        };
        /** @description A list of package update details. */
        "easyShip_2022-03-23_UpdatePackageDetailsList": components["schemas"]["easyShip_2022-03-23_UpdatePackageDetails"][];
        /** @description The request schema for the `updateScheduledPackages` operation. */
        "easyShip_2022-03-23_UpdateScheduledPackagesRequest": {
            marketplaceId: components["schemas"]["easyShip_2022-03-23_String"];
            updatePackageDetailsList: components["schemas"]["easyShip_2022-03-23_UpdatePackageDetailsList"];
        };
        /** @description A pre-signed URL for the zip document containing the shipping labels and the documents enabled for your marketplace. */
        "easyShip_2022-03-23_URL": string;
        /** @description The weight of the scheduled package */
        "easyShip_2022-03-23_Weight": {
            unit?: components["schemas"]["easyShip_2022-03-23_UnitOfWeight"];
            value?: components["schemas"]["easyShip_2022-03-23_WeightValue"];
        };
        /**
         * Format: float
         * @description The weight of the package.
         */
        "easyShip_2022-03-23_WeightValue": number;
        /** @description Error details you can take action on. */
        "externalFulfillmentInventory_2024-09-11_ActionableError": {
            /**
             * @description The secondary level error type.
             * @example INVALID_SKU
             */
            errorSubType?: string;
            /**
             * @description The top level error type that may contain multiple error subtypes.
             * @example PRODUCT_VALIDATION_FAILURE
             */
            errorType?: string;
        };
        /**
         * @description A list of inventory requests.
         * @example {
         *       "requests": [
         *         {
         *           "method": "POST",
         *           "uri": "/inventory/update?locationId=EXSB&skuId=efptestsku1",
         *           "body": {
         *             "quantity": 15,
         *             "clientSequenceNumber": 12345678,
         *             "marketplaceAttributes": {
         *               "marketplaceId": "AXJDDKDFDKDF",
         *               "channelName": "FBA"
         *             }
         *           }
         *         },
         *         {
         *           "method": "POST",
         *           "uri": "/inventory/fetch?locationId=EXSB&skuId=efptestsku2",
         *           "body": {
         *             "marketplaceAttributes": {
         *               "marketplaceId": "AXJDDKDFDKDF",
         *               "channelName": "FBA"
         *             }
         *           }
         *         }
         *       ]
         *     }
         */
        "externalFulfillmentInventory_2024-09-11_BatchInventoryRequest": {
            requests?: components["schemas"]["externalFulfillmentInventory_2024-09-11_BatchInventoryRequestList"];
        };
        /**
         * @description A list of inventory requests.
         * @example [
         *       {
         *         "method": "POST",
         *         "uri": "/inventory/update?locationId=EXSB&skuId=efptestsku1",
         *         "body": {
         *           "quantity": 15,
         *           "clientSequenceNumber": 12345678,
         *           "marketplaceAttributes": {
         *             "marketplaceId": "AXJDDKDFDKDF",
         *             "channelName": "FBA"
         *           }
         *         }
         *       },
         *       {
         *         "method": "POST",
         *         "uri": "/inventory/fetch?locationId=EXSB&skuId=efptestsku2",
         *         "body": {
         *           "marketplaceAttributes": {
         *             "marketplaceId": "AXJDDKDFDKDF",
         *             "channelName": "FBA"
         *           }
         *         }
         *       }
         *     ]
         */
        "externalFulfillmentInventory_2024-09-11_BatchInventoryRequestList": components["schemas"]["externalFulfillmentInventory_2024-09-11_InventoryRequest"][];
        /** @description The response of the `batchInventory` operation. */
        "externalFulfillmentInventory_2024-09-11_BatchInventoryResponse": {
            responses?: components["schemas"]["externalFulfillmentInventory_2024-09-11_BatchInventoryResponseList"];
        };
        /** @description A list of inventory request responses. */
        "externalFulfillmentInventory_2024-09-11_BatchInventoryResponseList": components["schemas"]["externalFulfillmentInventory_2024-09-11_InventoryResponse"][];
        /** @description Error response returned when the request is unsuccessful. */
        "externalFulfillmentInventory_2024-09-11_Error": {
            /**
             * @description An error code that identifies the type of error that occurred.
             * @example InvalidInput
             */
            code: string;
            /**
             * @description Additional details that can help the caller understand or fix the issue.
             * @example Provided input contains more number of batches than max supported.
             */
            details?: string;
            /**
             * @description A message that describes the error condition.
             * @example Invalid input provided. Refer to the API documentation for further details.
             */
            message: string;
        };
        /** @description An object containing a list of error responses returned when a request is unsuccessful. */
        "externalFulfillmentInventory_2024-09-11_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["externalFulfillmentInventory_2024-09-11_Error"][];
        };
        /**
         * @description The HTTP method associated with an individual request within a batch.
         * @example GET
         * @enum {string}
         */
        "externalFulfillmentInventory_2024-09-11_HttpMethod": "GET" | "POST";
        /** @description The HTTP status associated with the response for an individual request within a batch. */
        "externalFulfillmentInventory_2024-09-11_HttpStatusLine": {
            /** @description The HTTP response reason phrase. */
            reasonPhrase?: string;
            /** @description The HTTP response status code. */
            statusCode?: number;
        };
        /** @description An inventory request. */
        "externalFulfillmentInventory_2024-09-11_InventoryRequest": {
            body?: components["schemas"]["externalFulfillmentInventory_2024-09-11_InventoryRequestParams"];
            method: components["schemas"]["externalFulfillmentInventory_2024-09-11_HttpMethod"];
            /**
             * @description The URI associated with the individual APIs from the batch request. The user must provide the resource identifier for the operation they want to use.
             * @example inventory/update?locationId=EXSB&skuId=efptestsku1
             */
            uri: string;
        };
        /**
         * @description The parameters for an individual request.
         * @example {
         *       "quantity": 15,
         *       "clientSequenceNumber": 12345678,
         *       "marketplaceAttributes": {
         *         "channelName": "FBA",
         *         "marketplaceId": "AXJDDKDFDKDF"
         *       }
         *     }
         */
        "externalFulfillmentInventory_2024-09-11_InventoryRequestParams": {
            /**
             * @description The latest sequence number for the inventory update operation. You find this value in the `clientSequenceNumber` property in the response to the `batchInventory` operation.
             * @example 12345678
             */
            clientSequenceNumber?: number;
            marketplaceAttributes?: components["schemas"]["externalFulfillmentInventory_2024-09-11_MarketplaceAttributes"];
            /**
             * @description The absolute inventory quantity.
             * @example 15
             */
            quantity?: number;
        };
        /** @description A response to an individual inventory request. */
        "externalFulfillmentInventory_2024-09-11_InventoryResponse": {
            body: components["schemas"]["externalFulfillmentInventory_2024-09-11_InventoryResponseBody"];
            status: components["schemas"]["externalFulfillmentInventory_2024-09-11_HttpStatusLine"];
        };
        /**
         * @description The response to an inventory request.
         * @example {
         *       "locationId": "43cd8cd4-a944-4fa8-a584-5e3b3efdb046",
         *       "sellableQuantity": 20,
         *       "reservedQuantity": 5,
         *       "clientSequenceNumber": 12345678,
         *       "marketplaceAttributes": {
         *         "marketplaceId": "AXJDDKDFDKDF",
         *         "channelName": "FBA"
         *       },
         *       "skuId": "efptestsku3",
         *       "actionableErrors": []
         *     }
         */
        "externalFulfillmentInventory_2024-09-11_InventoryResponseBody": {
            /** @description Inventory operation errors that require seller action before retrying the inventory request. */
            actionableErrors?: components["schemas"]["externalFulfillmentInventory_2024-09-11_ActionableError"][];
            /**
             * @description Latest sequence number for an inventory update.
             * @example 12345678
             */
            clientSequenceNumber?: number;
            /**
             * @description The location where inventory is updated or retrieved.
             * @example 43cd8cd4-a944-4fa8-a584-5e3b3efdb045
             */
            locationId?: string;
            marketplaceAttributes?: components["schemas"]["externalFulfillmentInventory_2024-09-11_MarketplaceAttributes"];
            /**
             * @description The number of items of the specified SKU created in any marketplace that are reserved for shipment and yet to be fulfilled.
             * @example 2
             */
            reservedQuantity?: number;
            /**
             * @description The number of items of the specified SKU that are available for purchase.
             * @example 5
             */
            sellableQuantity?: number;
            /**
             * @description The SKU ID for which inventory is updated or retrieved
             * @example efptestsku2
             */
            skuId?: string;
        };
        /**
         * @description The channel name and marketplace ID. This is required only when multiple channels have the same location ID.
         * @example {
         *       "channelName": "FBA",
         *       "marketplaceId": "AXJDDKDFDKDF"
         *     }
         */
        "externalFulfillmentInventory_2024-09-11_MarketplaceAttributes": {
            /**
             * @description The name of the fulfillment channel in which to update inventory.
             * @example FBA
             * @enum {string}
             */
            channelName?: "FBA" | "MFN" | "DF";
            /**
             * @description The marketplace ID of the marketplace where you want to update inventory.
             * @example AXJDDKDFDKDF
             */
            marketplaceId?: string;
        };
        /** @description A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
        "externalFulfillmentReturns_2024-09-11_DateTime": string;
        /** @description Error response returned when the request is unsuccessful. */
        "externalFulfillmentReturns_2024-09-11_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /**
             * @description Additional details that can help the caller understand or fix the issue.
             * @example The specified parameter value is invalid.
             */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description An object containing a list of error responses returned when a request is unsuccessful. */
        "externalFulfillmentReturns_2024-09-11_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["externalFulfillmentReturns_2024-09-11_Error"][];
        };
        /** @description Invoice-related information for the return created for Amazon SmartConnect. */
        "externalFulfillmentReturns_2024-09-11_InvoiceInformation": {
            /** @description The unique ID of the invoice that corresponds to the return. */
            id: string;
        };
        /** @description The marketplace and channel name. */
        "externalFulfillmentReturns_2024-09-11_MarketplaceChannel": {
            /** @description The name of the channel within the marketplace. */
            channelName?: string;
            /** @description The name of the marketplace. */
            marketplaceName?: string;
        };
        /** @description Marketplace channel-specific attributes for the return. These attributes are not mandatory and each channel can provide them differently. */
        "externalFulfillmentReturns_2024-09-11_MarketplaceChannelDetails": {
            /** @description The Amazon SmartConnect SKU of the channel. */
            channelSku?: string;
            /** @description The marketplace-specific customer order ID. */
            customerOrderId?: string;
            /**
             * @description The Amazon SmartConnect ID of the exchange order.
             * @example 6cb83006-0597-4bc1-82ab-715b33eb6cf1
             */
            exchangeOrderId?: string;
            marketplaceChannel?: components["schemas"]["externalFulfillmentReturns_2024-09-11_MarketplaceChannel"];
            /** @description The ID of the merchant or seller to whom this return is created in the marketplace. */
            merchantId?: string;
            /** @description The Amazon SmartConnect ID of the location to which this return is created. */
            returnLocationId?: string;
            /** @description The marketplace-specific shipment ID. */
            shipmentId?: string;
        };
        /** @description One-time password (OTP) details of the return item. */
        "externalFulfillmentReturns_2024-09-11_OtpDetails": {
            /** @description One-time password to validate the return delivered to the seller. */
            otp: string;
            /** @description The UNIX timestamp of when the verification code expires. */
            validTill: number;
        };
        /** @description Provides details about the replanned returns. */
        "externalFulfillmentReturns_2024-09-11_ReplanningDetails": {
            /** @description A list of all the previous tracking information for the return. */
            previousTrackingInfo?: components["schemas"]["externalFulfillmentReturns_2024-09-11_TrackingInfo"][];
        };
        /** @description Information about the return item. */
        "externalFulfillmentReturns_2024-09-11_Return": {
            creationDateTime?: components["schemas"]["externalFulfillmentReturns_2024-09-11_DateTime"];
            /** @description The ID of the location that fulfilled the order. */
            fulfillmentLocationId: string;
            /** @description The return item's ID. */
            id: string;
            lastUpdatedDateTime: components["schemas"]["externalFulfillmentReturns_2024-09-11_DateTime"];
            marketplaceChannelDetails: components["schemas"]["externalFulfillmentReturns_2024-09-11_MarketplaceChannelDetails"];
            /** @description The seller's identifier for the SKU. */
            merchantSku?: string;
            /**
             * Format: int32
             * @description The total number of units in the return.
             */
            numberOfUnits?: number;
            otpDetails?: components["schemas"]["externalFulfillmentReturns_2024-09-11_OtpDetails"];
            /**
             * @description The package delivery mode. This indicates whether the return was delivered to the seller with or without a one-time password (OTP).
             * @enum {string}
             */
            packageDeliveryMode?: "WITH_OTP" | "WITHOUT_OTP";
            replanningDetails?: components["schemas"]["externalFulfillmentReturns_2024-09-11_ReplanningDetails"];
            /** @description The SmartConnect identifier for where the return item was dropped for delivery. */
            returnLocationId?: string;
            returnMetadata: components["schemas"]["externalFulfillmentReturns_2024-09-11_ReturnMetadata"];
            returnShippingInfo: components["schemas"]["externalFulfillmentReturns_2024-09-11_ReturnShippingInfo"];
            /**
             * @description The sub-type of return.
             * @enum {string}
             */
            returnSubType?: "NORMAL" | "REPLACEMENT" | "EXCHANGE";
            /**
             * @description The type of return.
             * @enum {string}
             */
            returnType: "CUSTOMER" | "REJECT";
            /**
             * @description The current status of the return.
             * @enum {string}
             */
            status: "CREATED" | "CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER" | "CARRIER_OUT_FOR_PICK_UP_FROM_CUSTOMER" | "CUSTOMER_CANCELLED_PICK_UP" | "CUSTOMER_RESCHEDULED_PICK_UP" | "PICKED_FROM_CUSTOMER" | "IN_TRANSIT" | "OUT_FOR_DELIVERY" | "DELIVERED" | "REPLANNED" | "CUSTOMER_DROPPED_OFF" | "PARTIALLY_PROCESSED" | "PROCESSED" | "REJECTED" | "CANCELLED";
        };
        /** @description Metadata about the return item. */
        "externalFulfillmentReturns_2024-09-11_ReturnMetadata": {
            /** @description The SmartConnect ID of the fulfillment order for which the return was placed. */
            fulfillmentOrderId?: string;
            invoiceInformation?: components["schemas"]["externalFulfillmentReturns_2024-09-11_InvoiceInformation"];
            /** @description The reason for the return. */
            returnReason: string;
            /** @description The RMA ID of the return. */
            rmaId?: string;
        };
        /** @description Information about the shipping of the return packages. */
        "externalFulfillmentReturns_2024-09-11_ReturnShippingInfo": {
            deliveryDateTime?: components["schemas"]["externalFulfillmentReturns_2024-09-11_DateTime"];
            forwardTrackingInfo?: components["schemas"]["externalFulfillmentReturns_2024-09-11_TrackingInfo"];
            pickupDateTime?: components["schemas"]["externalFulfillmentReturns_2024-09-11_DateTime"];
            reverseTrackingInfo?: components["schemas"]["externalFulfillmentReturns_2024-09-11_TrackingInfo"];
        };
        /** @description The response to the `listReturns` operation. */
        "externalFulfillmentReturns_2024-09-11_ReturnsResponse": {
            /** @description A token that you use to retrieve the next page of results. The response includes `nextToken` when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages. */
            nextToken?: string;
            /** @description A list of returns. */
            returns?: components["schemas"]["externalFulfillmentReturns_2024-09-11_Return"][];
        };
        /** @description Information for tracking a return. */
        "externalFulfillmentReturns_2024-09-11_TrackingInfo": {
            /** @description The name of the third party courier service used to ship the return package. */
            carrierName: string;
            /** @description The tracking ID of the return package. */
            trackingId: string;
        };
        /** @description The address. */
        "externalFulfillmentShipments_2024-09-11_Address": {
            /** @description The first line of the address. */
            addressLine1?: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The type of address. */
            addressType?: string;
            /** @description The city where the person, business, or institution is located. */
            city?: string;
            /** @description The email cc addresses of the contact associated with the address. */
            copyEmails?: string[];
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode?: string;
            /** @description The district or state where the person, business, or institution is located. */
            district?: string;
            /** @description The email address of the contact associated with the address. */
            email?: string;
            /** @description The municiplaity where the person, business, or institution is located. */
            municipality?: string;
            /** @description The name of the person, business or institution at that address. */
            name?: string;
            /** @description The phone number of the person, business, or institution located at the address. */
            phoneNumber?: string;
            /** @description The postal code of the address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode: string;
            /** @description The state or region where the person, business, or institution is located. */
            state?: string;
        };
        /** @description An amount of money, including units in the form of currency. */
        "externalFulfillmentShipments_2024-09-11_Amount": {
            /** @description Three digit currency code in ISO 4217 format. */
            currencyCode: string;
            value: components["schemas"]["externalFulfillmentShipments_2024-09-11_Decimal"];
        };
        /** @description A shipment item's cancellation details. */
        "externalFulfillmentShipments_2024-09-11_Cancellation": {
            /** @description The reason for the cancellation of the shipment. */
            cancellationReason?: string;
            /**
             * @description The type of cancellation of the item in the shipment.
             * @example MARKETPLACE_CANCELLED
             * @enum {string}
             */
            cancellationType: "SELLER_REJECTED" | "MARKETPLACE_CANCELLED" | "SYSTEM_CANCELLED";
            /** @description The number of items of this particular item which have been cancelled. */
            cancelledQuantity: number;
            cancelledTimestamp: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
        };
        /** @description A list of cancellations for the given line item.
         *
         *     **Note:** Currently, SmartConnect does not support partial cancellation of a shipment or its line items. This list will contain a single value with all the cancellation details. */
        "externalFulfillmentShipments_2024-09-11_Cancellations": components["schemas"]["externalFulfillmentShipments_2024-09-11_Cancellation"][];
        /** @description A shipment's charge with relevant tax information. */
        "externalFulfillmentShipments_2024-09-11_Charge": {
            baseCharge: components["schemas"]["externalFulfillmentShipments_2024-09-11_ChargeBreakup"];
            /**
             * @description The type of charge.
             * @enum {string}
             */
            chargeType: "PRODUCT" | "SHIPPING" | "GIFT_WRAP" | "TOTAL" | "OTHER";
            /** @description The tax charge details. */
            taxBreakup?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Tax"][];
            totalCharge: components["schemas"]["externalFulfillmentShipments_2024-09-11_ChargeBreakup"];
            totalTax: components["schemas"]["externalFulfillmentShipments_2024-09-11_Tax"];
        };
        /** @description The composition of the charge. */
        "externalFulfillmentShipments_2024-09-11_ChargeBreakup": {
            baseAmount: components["schemas"]["externalFulfillmentShipments_2024-09-11_Amount"];
            discountAmount: components["schemas"]["externalFulfillmentShipments_2024-09-11_Amount"];
            netAmount: components["schemas"]["externalFulfillmentShipments_2024-09-11_Amount"];
        };
        /** @description The charges associated with the shipment. */
        "externalFulfillmentShipments_2024-09-11_Charges": components["schemas"]["externalFulfillmentShipments_2024-09-11_Charge"][];
        /** @description All necessary compliance attributes specific to the line item. */
        "externalFulfillmentShipments_2024-09-11_ComplianceAttributes": {
            countryOfOriginRequirement: components["schemas"]["externalFulfillmentShipments_2024-09-11_RequirementLevel"];
            hazmatLabelsRequirement: components["schemas"]["externalFulfillmentShipments_2024-09-11_RequirementLevel"];
            itemValueRequirement: components["schemas"]["externalFulfillmentShipments_2024-09-11_RequirementLevel"];
            serialNumberRequirement: components["schemas"]["externalFulfillmentShipments_2024-09-11_RequirementLevel"];
        };
        /** @description A two-letter country code, as defined by the ISO-3166 alpha-2 standard. */
        "externalFulfillmentShipments_2024-09-11_CountryCode": string;
        /**
         * @description The tracking details of the package if it is shipped by a third party courier. This attribute should only be provided when the value of `shipBy` is `THIRD_PARTY_CARRIER`.
         * @example {
         *       "carrierName": "ATSPL",
         *       "trackingId": "343284200328"
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_CourierSupportedAttributes": {
            /** @description The name of the courier service used to ship the package */
            carrierName: string;
            /** @description The tracking number of the package. */
            trackingId: string;
        };
        /** @description A custom attribute that is loosely typed, modeled through a key-value pair and its data type. */
        "externalFulfillmentShipments_2024-09-11_CustomAttribute": {
            /** @description The key of the custom attribute. Must be unique. */
            key?: string;
            type?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CustomAttributeType"];
            /** @description The value of the custom attribute. */
            value?: string;
        };
        /**
         * @description The data type of the custom attribute value to aid with parsing during deserialization.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_CustomAttributeType": "STRING" | "BOOLEAN" | "INTEGER" | "DOUBLE" | "JSON_STRING";
        /** @description Marketplace channel-specific attribute value. */
        "externalFulfillmentShipments_2024-09-11_CustomChannelAttribute": ("PRIME" | "FASTTRACK")[];
        /** @description A date and time in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
        "externalFulfillmentShipments_2024-09-11_DateTime": string;
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. */
        "externalFulfillmentShipments_2024-09-11_Decimal": string;
        /** @description A dimension of a package. */
        "externalFulfillmentShipments_2024-09-11_Dimension": {
            /**
             * @description The unit of measurement of the dimension.
             * @enum {string}
             */
            dimensionUnit: "CM" | "M";
            value: components["schemas"]["externalFulfillmentShipments_2024-09-11_Decimal"];
        };
        /** @description A document, described by its file type and data. */
        "externalFulfillmentShipments_2024-09-11_Document": {
            /** @description Base 64 encoded file contents. */
            content?: string;
            /**
             * @description The type of the file.
             * @enum {string}
             */
            format?: "ZPL" | "PDF" | "PNG" | "PLAIN_TEXT";
        };
        /** @description An [S3-Presigned URL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-presigned-url.html) you can use to retrieve file contents. */
        "externalFulfillmentShipments_2024-09-11_DocumentV2": {
            /** @description A presigned URL to fetch the ship label file using an HTTP GET request. To determine file type, use the `contentType` header of the file response. The file retrieved will be in one of the following supported formats:
             *
             *     - **ZPL**: `x.application/zpl`
             *     - **PDF**: `application/pdf`
             *     - **PNG**: `image/png`
             *     - **Plain Text**: `text/plain` */
            url: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "externalFulfillmentShipments_2024-09-11_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description An object containing a list of error responses returned when a request is unsuccessful. */
        "externalFulfillmentShipments_2024-09-11_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["externalFulfillmentShipments_2024-09-11_Error"][];
        };
        /** @description Information about any gift wrapping that is needed for this line item. */
        "externalFulfillmentShipments_2024-09-11_GiftAttributes": {
            giftMessage?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Document"];
            giftMessagePresence: components["schemas"]["externalFulfillmentShipments_2024-09-11_PresenceStatus"];
            /** @description The label to be printed on the wrapped gift. */
            giftWrapLabel?: string;
            giftWrapRequirement: components["schemas"]["externalFulfillmentShipments_2024-09-11_RequirementLevel"];
        };
        /** @description Information about the shipment's invoice. */
        "externalFulfillmentShipments_2024-09-11_InvoiceInfo": {
            creationDateTime: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
            /** @description The unique ID of the invoice that corresponds to the shipment. */
            invoiceId: string;
        };
        /** @description Whether the invoice document is required to be attached to the shipment and its corresponding status. */
        "externalFulfillmentShipments_2024-09-11_InvoiceRequirement": {
            /**
             * @description Whether the invoice document is required to be attached to the shipment.
             * @enum {string}
             */
            requirement?: "REQUIRED" | "NOT_REQUIRED";
            /**
             * @description The status of the of the invoice document that is attached to the shipment.
             * @enum {string}
             */
            status?: "PENDING" | "AVAILABLE" | "NOT_AVAILABLE";
        };
        /** @description The response of the `generateInvoice` operation. */
        "externalFulfillmentShipments_2024-09-11_InvoiceResponse": {
            document: components["schemas"]["externalFulfillmentShipments_2024-09-11_Document"];
        };
        /**
         * @description Information about the line item being confirmed or rejected.
         * @example {
         *       "id": "1",
         *       "quantity": 0
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_LineItem": {
            /** @description The identifier of the line item from the shipment that is being confirmed or rejected by the seller. */
            id: string;
            /** @description The quantity of the line item. */
            quantity?: number;
        };
        /**
         * @description Information about the line item being confirmed or rejected and the reason for the rejection.
         * @example {
         *       "lineItem": {
         *         "id": "1",
         *         "quantity": 0
         *       },
         *       "reason": "OUT_OF_STOCK"
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_LineItemWithReason": {
            lineItem: components["schemas"]["externalFulfillmentShipments_2024-09-11_LineItem"];
            /**
             * @description The reason for the rejection of the line item.
             * @enum {string}
             */
            reason?: "OUT_OF_STOCK" | "CUSTOMER_REQUESTED";
        };
        /** @description The marketplace attributes associated with the location. */
        "externalFulfillmentShipments_2024-09-11_MarketplaceAttributes": {
            /** @description The channel name associated with the location. */
            channelName: string;
            customAttributes?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CustomChannelAttribute"];
            /** @description The marketplace ID associated with the location. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            /** @description The ID of the merchant or seller to whom this order is created. */
            merchantId?: string;
        };
        /** @description A line item from the original shipment that corresponds to this shipment. */
        "externalFulfillmentShipments_2024-09-11_OriginalLineItem": {
            charges: components["schemas"]["externalFulfillmentShipments_2024-09-11_Charges"];
            /** @description The SKU ID for the original shipment. */
            originalSku: string;
            /** @description The SKU ID for this shipment */
            replacingSku: string;
        };
        /** @description The line items from the original shipment that corresponds to this shipment. */
        "externalFulfillmentShipments_2024-09-11_OriginalLineItems": components["schemas"]["externalFulfillmentShipments_2024-09-11_OriginalLineItem"][];
        /** @description A package that is created to ship one or more of a shipment's line items. */
        "externalFulfillmentShipments_2024-09-11_Package": {
            dimensions: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageDimensions"];
            /** @description The optional list of HAZMAT labels applied to the package. */
            hazmatLabels?: string[];
            /** @description An ID that uniquely identifies a package within a shipment. */
            id: string;
            /**
             * @description Whether the package requires standard handling or extra care.
             * @example FRAGILE
             * @enum {string}
             */
            packageHandlingRequirements?: "NORMAL" | "FRAGILE";
            packageLineItems: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageLineItems"];
            /**
             * @description The current status of the package.
             * @enum {string}
             */
            status?: "CREATED" | "PICKUP_SLOT_RETRIEVED" | "INVOICE_GENERATED" | "SHIPLABEL_GENERATED" | "SHIPPED" | "DELIVERED" | "CANCELLED";
            weight: components["schemas"]["externalFulfillmentShipments_2024-09-11_Weight"];
        };
        /**
         * @description The delivery status of the package.
         * @example {
         *       "status": "DELIVERED",
         *       "subStatus": "DELIVERED",
         *       "reason": "Delivered Successfully"
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_PackageDeliveryStatus": {
            /** @description The reason for the sub-status. */
            reason?: string;
            status?: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageStatus"];
            subStatus?: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageSubStatus"];
        };
        /** @description The dimensions of a package. */
        "externalFulfillmentShipments_2024-09-11_PackageDimensions": {
            height: components["schemas"]["externalFulfillmentShipments_2024-09-11_Dimension"];
            length: components["schemas"]["externalFulfillmentShipments_2024-09-11_Dimension"];
            width: components["schemas"]["externalFulfillmentShipments_2024-09-11_Dimension"];
        };
        /** @description A line item in a package. */
        "externalFulfillmentShipments_2024-09-11_PackageLineItem": {
            countryOfOrigin?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CountryCode"];
            itemValue?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Amount"];
            /** @description The line item ID. */
            packageLineItemId: string;
            /** @description The number of pieces of a multi-piece item that are in this package. This is applicable only for items that are shipped in multiple pieces. */
            pieces?: number;
            /** @description The number of items of a particular line item of a shipment that are packed into the package. */
            quantity: number;
            /** @description The list of serial numbers of items in the package, if required to be provided. */
            serialNumbers?: components["schemas"]["externalFulfillmentShipments_2024-09-11_SerialNumber"][];
        };
        /** @description The list of line items in a package. */
        "externalFulfillmentShipments_2024-09-11_PackageLineItems": components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageLineItem"][];
        /**
         * @description The request schema of the `createPackages` operation.
         * @example {
         *       "packages": [
         *         {
         *           "id": "001",
         *           "dimensions": {
         *             "length": {
         *               "value": "10.0",
         *               "dimensionUnit": "CM"
         *             },
         *             "width": {
         *               "value": "10.0",
         *               "dimensionUnit": "CM"
         *             },
         *             "height": {
         *               "value": "10.0",
         *               "dimensionUnit": "CM"
         *             }
         *           },
         *           "weight": {
         *             "value": "200.0",
         *             "weightUnit": "G"
         *           },
         *           "hazmatLabels": [],
         *           "packageLineItems": [
         *             {
         *               "packageLineItemId": "1",
         *               "quantity": 1,
         *               "pieces": 1,
         *               "countryOfOrigin": "IN",
         *               "itemValue": {
         *                 "value": "10",
         *                 "currencyCode": "INR"
         *               },
         *               "serialNumbers": []
         *             },
         *             {
         *               "packageLineItemId": "2",
         *               "quantity": 1,
         *               "serialNumbers": []
         *             }
         *           ],
         *           "status": "CREATED"
         *         }
         *       ]
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_Packages": {
            /** @description A list of packages. */
            packages: components["schemas"]["externalFulfillmentShipments_2024-09-11_Package"][];
        };
        /**
         * @description A shipping label with a label document for a single package. If label generation fails, you can use the `status` and `errorDetails` attributes to determine the cause of failure.
         * @example {
         *       "packageId": "TEST_CASE_200_PACKAGE_ID",
         *       "shipLabelMetadata": {
         *         "carrierName": "ATSPL",
         *         "trackingId": "343284200328",
         *         "pickupWindow": {
         *           "startTime": 163132120,
         *           "endTime": 162132660
         *         },
         *         "timeSlot": {
         *           "startTime": 1612933142,
         *           "endTime": 1612494142,
         *           "handoverMethod": "PICKUP"
         *         }
         *       },
         *       "fileData": {
         *         "url": "string"
         *       },
         *       "status": "FAILURE",
         *       "errorDetails": {
         *         "code": "00001",
         *         "message": "A temporary failure occurred in the SmartConnect product."
         *       }
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_PackageShipLabel": {
            errorDetails?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Error"];
            fileData?: components["schemas"]["externalFulfillmentShipments_2024-09-11_DocumentV2"];
            /** @description The package ID of the package. */
            packageId?: string;
            shipLabelMetadata?: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipLabelMetadata"];
            status?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Status"];
        };
        /** @description A list of label documents for each package specified in the request. In case of partial failures when generating labels, the `isErrored` and `errorDetails` attributes detail the cause of failure. */
        "externalFulfillmentShipments_2024-09-11_PackageShipLabelList": components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageShipLabel"][];
        /**
         * @description The status of a package.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_PackageStatus": "CREATED" | "PICKUP_SLOT_RETRIEVED" | "INVOICE_GENERATED" | "SHIPLABEL_GENERATED" | "SHIPPED" | "DELIVERED";
        /**
         * @description The sub-status of a package.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_PackageSubStatus": "OUT_FOR_DELIVERY" | "DELIVERED" | "NOT_DELIVERED" | "UNDELIVERABLE";
        /** @description Whether the packing slip is required to be attached to the shipment, and its corresponding status. */
        "externalFulfillmentShipments_2024-09-11_PackingSlipRequirement": {
            /**
             * @description Whether the packing slip is required to be attached to the shipment.
             * @enum {string}
             */
            requirement?: "REQUIRED" | "NOT_REQUIRED";
            /**
             * @description The status of the packing slip that is attached to the shipment.
             * @enum {string}
             */
            status?: "GENERATED" | "NOT_GENERATED";
        };
        /** @description An object representing data required for pagination of results. */
        "externalFulfillmentShipments_2024-09-11_Pagination": {
            /** @description A token that you use to retrieve the next page of results. The response includes `nextToken` when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages. */
            nextToken?: string;
        };
        /** @description Party identification details for the shipment, applicable to direct fulfillment shipments. */
        "externalFulfillmentShipments_2024-09-11_PartyIdentificationInfo": {
            address?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Address"];
            /** @description Assigned identification for the party. For example, a warehouse code or vendor code. */
            partyId: string;
            /**
             * @description Assigned identification for the party. For example, a warehouse code or vendor code.
             * @enum {string}
             */
            partyType: "BILL_TO_PARTY" | "SHIP_TO_PARTY" | "SHIP_FROM_PARTY" | "SELLING_PARTY";
            taxInfo?: components["schemas"]["externalFulfillmentShipments_2024-09-11_TaxRegistrationInfo"];
        };
        /** @description All involved party identification and metadata for the vendor, buyer, and seller. Applicable for direct-fulfillment sellers. */
        "externalFulfillmentShipments_2024-09-11_PartyIdentificationInfoList": components["schemas"]["externalFulfillmentShipments_2024-09-11_PartyIdentificationInfo"][];
        /**
         * @description Whether the item is a single piece or multiple pieces.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_PieceType": "SINGLE" | "MULTIPLE";
        /**
         * @description  Whether the element is present or absent.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_PresenceStatus": "ABSENT" | "PRESENT";
        /**
         * @description The priority of the order.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_Priority": "HIGH" | "LOW";
        /** @description Recommendations for a package */
        "externalFulfillmentShipments_2024-09-11_RecommendedPackage": {
            dimensions: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageDimensions"];
            lineItems: components["schemas"]["externalFulfillmentShipments_2024-09-11_RecommendedPackageLineItems"];
            weight: components["schemas"]["externalFulfillmentShipments_2024-09-11_Weight"];
        };
        /** @description A line item to be contained in a recommended package. This attribute is provided only for orders that come with a specific recommendation of line-item distribution within the package recommendations. */
        "externalFulfillmentShipments_2024-09-11_RecommendedPackageLineItem": {
            /**
             * @description An ID for a line item in an order. The line item should be present in the recommended package. This identifier has the same value as the ID of the line item present in the order.
             * @example LI1
             */
            lineItemId: string;
        };
        /** @description A list of line items to be contained in a recommended package. This attribute is only for orders that come with specific recommendations for line-item distribution. */
        "externalFulfillmentShipments_2024-09-11_RecommendedPackageLineItems": components["schemas"]["externalFulfillmentShipments_2024-09-11_RecommendedPackageLineItem"][];
        /** @description Recommendations for the packages in an order. */
        "externalFulfillmentShipments_2024-09-11_RecommendedPackages": components["schemas"]["externalFulfillmentShipments_2024-09-11_RecommendedPackage"][];
        /** @description Details of the original shipment if `shipmentType` is either `REPLACEMENT` or `EXCHANGE`. */
        "externalFulfillmentShipments_2024-09-11_ReplacedShipmentInfo": {
            /**
             * @description The original shipment's ID.
             * @example DNkXsJZJX
             */
            id: string;
            /**
             * @description The original shipment's location ID.
             * @example ABCD
             */
            locationId: string;
            marketplaceAttributes: components["schemas"]["externalFulfillmentShipments_2024-09-11_MarketplaceAttributes"];
            originalLineItems?: components["schemas"]["externalFulfillmentShipments_2024-09-11_OriginalLineItems"];
        };
        /**
         * @description The requirement level for this field.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_RequirementLevel": "REQUIRED" | "DISALLOWED";
        /** @description The serial number of the SKU in this line item. */
        "externalFulfillmentShipments_2024-09-11_SerialNumber": string;
        /**
         * @description Metadata for a ship label document.
         * @example {
         *       "shippingOptionId": "TEST_CASE_200_SHIPPING_OPTION_ID",
         *       "trackingId": "343284200329",
         *       "carrierName": "ATSPL",
         *       "shipBy": "MARKETPLACE",
         *       "pickupWindow": {
         *         "startTime": 1612933142,
         *         "endTime": 1612494142
         *       },
         *       "timeSlot": {
         *         "startTime": 1612933142,
         *         "endTime": 1612494142,
         *         "handoverMethod": "PICKUP"
         *       }
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_ShipLabelMetadata": {
            /** @description The name of the carrier. */
            carrierName: string;
            pickupWindow?: components["schemas"]["externalFulfillmentShipments_2024-09-11_TimeWindow"];
            /** @description The selected slot for the ship label. */
            shippingOptionId?: string;
            timeSlot?: components["schemas"]["externalFulfillmentShipments_2024-09-11_TimeWindow"];
            /** @description The tracking number of the package. */
            trackingId: string;
        };
        /**
         * @description Tracking details for multiple packages.
         * @example {
         *       "packageIds": [
         *         "TEST_CASE_200_PACKAGE_ID"
         *       ],
         *       "courierSupportedAttributes": {
         *         "carrierName": "ATS",
         *         "trackingId": "151958276037"
         *       }
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_ShipLabelsInput": {
            courierSupportedAttributes?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CourierSupportedAttributes"];
            /** @description The subset of package IDs used to generate a label. */
            packageIds: string[];
        };
        /** @description The response to the `generateShipLabels` operation. */
        "externalFulfillmentShipments_2024-09-11_ShipLabelsResponse": {
            packageShipLabelList: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageShipLabelList"];
        };
        /** @description Information about a shipment. */
        "externalFulfillmentShipments_2024-09-11_Shipment": {
            charges: components["schemas"]["externalFulfillmentShipments_2024-09-11_Charges"];
            creationDateTime: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
            earliestPackDateTime?: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
            /** @description The shipment's ID. */
            id: string;
            invoiceInfo?: components["schemas"]["externalFulfillmentShipments_2024-09-11_InvoiceInfo"];
            lastUpdatedDateTime: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
            /** @description The line items in the shipment. */
            lineItems: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipmentLineItem"][];
            /** @description The location identifier of the seller's location in the marketplace channel to which the shipment has been created for fulfillment. */
            locationId: string;
            marketplaceAttributes: components["schemas"]["externalFulfillmentShipments_2024-09-11_MarketplaceAttributes"];
            /** @description The list of packages in the shipment. */
            packages?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Package"][];
            partyInfoList?: components["schemas"]["externalFulfillmentShipments_2024-09-11_PartyIdentificationInfoList"];
            shipmentInfo: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipmentInfo"];
            shipmentRequirements: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipmentRequirements"];
            shippingInfo: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShippingInfo"];
            /**
             * @description The current status of the shipment.
             * @enum {string}
             */
            status: "CREATED" | "ACCEPTED" | "CONFIRMED" | "PACKAGE_CREATED" | "PICKUP_SLOT_RETRIEVED" | "INVOICE_GENERATED" | "SHIPLABEL_GENERATED" | "CANCELLED" | "SHIPPED" | "DELIVERED";
            /**
             * @description The sub status of the shipment.
             * @enum {string}
             */
            subStatus?: "PENDING_SCHEDULE" | "PENDING_PICKUP" | "PENDING_DROP_OFF" | "LABEL_CANCELED" | "PICKED_UP" | "DROPPED_OFF" | "AT_ORIGIN_FC" | "AT_DESTINATION_FC" | "DELIVERED" | "NOT_DELIVERED" | "UNDELIVERABLE" | "LOST" | "OUT_FOR_DELIVERY" | "DAMAGED";
        };
        /**
         * @description Information about the shipment and its line items, used to confirm or reject line items.
         * @example {
         *       "referenceId": "cancellation-reference-identifier1",
         *       "lineItems": [
         *         {
         *           "lineItem": {
         *             "id": "1",
         *             "quantity": 0
         *           },
         *           "reason": "OUT_OF_STOCK"
         *         }
         *       ]
         *     }
         */
        "externalFulfillmentShipments_2024-09-11_ShipmentAcknowledgementRequest": {
            /** @description Details about the line items from the shipment that are being confirmed or rejected by the seller. */
            lineItems: components["schemas"]["externalFulfillmentShipments_2024-09-11_LineItemWithReason"][];
            /** @description A unique identifier for every shipment rejection. */
            referenceId?: string;
        };
        /** @description High-level details of the shipment. */
        "externalFulfillmentShipments_2024-09-11_ShipmentInfo": {
            /** @description The buyer's order ID. */
            buyerOrderId: string;
            /** @description Total number of units in the shipment. */
            numberOfUnits: number;
            /** @description The timestamp of when the order was placed, in UTC */
            orderPlacedTimestamp?: string;
            /** @description A list of order statuses for which the marketplace allows order rejection (seller cancellation). If the order has a status that does not belong to this list, then seller cancellation is not possible. */
            orderStatesEligibleForRejection?: string[];
            originalShipmentInfo?: components["schemas"]["externalFulfillmentShipments_2024-09-11_ReplacedShipmentInfo"];
            priority: components["schemas"]["externalFulfillmentShipments_2024-09-11_Priority"];
            /**
             * @description The source of the order operation.
             * @enum {string}
             */
            processingSource?: "EXTERNAL_PLATFORM" | "INTERNAL_PLATFORM";
            /**
             * @description The type of shipment.
             * @example NEW
             * @enum {string}
             */
            shipmentType: "NEW" | "EXCHANGE" | "REPLACEMENT";
        };
        /** @description Information about a line item in a shipment. */
        "externalFulfillmentShipments_2024-09-11_ShipmentLineItem": {
            cancellations?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Cancellations"];
            charges: components["schemas"]["externalFulfillmentShipments_2024-09-11_Charges"];
            complianceAttributes: components["schemas"]["externalFulfillmentShipments_2024-09-11_ComplianceAttributes"];
            countryOfOrigin?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CountryCode"];
            /** @description A list of custom passthrough attributes. For details on these attributes, reach out to your respective program teams at Amazon. */
            customAttributes?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CustomAttribute"][];
            giftAttributes?: components["schemas"]["externalFulfillmentShipments_2024-09-11_GiftAttributes"];
            /** @description A list of HAZMAT label identifiers that must be applied to the packages for this line item. */
            hazmatLabels?: string[];
            /** @description The HSN code of SKU in this line item. */
            hsnCode?: string;
            itemValue?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Amount"];
            merchantSku: components["schemas"]["externalFulfillmentShipments_2024-09-11_SKU"];
            /** @description The number of items of the SKU in this line item. */
            numberOfUnits: number;
            pieceType?: components["schemas"]["externalFulfillmentShipments_2024-09-11_PieceType"];
            recommendedCountryOfOrigin?: components["schemas"]["externalFulfillmentShipments_2024-09-11_CountryCode"];
            /** @description The three digit currency code of the currency recommended by the marketplace, in ISO 4217 format. */
            recommendedCurrencyCode?: string;
            /** @description The serial numbers for each item in this line item. */
            serialNumbers?: components["schemas"]["externalFulfillmentShipments_2024-09-11_SerialNumber"][];
            /** @description An identifier for a shipment's line item. This identifier is guaranteed to be unique within the scope of its containing shipment. */
            shipmentLineItemId: string;
        };
        /** @description Whether specific capabilities are enabled or required for the shipment. */
        "externalFulfillmentShipments_2024-09-11_ShipmentRequirements": {
            invoice: components["schemas"]["externalFulfillmentShipments_2024-09-11_InvoiceRequirement"];
            pSlip: components["schemas"]["externalFulfillmentShipments_2024-09-11_PackingSlipRequirement"];
        };
        /** @description The response of the `getShipments` operation. */
        "externalFulfillmentShipments_2024-09-11_ShipmentsResponse": {
            pagination?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Pagination"];
            /** @description A list of shipments. */
            shipments?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Shipment"][];
        };
        /** @description Shipping information for the packages in a shipment. */
        "externalFulfillmentShipments_2024-09-11_ShippingInfo": {
            expectedShippingDateTimeInUTC: components["schemas"]["externalFulfillmentShipments_2024-09-11_DateTime"];
            recommendedPackages?: components["schemas"]["externalFulfillmentShipments_2024-09-11_RecommendedPackages"];
            /** @description The ship method recommended by the Amazon Fulfillment Network for the packages in this shipment. */
            recommendedShipMethod?: string;
            /**
             * @description The type of shipping that the seller uses to deliver a customer order.
             * @enum {string}
             */
            shippingType?: "MARKETPLACE" | "SELF";
            shipToAddress?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Address"];
        };
        /** @description Shipping options for a single package. */
        "externalFulfillmentShipments_2024-09-11_ShippingOptions": {
            /** @description The carrier name for the offering. */
            carrierName?: string;
            pickupWindow?: components["schemas"]["externalFulfillmentShipments_2024-09-11_TimeWindow"];
            /**
             * @description The shipper type.
             * @enum {string}
             */
            shipBy: "MARKETPLACE" | "SELLER" | "THIRD_PARTY_CARRIER" | "OTHER";
            /** @description An identifier for the shipping option. */
            shippingOptionId: string;
            timeSlot?: components["schemas"]["externalFulfillmentShipments_2024-09-11_TimeWindow"];
        };
        /** @description The response to the `retrieveShippingOptions` operation. The response contains shipping options on a per-package basis from which the seller has to select one shipping option while they retrieve the shipping label. If the particular marketplace channel does not support scheduled shipping options, then this response will be empty. */
        "externalFulfillmentShipments_2024-09-11_ShippingOptionsResponse": {
            recommendedShippingOption?: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShippingOptions"];
            /** @description A list of shipping options. */
            shippingOptions?: components["schemas"]["externalFulfillmentShipments_2024-09-11_ShippingOptions"][];
        };
        /** @description The seller SKU of a product (catalog item). A unique number assigned by the seller when listing an item. */
        "externalFulfillmentShipments_2024-09-11_SKU": string;
        /**
         * @description The outcome of the operation.
         * @enum {string}
         */
        "externalFulfillmentShipments_2024-09-11_Status": "SUCCESS" | "FAILURE";
        /** @description Information about taxes. */
        "externalFulfillmentShipments_2024-09-11_Tax": {
            charge: components["schemas"]["externalFulfillmentShipments_2024-09-11_ChargeBreakup"];
            rate?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Decimal"];
            /**
             * @description The type of tax.
             * @enum {string}
             */
            type?: "VAT" | "CST" | "IGST" | "SGST" | "CGST" | "UTGST" | "CESS" | "OTHER" | "TOTAL";
        };
        /** @description Tax registration details of the entity. Applicable to direct fulfillment shipments. */
        "externalFulfillmentShipments_2024-09-11_TaxRegistrationInfo": {
            address?: components["schemas"]["externalFulfillmentShipments_2024-09-11_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            messages?: string;
            /** @description The tax registration number for the party. For example, their VAT ID. */
            number?: string;
            /**
             * @description Tax registration type for the entity
             * @enum {string}
             */
            type?: "VAT" | "GST";
        };
        /** @description Time duration used to specify the interval of an event, such as pick up and delivery. */
        "externalFulfillmentShipments_2024-09-11_TimeWindow": {
            /**
             * Format: int64
             * @description The end time of the window.
             */
            endTime: number;
            /**
             * @description Whether the seller picks up from Amazon Logistics or drops off to Amazon Logistics.
             * @enum {string}
             */
            handoverMethod?: "PICKUP" | "DROPOFF";
            /**
             * Format: int64
             * @description The start time of the window.
             */
            startTime: number;
        };
        /** @description The weight of a package. */
        "externalFulfillmentShipments_2024-09-11_Weight": {
            value: components["schemas"]["externalFulfillmentShipments_2024-09-11_Decimal"];
            /**
             * @description The unit of measurement of the weight.
             * @enum {string}
             */
            weightUnit: "G" | "KG";
        };
        /** @description Error response returned when the request is unsuccessful. */
        fbaInbound_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional information that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message?: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        fbaInbound_ErrorList: components["schemas"]["fbaInbound_Error"][];
        /** @description The response schema for the getItemEligibilityPreview operation. */
        fbaInbound_GetItemEligibilityPreviewResponse: {
            errors?: components["schemas"]["fbaInbound_ErrorList"];
            payload?: components["schemas"]["fbaInbound_ItemEligibilityPreview"];
        };
        /** @description The response object which contains the ASIN, marketplaceId if required, eligibility program, the eligibility status (boolean), and a list of ineligibility reason codes. */
        fbaInbound_ItemEligibilityPreview: {
            /** @description The ASIN for which eligibility was determined. */
            asin: string;
            /** @description Potential Ineligibility Reason Codes. */
            ineligibilityReasonList?: ("FBA_INB_0004" | "FBA_INB_0006" | "FBA_INB_0007" | "FBA_INB_0008" | "FBA_INB_0009" | "FBA_INB_0010" | "FBA_INB_0011" | "FBA_INB_0012" | "FBA_INB_0013" | "FBA_INB_0014" | "FBA_INB_0015" | "FBA_INB_0016" | "FBA_INB_0017" | "FBA_INB_0018" | "FBA_INB_0019" | "FBA_INB_0034" | "FBA_INB_0035" | "FBA_INB_0036" | "FBA_INB_0037" | "FBA_INB_0038" | "FBA_INB_0050" | "FBA_INB_0051" | "FBA_INB_0053" | "FBA_INB_0055" | "FBA_INB_0056" | "FBA_INB_0059" | "FBA_INB_0065" | "FBA_INB_0066" | "FBA_INB_0067" | "FBA_INB_0068" | "FBA_INB_0095" | "FBA_INB_0097" | "FBA_INB_0098" | "FBA_INB_0099" | "FBA_INB_0100" | "FBA_INB_0103" | "FBA_INB_0104" | "FBA_INB_0197" | "FBA_INB_0342" | "UNKNOWN_INB_ERROR_CODE")[];
            /** @description Indicates if the item is eligible for the program. */
            isEligibleForProgram: boolean;
            /** @description The marketplace for which eligibility was determined. */
            marketplaceId?: string;
            /**
             * @description The program for which eligibility was determined.
             * @enum {string}
             */
            program: "INBOUND" | "COMMINGLING";
        };
        /** @description The object with the list of Inventory to be added */
        fbaInventory_AddInventoryRequest: {
            inventoryItems?: components["schemas"]["fbaInventory_InventoryItems"];
        };
        /** @description The response schema for the AddInventory operation. */
        fbaInventory_AddInventoryResponse: {
            errors?: components["schemas"]["fbaInventory_ErrorList"];
        };
        /** @description An item to be created in the inventory. */
        fbaInventory_CreateInventoryItemRequest: {
            /** @description The marketplaceId. */
            marketplaceId: string;
            /** @description The name of the item. */
            productName: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
        };
        /** @description The response schema for the CreateInventoryItem operation. */
        fbaInventory_CreateInventoryItemResponse: {
            errors?: components["schemas"]["fbaInventory_ErrorList"];
        };
        /** @description The response schema for the DeleteInventoryItem operation. */
        fbaInventory_DeleteInventoryItemResponse: {
            errors?: components["schemas"]["fbaInventory_ErrorList"];
        };
        /** @description An error response returned when the request is unsuccessful. */
        fbaInventory_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional information that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message?: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        fbaInventory_ErrorList: components["schemas"]["fbaInventory_Error"][];
        /** @description The Response schema. */
        fbaInventory_GetInventorySummariesResponse: {
            errors?: components["schemas"]["fbaInventory_ErrorList"];
            pagination?: components["schemas"]["fbaInventory_Pagination"];
            payload?: components["schemas"]["fbaInventory_GetInventorySummariesResult"];
        };
        /** @description The payload schema for the getInventorySummaries operation. */
        fbaInventory_GetInventorySummariesResult: {
            granularity: components["schemas"]["fbaInventory_Granularity"];
            inventorySummaries: components["schemas"]["fbaInventory_InventorySummaries"];
        };
        /** @description Describes a granularity at which inventory data can be aggregated. For example, if you use Marketplace granularity, the fulfillable quantity will reflect inventory that could be fulfilled in the given marketplace. */
        fbaInventory_Granularity: {
            /** @description The granularity ID for the specified granularity type. When granularityType is Marketplace, specify the marketplaceId. */
            granularityId?: string;
            /** @description The granularity type for the inventory aggregation level. */
            granularityType?: string;
        };
        /** @description Summarized inventory details. This object will not appear if the details parameter in the request is false. */
        fbaInventory_InventoryDetails: {
            /** @description The item quantity that can be picked, packed, and shipped. */
            fulfillableQuantity?: number;
            /** @description The number of units that have not yet been received at an Amazon fulfillment center for processing, but are part of an inbound shipment with some units that have already been received and processed. */
            inboundReceivingQuantity?: number;
            /** @description The number of units in an inbound shipment that you have notified Amazon about and have provided a tracking number. */
            inboundShippedQuantity?: number;
            /** @description The number of units in an inbound shipment for which you have notified Amazon. */
            inboundWorkingQuantity?: number;
            researchingQuantity?: components["schemas"]["fbaInventory_ResearchingQuantity"];
            reservedQuantity?: components["schemas"]["fbaInventory_ReservedQuantity"];
            unfulfillableQuantity?: components["schemas"]["fbaInventory_UnfulfillableQuantity"];
        };
        /** @description An item in the list of inventory to be added. */
        fbaInventory_InventoryItem: {
            /** @description The marketplaceId. */
            marketplaceId: string;
            /** @description The quantity of item to add. */
            quantity: number;
            /** @description The seller SKU of the item. */
            sellerSku: string;
        };
        /** @description List of Inventory to be added */
        fbaInventory_InventoryItems: components["schemas"]["fbaInventory_InventoryItem"][];
        /** @description A list of inventory summaries. */
        fbaInventory_InventorySummaries: components["schemas"]["fbaInventory_InventorySummary"][];
        /** @description Inventory summary for a specific item. */
        fbaInventory_InventorySummary: {
            /** @description The Amazon Standard Identification Number (ASIN) of an item. */
            asin?: string;
            /** @description The condition of the item as described by the seller (for example, New Item). */
            condition?: string;
            /** @description Amazon's fulfillment network SKU identifier. */
            fnSku?: string;
            inventoryDetails?: components["schemas"]["fbaInventory_InventoryDetails"];
            /**
             * Format: date-time
             * @description The date and time that any quantity was last updated.
             */
            lastUpdatedTime?: string;
            /** @description The localized language product title of the item within the specific marketplace. */
            productName?: string;
            /** @description The seller SKU of the item. */
            sellerSku?: string;
            /** @description A list of seller-enrolled stores that apply to this seller SKU. */
            stores?: string[];
            /** @description The total number of units in an inbound shipment or in Amazon fulfillment centers. */
            totalQuantity?: number;
        };
        /** @description The process of returning the results to a request in batches of a defined size called pages. This is done to exercise some control over result size and overall throughput. It's a form of traffic management. */
        fbaInventory_Pagination: {
            /** @description A generated string used to retrieve the next page of the result. If nextToken is returned, pass the value of nextToken to the next request. If nextToken is not returned, there are no more items to return. */
            nextToken?: string;
        };
        /** @description The number of misplaced or warehouse damaged units that are actively being confirmed at our fulfillment centers. */
        fbaInventory_ResearchingQuantity: {
            /** @description A list of quantity details for items currently being researched. */
            researchingQuantityBreakdown?: components["schemas"]["fbaInventory_ResearchingQuantityEntry"][];
            /** @description The total number of units currently being researched in Amazon's fulfillment network. */
            totalResearchingQuantity?: number;
        };
        /** @description The misplaced or warehouse damaged inventory that is actively being confirmed at our fulfillment centers. */
        fbaInventory_ResearchingQuantityEntry: {
            /**
             * @description The duration of the research.
             * @enum {string}
             */
            name: "researchingQuantityInShortTerm" | "researchingQuantityInMidTerm" | "researchingQuantityInLongTerm";
            /** @description The number of units. */
            quantity: number;
        };
        /** @description The quantity of reserved inventory. */
        fbaInventory_ReservedQuantity: {
            /** @description The number of units that have been sidelined at the fulfillment center for additional processing. */
            fcProcessingQuantity?: number;
            /** @description The number of units reserved for customer orders. */
            pendingCustomerOrderQuantity?: number;
            /** @description The number of units being transferred from one fulfillment center to another. */
            pendingTransshipmentQuantity?: number;
            /** @description The total number of units in Amazon's fulfillment network that are currently being picked, packed, and shipped; or are sidelined for measurement, sampling, or other internal processes. */
            totalReservedQuantity?: number;
        };
        /** @description The quantity of unfulfillable inventory. */
        fbaInventory_UnfulfillableQuantity: {
            /** @description The number of units in carrier damaged disposition. */
            carrierDamagedQuantity?: number;
            /** @description The number of units in customer damaged disposition. */
            customerDamagedQuantity?: number;
            /** @description The number of units in defective disposition. */
            defectiveQuantity?: number;
            /** @description The number of units in distributor damaged disposition. */
            distributorDamagedQuantity?: number;
            /** @description The number of units in expired disposition. */
            expiredQuantity?: number;
            /** @description The total number of units in Amazon's fulfillment network in unsellable condition. */
            totalUnfulfillableQuantity?: number;
            /** @description The number of units in warehouse damaged disposition. */
            warehouseDamagedQuantity?: number;
        };
        /** @description Information required to upload a feed document's contents. */
        "feeds_2021-06-30_CreateFeedDocumentResponse": {
            /** @description The identifier of the feed document. */
            feedDocumentId: string;
            /** @description The presigned URL for uploading the feed contents. This URL expires after 5 minutes. */
            url: string;
        };
        /** @description Specifies the content type for the createFeedDocument operation. */
        "feeds_2021-06-30_CreateFeedDocumentSpecification": {
            /** @description The content type of the feed. */
            contentType: string;
        };
        /** @description Response schema. */
        "feeds_2021-06-30_CreateFeedResponse": {
            /** @description The identifier for the feed. This identifier is unique only in combination with a seller ID. */
            feedId: string;
        };
        /** @description Information required to create the feed. */
        "feeds_2021-06-30_CreateFeedSpecification": {
            feedOptions?: components["schemas"]["feeds_2021-06-30_FeedOptions"];
            /** @description The feed type. */
            feedType: string;
            /** @description The document identifier returned by the createFeedDocument operation. Upload the feed document contents before calling the createFeed operation. */
            inputFeedDocumentId: string;
            /** @description A list of identifiers for marketplaces that you want the feed to be applied to. */
            marketplaceIds: string[];
        };
        /** @description An error response returned when the request is unsuccessful. */
        "feeds_2021-06-30_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "feeds_2021-06-30_ErrorList": {
            /** @description An error response returned when the request is unsuccessful. */
            errors: components["schemas"]["feeds_2021-06-30_Error"][];
        };
        /** @description Detailed information about the feed. */
        "feeds_2021-06-30_Feed": {
            /**
             * Format: date-time
             * @description The date and time when the feed was created, in ISO 8601 date time format.
             */
            createdTime: string;
            /** @description The identifier for the feed. This identifier is unique only in combination with a seller ID. */
            feedId: string;
            /** @description The feed type. */
            feedType: string;
            /** @description A list of identifiers for the marketplaces that the feed is applied to. */
            marketplaceIds?: string[];
            /**
             * Format: date-time
             * @description The date and time when feed processing completed, in ISO 8601 date time format.
             */
            processingEndTime?: string;
            /**
             * Format: date-time
             * @description The date and time when feed processing started, in ISO 8601 date time format.
             */
            processingStartTime?: string;
            /**
             * @description The processing status of the feed.
             * @enum {string}
             */
            processingStatus: "CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE";
            /** @description The identifier for the feed document. This identifier is unique only in combination with a seller ID. */
            resultFeedDocumentId?: string;
        };
        /** @description Information required for the feed document. */
        "feeds_2021-06-30_FeedDocument": {
            /**
             * @description If the feed document contents have been compressed, the compression algorithm used is returned in this property and you must decompress the feed when you download. Otherwise, you can download the feed directly. Refer to [Step 7. Download the feed processing report](doc:feeds-api-v2021-06-30-use-case-guide#step-7-download-the-feed-processing-report) in the use case guide, where sample code is provided.
             * @enum {string}
             */
            compressionAlgorithm?: "GZIP";
            /** @description The identifier for the feed document. This identifier is unique only in combination with a seller ID. */
            feedDocumentId: string;
            /** @description A presigned URL for the feed document. If `compressionAlgorithm` is not returned, you can download the feed directly from this URL. This URL expires after 5 minutes. */
            url: string;
        };
        /** @description A list of feeds. */
        "feeds_2021-06-30_FeedList": components["schemas"]["feeds_2021-06-30_Feed"][];
        /** @description Additional options to control the feed. These vary by feed type. */
        "feeds_2021-06-30_FeedOptions": {
            [key: string]: string;
        };
        /** @description Response schema. */
        "feeds_2021-06-30_GetFeedsResponse": {
            feeds: components["schemas"]["feeds_2021-06-30_FeedList"];
            /** @description Returned when the number of results exceeds pageSize. To get the next page of results, call the getFeeds operation with this token as the only parameter. */
            nextToken?: string;
        };
        /**
         * @description Additional information related to Amazon Pay.
         * @example {
         *       "storeName": "Store 1",
         *       "orderType": "Order Type",
         *       "channel": "MFN"
         *     }
         */
        "finances_2024-06-19_AmazonPayContext": {
            /** @description Channel details of related transaction. */
            channel?: string;
            /** @description Order type of the transaction. */
            orderType?: string;
            /** @description Store name related to transaction. */
            storeName?: string;
        };
        /** @description Fields with a schema type of BigDecimal are a signed decimal number (for example CurrencyAmount). */
        "finances_2024-06-19_BigDecimal": number;
        /** @description Breakdown provides details regarding the money movement under the financial transaction. Breakdowns get categorized further into breakdown types, breakdown amounts, and further breakdowns into a hierarchical structure. */
        "finances_2024-06-19_Breakdown": {
            breakdownAmount?: components["schemas"]["finances_2024-06-19_Currency"];
            /** @description A list of breakdowns that detail how the total amount is calculated for the transaction. */
            breakdowns?: components["schemas"]["finances_2024-06-19_Breakdown"][];
            /** @description The type of charge. */
            breakdownType?: string;
        };
        /**
         * @description A list of breakdowns that detail how the total amount is calculated for the transaction.
         * @example [
         *       {
         *         "breakdownType": "Sales",
         *         "breakdownAmount": {
         *           "currencyAmount": 10,
         *           "currencyCode": "USD"
         *         },
         *         "breakdowns": [
         *           {
         *             "breakdownType": "Product Charges",
         *             "breakdownAmount": {
         *               "currencyAmount": 10,
         *               "currencyCode": "USD"
         *             },
         *             "breakdowns": []
         *           }
         *         ]
         *       }
         *     ]
         */
        "finances_2024-06-19_Breakdowns": components["schemas"]["finances_2024-06-19_Breakdown"][];
        /**
         * @description Information about the line of business associated with a transaction.
         * @example {
         *       "storeName": "AMAZON_HAUL"
         *     }
         */
        "finances_2024-06-19_BusinessContext": {
            /**
             * @description The store name associated with the transaction.
             * @enum {string}
             */
            storeName?: "AMAZON_HAUL";
        };
        /** @description Additional Information about the item. */
        "finances_2024-06-19_Context": {
            contextType: string;
        } & components["schemas"]["finances_2024-06-19_AmazonPayContext"] & components["schemas"]["finances_2024-06-19_ProductContext"] & components["schemas"]["finances_2024-06-19_PaymentsContext"] & components["schemas"]["finances_2024-06-19_DeferredContext"] & components["schemas"]["finances_2024-06-19_BusinessContext"] & components["schemas"]["finances_2024-06-19_TimeRangeContext"];
        /** @description List of additional Information about the item. */
        "finances_2024-06-19_Contexts": components["schemas"]["finances_2024-06-19_Context"][];
        /** @description A currency type and amount. */
        "finances_2024-06-19_Currency": {
            currencyAmount?: components["schemas"]["finances_2024-06-19_BigDecimal"];
            /** @description The three-digit currency code in ISO 4217 format. */
            currencyCode?: string;
        };
        /**
         * Format: date-time
         * @description Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
         */
        "finances_2024-06-19_Date": string;
        /**
         * @description Additional information related to Deferred transactions.
         * @example {
         *       "deferralReason": "B2B",
         *       "maturityDate": "2024-07-14T00:00:00Z"
         *     }
         */
        "finances_2024-06-19_DeferredContext": {
            /** @description The deferral policy applied to the transaction.
             *
             *     **Examples:** `B2B` (invoiced orders), `DD7` (delivery date policy) */
            deferralReason?: string;
            maturityDate?: components["schemas"]["finances_2024-06-19_Date"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "finances_2024-06-19_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "finances_2024-06-19_ErrorList": {
            /** @description Error response returned when the request is unsuccessful. */
            errors: components["schemas"]["finances_2024-06-19_Error"][];
        };
        /** @description Additional information about the items in Transaction. */
        "finances_2024-06-19_Item": {
            /** @description A list of breakdowns that detail how the total amount is calculated for the transaction. */
            breakdowns?: components["schemas"]["finances_2024-06-19_Breakdown"][];
            contexts?: components["schemas"]["finances_2024-06-19_Contexts"];
            /** @description Description of items in the transaction */
            description?: string;
            relatedIdentifiers?: components["schemas"]["finances_2024-06-19_ItemRelatedIdentifiers"];
            totalAmount?: components["schemas"]["finances_2024-06-19_Currency"];
        };
        /**
         * @description Related business identifiers of the item.
         * @example {
         *       "itemRelatedIdentifierName": "ORDER_ADJUSTMENT_ITEM_ID",
         *       "itemRelatedIdentifierValue": "OAI-123456789"
         *     }
         */
        "finances_2024-06-19_ItemRelatedIdentifier": {
            /**
             * @description Enumerated set of related item identifier names for the item.
             * @enum {string}
             */
            itemRelatedIdentifierName?: "ORDER_ADJUSTMENT_ITEM_ID" | "COUPON_ID" | "REMOVAL_SHIPMENT_ITEM_ID" | "TRANSACTION_ID";
            /** @description Corresponding value of ItemRelatedIdentifierName */
            itemRelatedIdentifierValue?: string;
        };
        /** @description Related Business identifiers of the item in Transaction. */
        "finances_2024-06-19_ItemRelatedIdentifiers": components["schemas"]["finances_2024-06-19_ItemRelatedIdentifier"][];
        /** @description List of items in the transaction */
        "finances_2024-06-19_Items": components["schemas"]["finances_2024-06-19_Item"][];
        /** @description The response schema for the `listTransactions` operation. */
        "finances_2024-06-19_ListTransactionsResponse": {
            payload?: components["schemas"]["finances_2024-06-19_TransactionsPayload"];
        };
        /**
         * @description Information about the marketplace where the transaction occurred.
         * @example {
         *       "marketplaceId": "ATVPDKIKX0DER",
         *       "marketplaceName": "Amazon.com"
         *     }
         */
        "finances_2024-06-19_MarketplaceDetails": {
            /** @description The identifier of the marketplace where the transaction occurred. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId?: string;
            /** @description The name of the marketplace where the transaction occurred.
             *
             *     Example: 'Amazon.com','Amazon.in' */
            marketplaceName?: string;
        };
        /**
         * @description Additional information related to Payments related transactions.
         * @example {
         *       "paymentType": "Debit Card",
         *       "paymentMethod": "BANK",
         *       "paymentReference": "XXXXX123",
         *       "paymentDate": "2020-07-14T03:35:13.214Z"
         *     }
         */
        "finances_2024-06-19_PaymentsContext": {
            paymentDate?: components["schemas"]["finances_2024-06-19_Date"];
            /** @description Method of payment made. */
            paymentMethod?: string;
            /** @description Reference number of payment made. */
            paymentReference?: string;
            /** @description Type of payment made. */
            paymentType?: string;
        };
        /**
         * @description Additional information related to the product.
         * @example {
         *       "asin": "B07FGXZQZ1",
         *       "sku": "sku-12",
         *       "quantityShipped": 1,
         *       "fulfillmentNetwork": "MFN"
         *     }
         */
        "finances_2024-06-19_ProductContext": {
            /** @description Amazon Standard Identification Number (ASIN) of the item. */
            asin?: string;
            /** @description Fulfillment network of the item. */
            fulfillmentNetwork?: string;
            /**
             * Format: int32
             * @description Quantity of the item shipped.
             */
            quantityShipped?: number;
            /** @description Stock keeping unit (SKU) of the item. */
            sku?: string;
        };
        /** @description Related business identifier of the transaction. */
        "finances_2024-06-19_RelatedIdentifier": {
            /**
             * @description Enumerated set of related business identifier names.
             * @enum {string}
             */
            relatedIdentifierName?: "ORDER_ID" | "SHIPMENT_ID" | "FINANCIAL_EVENT_GROUP_ID" | "REFUND_ID" | "INVOICE_ID" | "DISBURSEMENT_ID" | "TRANSFER_ID" | "DEFERRED_TRANSACTION_ID" | "RELEASE_TRANSACTION_ID" | "SETTLEMENT_ID";
            /** @description Corresponding value of RelatedIdentifierName */
            relatedIdentifierValue?: string;
        };
        /** @description Related business identifiers of the transaction. */
        "finances_2024-06-19_RelatedIdentifiers": components["schemas"]["finances_2024-06-19_RelatedIdentifier"][];
        /** @description Metadata describing the seller. */
        "finances_2024-06-19_SellingPartnerMetadata": {
            /** @description Account type of transaction. */
            accountType?: string;
            /** @description The identifier of the marketplace where the transaction occurred. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId?: string;
            /** @description Unique seller identifier. */
            sellingPartnerId?: string;
        };
        /**
         * @description Additional information related to time range for transaction.
         * @example {
         *       "startTime": "2020-07-14T03:35:13.214Z",
         *       "endTime": "2020-07-14T03:35:13.214Z"
         *     }
         */
        "finances_2024-06-19_TimeRangeContext": {
            endTime?: components["schemas"]["finances_2024-06-19_Date"];
            startTime?: components["schemas"]["finances_2024-06-19_Date"];
        };
        /**
         * @description Contains all information related to the transaction.
         * @example {
         *       "sellingPartnerMetadata": {
         *         "sellingPartnerId": "XXXXXXXXXXXXXX",
         *         "accountType": "PAYABLE",
         *         "marketplaceId": "ATVPDKIKX0DER"
         *       },
         *       "relatedIdentifiers": [
         *         {
         *           "relatedIdentifierName": "ORDER_ID",
         *           "relatedIdentifierValue": "8129762527551"
         *         }
         *       ],
         *       "transactionType": "Shipment",
         *       "transactionId": "b1qD0oAliFkLiqRyGbmeT0DoS2Z2kHzi7TZ92z-vARI",
         *       "transactionStatus": "Released",
         *       "description": "Order Payment",
         *       "postedDate": "2020-07-14T03:35:13.214Z",
         *       "totalAmount": {
         *         "currencyAmount": 10,
         *         "currencyCode": "USD"
         *       },
         *       "marketplaceDetails": {
         *         "marketplaceId": "ATVPDKIKX0DER",
         *         "marketplaceName": "Amazon.com"
         *       },
         *       "items": [
         *         {
         *           "description": "Item title",
         *           "totalAmount": {
         *             "currencyAmount": 10,
         *             "currencyCode": "USD"
         *           },
         *           "relatedIdentifiers": [
         *             {
         *               "itemRelatedIdentifierName": "ORDER_ADJUSTMENT_ITEM_ID",
         *               "itemRelatedIdentifierValue": "81297625-121-27551"
         *             }
         *           ],
         *           "breakdowns": [
         *             {
         *               "breakdownType": "Product Charges",
         *               "breakdownAmount": {
         *                 "currencyAmount": 10,
         *                 "currencyCode": "USD"
         *               },
         *               "breakdowns": [
         *                 {
         *                   "breakdownType": "Principle",
         *                   "breakdownAmount": {
         *                     "currencyAmount": 10,
         *                     "currencyCode": "USD"
         *                   },
         *                   "breakdowns": []
         *                 }
         *               ]
         *             }
         *           ],
         *           "contexts": [
         *             {
         *               "contextType": "ProductContext",
         *               "asin": "B07FGXZQZ1",
         *               "sku": "sku-12",
         *               "quantityShipped": 1,
         *               "fulfillmentNetwork": "MFN"
         *             }
         *           ]
         *         }
         *       ],
         *       "breakdowns": {
         *         "breakdowns": [
         *           {
         *             "breakdownType": "Sales",
         *             "breakdownAmount": {
         *               "currencyAmount": 10,
         *               "currencyCode": "USD"
         *             },
         *             "breakdowns": [
         *               {
         *                 "breakdownType": "Product Charges",
         *                 "breakdownAmount": {
         *                   "currencyAmount": 10,
         *                   "currencyCode": "USD"
         *                 },
         *                 "breakdowns": []
         *               }
         *             ]
         *           }
         *         ]
         *       },
         *       "contexts": [
         *         {
         *           "contextType": "AmazonPayContext",
         *           "storeName": "Store 1",
         *           "orderType": "Order Type",
         *           "channel": "MFN"
         *         }
         *       ]
         *     }
         */
        "finances_2024-06-19_Transaction": {
            /** @description A list of breakdowns that detail how the total amount is calculated for the transaction. */
            breakdowns?: components["schemas"]["finances_2024-06-19_Breakdown"][];
            contexts?: components["schemas"]["finances_2024-06-19_Contexts"];
            /** @description Describes the reasons for the transaction.
             *
             *     Example: 'Order Payment','Refund Order' */
            description?: string;
            items?: components["schemas"]["finances_2024-06-19_Items"];
            marketplaceDetails?: components["schemas"]["finances_2024-06-19_MarketplaceDetails"];
            postedDate?: components["schemas"]["finances_2024-06-19_Date"];
            relatedIdentifiers?: components["schemas"]["finances_2024-06-19_RelatedIdentifiers"];
            sellingPartnerMetadata?: components["schemas"]["finances_2024-06-19_SellingPartnerMetadata"];
            totalAmount?: components["schemas"]["finances_2024-06-19_Currency"];
            /** @description The unique identifier for the transaction. */
            transactionId?: string;
            /** @description The status of the transaction.
             *
             *     **Possible values:**
             *
             *     * `DEFERRED`: the transaction is currently deferred.
             *     * `RELEASED`: the transaction is currently released.
             *     * `DEFERRED_RELEASED`: the transaction was deferred in the past, but is now released. The status of a deferred transaction is updated to `DEFERRED_RELEASED` when the transaction is released. */
            transactionStatus?: string;
            /** @description The type of transaction.
             *
             *     Possible values:
             *
             *     * Shipment */
            transactionType?: string;
        };
        /** @description Contains transactions within a given time period. */
        "finances_2024-06-19_Transactions": components["schemas"]["finances_2024-06-19_Transaction"][];
        /** @description The payload for the `listTransactions` operation. */
        "finances_2024-06-19_TransactionsPayload": {
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            nextToken?: string;
            transactions?: components["schemas"]["finances_2024-06-19_Transactions"];
        };
        /** @description An event related to an Adhoc Disbursement. */
        financesV0_AdhocDisbursementEvent: {
            PostedDate?: components["schemas"]["financesV0_Date"];
            TransactionAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The identifier for the transaction. */
            TransactionId?: string;
            /** @description Indicates the type of transaction.
             *
             *     Example: "Disbursed to Amazon Gift Card balance" */
            TransactionType?: string;
        };
        /** @description A list of `AdhocDisbursement` events. */
        financesV0_AdhocDisbursementEventList: components["schemas"]["financesV0_AdhocDisbursementEvent"][];
        /** @description An adjustment to the seller's account. */
        financesV0_AdjustmentEvent: {
            AdjustmentAmount?: components["schemas"]["financesV0_Currency"];
            AdjustmentItemList?: components["schemas"]["financesV0_AdjustmentItemList"];
            /** @description The type of adjustment.
             *
             *     Possible values:
             *
             *     * FBAInventoryReimbursement - An FBA inventory reimbursement to a seller's account. This occurs if a seller's inventory is damaged.
             *
             *     * ReserveEvent - A reserve event that is generated at the time of a settlement period closing. This occurs when some money from a seller's account is held back.
             *
             *     * PostageBilling - The amount paid by a seller for shipping labels.
             *
             *     * PostageRefund - The reimbursement of shipping labels purchased for orders that were canceled or refunded.
             *
             *     * LostOrDamagedReimbursement - An Amazon Easy Ship reimbursement to a seller's account for a package that we lost or damaged.
             *
             *     * CanceledButPickedUpReimbursement - An Amazon Easy Ship reimbursement to a seller's account. This occurs when a package is picked up and the order is subsequently canceled. This value is used only in the India marketplace.
             *
             *     * ReimbursementClawback - An Amazon Easy Ship reimbursement clawback from a seller's account. This occurs when a prior reimbursement is reversed. This value is used only in the India marketplace.
             *
             *     * SellerRewards - An award credited to a seller's account for their participation in an offer in the Seller Rewards program. Applies only to the India marketplace. */
            AdjustmentType?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The name of the store where the event occurred. */
            StoreName?: string;
        };
        /** @description A list of adjustment event information for the seller's account. */
        financesV0_AdjustmentEventList: components["schemas"]["financesV0_AdjustmentEvent"][];
        /** @description An item in an adjustment to the seller's account. */
        financesV0_AdjustmentItem: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            /** @description A unique identifier assigned to products stored in and fulfilled from a fulfillment center. */
            FnSKU?: string;
            PerUnitAmount?: components["schemas"]["financesV0_Currency"];
            /** @description A short description of the item. */
            ProductDescription?: string;
            /** @description Represents the number of units in the seller's inventory when the AdustmentType is FBAInventoryReimbursement. */
            Quantity?: string;
            /** @description The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API. */
            SellerSKU?: string;
            TotalAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The transaction number that is related to the adjustment. */
            TransactionNumber?: string;
        };
        /** @description A list of information about items in an adjustment to the seller's account. */
        financesV0_AdjustmentItemList: components["schemas"]["financesV0_AdjustmentItem"][];
        /** @description An expense related to an affordability promotion. */
        financesV0_AffordabilityExpenseEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            BaseExpense?: components["schemas"]["financesV0_Currency"];
            /** @description An encrypted, Amazon-defined marketplace identifier. */
            MarketplaceId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            TaxTypeCGST: components["schemas"]["financesV0_Currency"];
            TaxTypeIGST: components["schemas"]["financesV0_Currency"];
            TaxTypeSGST: components["schemas"]["financesV0_Currency"];
            TotalExpense?: components["schemas"]["financesV0_Currency"];
            /** @description Indicates the type of transaction.
             *
             *     Possible values:
             *
             *     * Charge - For an affordability promotion expense.
             *
             *     * Refund - For an affordability promotion expense reversal. */
            TransactionType?: string;
        };
        /** @description A list of expense information related to an affordability promotion. */
        financesV0_AffordabilityExpenseEventList: components["schemas"]["financesV0_AffordabilityExpenseEvent"][];
        /** @description Fields with a schema type of BigDecimal are a signed decimal number (for example CurrencyAmount). */
        financesV0_BigDecimal: number;
        /** @description An event related to a capacity reservation billing charge. */
        financesV0_CapacityReservationBillingEvent: {
            /** @description A short description of the capacity reservation billing event. */
            Description?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            TransactionAmount?: components["schemas"]["financesV0_Currency"];
            /** @description Indicates the type of transaction. For example, FBA Inventory Fee */
            TransactionType?: string;
        };
        /** @description A list of `CapacityReservationBillingEvent` events. */
        financesV0_CapacityReservationBillingEventList: components["schemas"]["financesV0_CapacityReservationBillingEvent"][];
        /** @description A charge on the seller's account.
         *
         *     Possible values:
         *
         *     * Principal - The selling price of the order item, equal to the selling price of the item multiplied by the quantity ordered.
         *
         *     * Tax - The tax collected by the seller on the Principal.
         *
         *     * MarketplaceFacilitatorTax-Principal - The tax withheld on the Principal.
         *
         *     * MarketplaceFacilitatorTax-Shipping - The tax withheld on the ShippingCharge.
         *
         *     * MarketplaceFacilitatorTax-Giftwrap - The tax withheld on the Giftwrap charge.
         *
         *     * MarketplaceFacilitatorTax-Other - The tax withheld on other miscellaneous charges.
         *
         *     * Discount - The promotional discount for an order item.
         *
         *     * TaxDiscount - The tax amount deducted for promotional rebates.
         *
         *     * CODItemCharge - The COD charge for an order item.
         *
         *     * CODItemTaxCharge - The tax collected by the seller on a CODItemCharge.
         *
         *     * CODOrderCharge - The COD charge for an order.
         *
         *     * CODOrderTaxCharge - The tax collected by the seller on a CODOrderCharge.
         *
         *     * CODShippingCharge - Shipping charges for a COD order.
         *
         *     * CODShippingTaxCharge - The tax collected by the seller on a CODShippingCharge.
         *
         *     * ShippingCharge - The shipping charge.
         *
         *     * ShippingTax - The tax collected by the seller on a ShippingCharge.
         *
         *     * Goodwill - The amount given to a buyer as a gesture of goodwill or to compensate for pain and suffering in the buying experience.
         *
         *     * Giftwrap - The gift wrap charge.
         *
         *     * GiftwrapTax - The tax collected by the seller on a Giftwrap charge.
         *
         *     * RestockingFee - The charge applied to the buyer when returning a product in certain categories.
         *
         *     * ReturnShipping - The amount given to the buyer to compensate for shipping the item back in the event we are at fault.
         *
         *     * PointsFee - The value of Amazon Points deducted from the refund if the buyer does not have enough Amazon Points to cover the deduction.
         *
         *     * GenericDeduction - A generic bad debt deduction.
         *
         *     * FreeReplacementReturnShipping - The compensation for return shipping when a buyer receives the wrong item, requests a free replacement, and returns the incorrect item.
         *
         *     * PaymentMethodFee - The fee collected for certain payment methods in certain marketplaces.
         *
         *     * ExportCharge - The export duty that is charged when an item is shipped to an international destination as part of the Amazon Global program.
         *
         *     * SAFE-TReimbursement - The SAFE-T claim amount for the item.
         *
         *     * TCS-CGST - Tax Collected at Source (TCS) for Central Goods and Services Tax (CGST).
         *
         *     * TCS-SGST - Tax Collected at Source for State Goods and Services Tax (SGST).
         *
         *     * TCS-IGST - Tax Collected at Source for Integrated Goods and Services Tax (IGST).
         *
         *     * TCS-UTGST - Tax Collected at Source for Union Territories Goods and Services Tax (UTGST). */
        financesV0_ChargeComponent: {
            ChargeAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of charge. */
            ChargeType?: string;
        };
        /** @description A list of charge information on the seller's account. */
        financesV0_ChargeComponentList: components["schemas"]["financesV0_ChargeComponent"][];
        /** @description A payment instrument. */
        financesV0_ChargeInstrument: {
            Amount?: components["schemas"]["financesV0_Currency"];
            /** @description A short description of the charge instrument. */
            Description?: string;
            /** @description The account tail (trailing digits) of the charge instrument. */
            Tail?: string;
        };
        /** @description A list of payment instruments. */
        financesV0_ChargeInstrumentList: components["schemas"]["financesV0_ChargeInstrument"][];
        /** @description An event related to charge refund. */
        financesV0_ChargeRefundEvent: {
            ChargeRefundTransactions?: components["schemas"]["financesV0_ChargeRefundTransactions"];
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The reason given for a charge refund.
             *
             *     Example: `SubscriptionFeeCorrection` */
            ReasonCode?: string;
            /** @description A description of the Reason Code.
             *
             *     Example: `SubscriptionFeeCorrection` */
            ReasonCodeDescription?: string;
        };
        /** @description A list of charge refund events. */
        financesV0_ChargeRefundEventList: components["schemas"]["financesV0_ChargeRefundEvent"][];
        /** @description The charge refund transaction. */
        financesV0_ChargeRefundTransaction: {
            ChargeAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of charge. */
            ChargeType?: string;
        };
        /** @description A list of `ChargeRefund` transactions */
        financesV0_ChargeRefundTransactions: components["schemas"]["financesV0_ChargeRefundTransaction"][];
        /** @description An event related to coupon payments. */
        financesV0_CouponPaymentEvent: {
            ChargeComponent?: components["schemas"]["financesV0_ChargeComponent"];
            /**
             * Format: int64
             * @description The number of coupon clips or redemptions.
             */
            ClipOrRedemptionCount?: number;
            /** @description A coupon identifier. */
            CouponId?: string;
            FeeComponent?: components["schemas"]["financesV0_FeeComponent"];
            /** @description A payment event identifier. */
            PaymentEventId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The description provided by the seller when they created the coupon. */
            SellerCouponDescription?: string;
            TotalAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of coupon payment event information. */
        financesV0_CouponPaymentEventList: components["schemas"]["financesV0_CouponPaymentEvent"][];
        /** @description A currency type and amount. */
        financesV0_Currency: {
            CurrencyAmount?: components["schemas"]["financesV0_BigDecimal"];
            /** @description The three-digit currency code in ISO 4217 format. */
            CurrencyCode?: string;
        };
        /**
         * Format: date-time
         * @description Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
         */
        financesV0_Date: string;
        /** @description A debt payment or debt adjustment. */
        financesV0_DebtRecoveryEvent: {
            ChargeInstrumentList?: components["schemas"]["financesV0_ChargeInstrumentList"];
            DebtRecoveryItemList?: components["schemas"]["financesV0_DebtRecoveryItemList"];
            /** @description The debt recovery type.
             *
             *     Possible values:
             *
             *     * DebtPayment
             *
             *     * DebtPaymentFailure
             *
             *     * DebtAdjustment */
            DebtRecoveryType?: string;
            OverPaymentCredit?: components["schemas"]["financesV0_Currency"];
            RecoveryAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of debt recovery event information. */
        financesV0_DebtRecoveryEventList: components["schemas"]["financesV0_DebtRecoveryEvent"][];
        /** @description An item of a debt payment or debt adjustment. */
        financesV0_DebtRecoveryItem: {
            GroupBeginDate?: components["schemas"]["financesV0_Date"];
            GroupEndDate?: components["schemas"]["financesV0_Date"];
            OriginalAmount?: components["schemas"]["financesV0_Currency"];
            RecoveryAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of debt recovery item information. */
        financesV0_DebtRecoveryItemList: components["schemas"]["financesV0_DebtRecoveryItem"][];
        /** @description A payment made directly to a seller. */
        financesV0_DirectPayment: {
            DirectPaymentAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of payment.
             *
             *     Possible values:
             *
             *     * StoredValueCardRevenue - The amount that is deducted from the seller's account because the seller received money through a stored value card.
             *
             *     * StoredValueCardRefund - The amount that Amazon returns to the seller if the order that is bought using a stored value card is refunded.
             *
             *     * PrivateLabelCreditCardRevenue - The amount that is deducted from the seller's account because the seller received money through a private label credit card offered by Amazon.
             *
             *     * PrivateLabelCreditCardRefund - The amount that Amazon returns to the seller if the order that is bought using a private label credit card offered by Amazon is refunded.
             *
             *     * CollectOnDeliveryRevenue - The COD amount that the seller collected directly from the buyer.
             *
             *     * CollectOnDeliveryRefund - The amount that Amazon refunds to the buyer if an order paid for by COD is refunded. */
            DirectPaymentType?: string;
        };
        /** @description A list of direct payment information. */
        financesV0_DirectPaymentList: components["schemas"]["financesV0_DirectPayment"][];
        /** @description Error response returned when the request is unsuccessful. */
        financesV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        financesV0_ErrorList: components["schemas"]["financesV0_Error"][];
        /** @description Failed ad hoc disbursement event list. */
        financesV0_FailedAdhocDisbursementEvent: {
            /** @description The disbursement identifier. */
            DisbursementId?: string;
            /** @description The type of fund transfer.
             *
             *     Example "Refund" */
            FundsTransfersType?: string;
            /** @description The type of payment for disbursement.
             *
             *     Example `CREDIT_CARD` */
            PaymentDisbursementType?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The status of the failed `AdhocDisbursement`.
             *
             *     Example `HARD_DECLINED` */
            Status?: string;
            TransferAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The transfer identifier. */
            TransferId?: string;
        };
        /** @description A list of `FailedAdhocDisbursementEvent`s. */
        financesV0_FailedAdhocDisbursementEventList: components["schemas"]["financesV0_FailedAdhocDisbursementEvent"][];
        /** @description A payment event for Fulfillment by Amazon (FBA) inventory liquidation. This event is used only in the US marketplace. */
        financesV0_FBALiquidationEvent: {
            LiquidationFeeAmount?: components["schemas"]["financesV0_Currency"];
            LiquidationProceedsAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The identifier for the original removal order. */
            OriginalRemovalOrderId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
        };
        /** @description A list of FBA inventory liquidation payment events. */
        financesV0_FBALiquidationEventList: components["schemas"]["financesV0_FBALiquidationEvent"][];
        /** @description A fee associated with the event. */
        financesV0_FeeComponent: {
            FeeAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of fee. For more information about Selling on Amazon fees, see [Selling on Amazon Fee Schedule](https://sellercentral.amazon.com/gp/help/200336920) on Seller Central. For more information about Fulfillment by Amazon fees, see [FBA features, services and fees](https://sellercentral.amazon.com/gp/help/201074400) on Seller Central. */
            FeeType?: string;
        };
        /** @description A list of fee component information. */
        financesV0_FeeComponentList: components["schemas"]["financesV0_FeeComponent"][];
        /** @description Information related to a financial event group. */
        financesV0_FinancialEventGroup: {
            /** @description The account tail of the payment instrument. */
            AccountTail?: string;
            BeginningBalance?: components["schemas"]["financesV0_Currency"];
            ConvertedTotal?: components["schemas"]["financesV0_Currency"];
            FinancialEventGroupEnd?: components["schemas"]["financesV0_Date"];
            /** @description A unique identifier for the financial event group. */
            FinancialEventGroupId?: string;
            FinancialEventGroupStart?: components["schemas"]["financesV0_Date"];
            FundTransferDate?: components["schemas"]["financesV0_Date"];
            /** @description The status of the fund transfer. */
            FundTransferStatus?: string;
            OriginalTotal?: components["schemas"]["financesV0_Currency"];
            /** @description The processing status of the financial event group indicates whether the balance of the financial event group is settled.
             *
             *     Possible values:
             *
             *     * Open
             *
             *     * Closed */
            ProcessingStatus?: string;
            /** @description The trace identifier used by sellers to look up transactions externally. */
            TraceId?: string;
        };
        /** @description A list of financial event group information. */
        financesV0_FinancialEventGroupList: components["schemas"]["financesV0_FinancialEventGroup"][];
        /** @description Contains all information related to a financial event. */
        financesV0_FinancialEvents: {
            AdhocDisbursementEventList?: components["schemas"]["financesV0_AdhocDisbursementEventList"];
            AdjustmentEventList?: components["schemas"]["financesV0_AdjustmentEventList"];
            AffordabilityExpenseEventList?: components["schemas"]["financesV0_AffordabilityExpenseEventList"];
            AffordabilityExpenseReversalEventList?: components["schemas"]["financesV0_AffordabilityExpenseEventList"];
            CapacityReservationBillingEventList?: components["schemas"]["financesV0_CapacityReservationBillingEventList"];
            ChargebackEventList?: components["schemas"]["financesV0_ShipmentEventList"];
            ChargeRefundEventList?: components["schemas"]["financesV0_ChargeRefundEventList"];
            CouponPaymentEventList?: components["schemas"]["financesV0_CouponPaymentEventList"];
            DebtRecoveryEventList?: components["schemas"]["financesV0_DebtRecoveryEventList"];
            FailedAdhocDisbursementEventList?: components["schemas"]["financesV0_FailedAdhocDisbursementEventList"];
            FBALiquidationEventList?: components["schemas"]["financesV0_FBALiquidationEventList"];
            GuaranteeClaimEventList?: components["schemas"]["financesV0_ShipmentEventList"];
            ImagingServicesFeeEventList?: components["schemas"]["financesV0_ImagingServicesFeeEventList"];
            LoanServicingEventList?: components["schemas"]["financesV0_LoanServicingEventList"];
            NetworkComminglingTransactionEventList?: components["schemas"]["financesV0_NetworkComminglingTransactionEventList"];
            PayWithAmazonEventList?: components["schemas"]["financesV0_PayWithAmazonEventList"];
            ProductAdsPaymentEventList?: components["schemas"]["financesV0_ProductAdsPaymentEventList"];
            RefundEventList?: components["schemas"]["financesV0_ShipmentEventList"];
            RemovalShipmentAdjustmentEventList?: components["schemas"]["financesV0_RemovalShipmentAdjustmentEventList"];
            RemovalShipmentEventList?: components["schemas"]["financesV0_RemovalShipmentEventList"];
            RentalTransactionEventList?: components["schemas"]["financesV0_RentalTransactionEventList"];
            RetrochargeEventList?: components["schemas"]["financesV0_RetrochargeEventList"];
            SAFETReimbursementEventList?: components["schemas"]["financesV0_SAFETReimbursementEventList"];
            SellerDealPaymentEventList?: components["schemas"]["financesV0_SellerDealPaymentEventList"];
            SellerReviewEnrollmentPaymentEventList?: components["schemas"]["financesV0_SellerReviewEnrollmentPaymentEventList"];
            ServiceFeeEventList?: components["schemas"]["financesV0_ServiceFeeEventList"];
            ServiceProviderCreditEventList?: components["schemas"]["financesV0_SolutionProviderCreditEventList"];
            ShipmentEventList?: components["schemas"]["financesV0_ShipmentEventList"];
            ShipmentSettleEventList?: components["schemas"]["financesV0_ShipmentSettleEventList"];
            TaxWithholdingEventList?: components["schemas"]["financesV0_TaxWithholdingEventList"];
            TDSReimbursementEventList?: components["schemas"]["financesV0_TDSReimbursementEventList"];
            TrialShipmentEventList?: components["schemas"]["financesV0_TrialShipmentEventList"];
            ValueAddedServiceChargeEventList?: components["schemas"]["financesV0_ValueAddedServiceChargeEventList"];
        };
        /** @description A fee event related to Amazon Imaging services. */
        financesV0_ImagingServicesFeeEvent: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item for which the imaging service was requested. */
            ASIN?: string;
            FeeList?: components["schemas"]["financesV0_FeeComponentList"];
            /** @description The identifier for the imaging services request. */
            ImagingRequestBillingItemID?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
        };
        /** @description A list of fee events related to Amazon Imaging services. */
        financesV0_ImagingServicesFeeEventList: components["schemas"]["financesV0_ImagingServicesFeeEvent"][];
        /** @description The payload for the listFinancialEventGroups operation. */
        financesV0_ListFinancialEventGroupsPayload: {
            FinancialEventGroupList?: components["schemas"]["financesV0_FinancialEventGroupList"];
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
        };
        /** @description The response schema for the listFinancialEventGroups operation. */
        financesV0_ListFinancialEventGroupsResponse: {
            errors?: components["schemas"]["financesV0_ErrorList"];
            payload?: components["schemas"]["financesV0_ListFinancialEventGroupsPayload"];
        };
        /** @description The payload for the listFinancialEvents operation. */
        financesV0_ListFinancialEventsPayload: {
            FinancialEvents?: components["schemas"]["financesV0_FinancialEvents"];
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
        };
        /** @description The response schema for the listFinancialEvents operation. */
        financesV0_ListFinancialEventsResponse: {
            errors?: components["schemas"]["financesV0_ErrorList"];
            payload?: components["schemas"]["financesV0_ListFinancialEventsPayload"];
        };
        /** @description A loan advance, loan payment, or loan refund. */
        financesV0_LoanServicingEvent: {
            LoanAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of event.
             *
             *     Possible values:
             *
             *     * LoanAdvance
             *
             *     * LoanPayment
             *
             *     * LoanRefund */
            SourceBusinessEventType?: string;
        };
        /** @description A list of loan servicing events. */
        financesV0_LoanServicingEventList: components["schemas"]["financesV0_LoanServicingEvent"][];
        /** @description A network commingling transaction event. */
        financesV0_NetworkComminglingTransactionEvent: {
            /** @description The Amazon Standard Identification Number (ASIN) of the swapped item. */
            ASIN?: string;
            /** @description The marketplace in which the event took place. */
            MarketplaceId?: string;
            /** @description The identifier for the network item swap. */
            NetCoTransactionID?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The reason for the network item swap. */
            SwapReason?: string;
            TaxAmount?: components["schemas"]["financesV0_Currency"];
            TaxExclusiveAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of network item swap.
             *
             *     Possible values:
             *
             *     * NetCo - A Fulfillment by Amazon inventory pooling transaction. Available only in the India marketplace.
             *
             *     * ComminglingVAT - A commingling VAT transaction. Available only in the UK, Spain, France, Germany, and Italy marketplaces. */
            TransactionType?: string;
        };
        /** @description A list of network commingling transaction events. */
        financesV0_NetworkComminglingTransactionEventList: components["schemas"]["financesV0_NetworkComminglingTransactionEvent"][];
        /** @description An event related to the seller's Pay with Amazon account. */
        financesV0_PayWithAmazonEvent: {
            /** @description A short description of this payment event. */
            AmountDescription?: string;
            /** @description The type of business object. */
            BusinessObjectType?: string;
            Charge?: components["schemas"]["financesV0_ChargeComponent"];
            FeeList?: components["schemas"]["financesV0_FeeComponentList"];
            /** @description The fulfillment channel.
             *
             *     Possible values:
             *
             *     * AFN - Amazon Fulfillment Network (Fulfillment by Amazon)
             *
             *     * MFN - Merchant Fulfillment Network (self-fulfilled) */
            FulfillmentChannel?: string;
            /** @description The type of payment.
             *
             *     Possible values:
             *
             *     * Sales */
            PaymentAmountType?: string;
            /** @description The sales channel for the transaction. */
            SalesChannel?: string;
            /** @description An order identifier that is specified by the seller. */
            SellerOrderId?: string;
            /** @description The store name where the event occurred. */
            StoreName?: string;
            TransactionPostedDate?: components["schemas"]["financesV0_Date"];
        };
        /** @description A list of events related to the seller's Pay with Amazon account. */
        financesV0_PayWithAmazonEventList: components["schemas"]["financesV0_PayWithAmazonEvent"][];
        /** @description A Sponsored Products payment event. */
        financesV0_ProductAdsPaymentEvent: {
            baseValue?: components["schemas"]["financesV0_Currency"];
            /** @description Identifier for the invoice that the transaction appears in. */
            invoiceId?: string;
            postedDate?: components["schemas"]["financesV0_Date"];
            taxValue?: components["schemas"]["financesV0_Currency"];
            /** @description Indicates if the transaction is for a charge or a refund.
             *
             *     Possible values:
             *
             *     * charge - Charge
             *
             *     * refund - Refund */
            transactionType?: string;
            transactionValue?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of sponsored products payment events. */
        financesV0_ProductAdsPaymentEventList: components["schemas"]["financesV0_ProductAdsPaymentEvent"][];
        /** @description A promotion applied to an item. */
        financesV0_Promotion: {
            PromotionAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The seller-specified identifier for the promotion. */
            PromotionId?: string;
            /** @description The type of promotion. */
            PromotionType?: string;
        };
        /** @description A list of promotions. */
        financesV0_PromotionList: components["schemas"]["financesV0_Promotion"][];
        /** @description A financial adjustment event for FBA liquidated inventory. A positive value indicates money owed to Amazon by the buyer (for example, when the charge was incorrectly calculated as less than it should be). A negative value indicates a full or partial refund owed to the buyer (for example, when the buyer receives damaged items or fewer items than ordered). */
        financesV0_RemovalShipmentAdjustmentEvent: {
            /** @description The unique identifier for the adjustment event. */
            AdjustmentEventId?: string;
            /** @description The merchant removal orderId. */
            MerchantOrderId?: string;
            /** @description The orderId for shipping inventory. */
            OrderId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description A comma-delimited list of Removal shipmentItemAdjustment details for FBA inventory. */
            RemovalShipmentItemAdjustmentList?: components["schemas"]["financesV0_RemovalShipmentItemAdjustment"][];
            /** @description The type of removal order.
             *
             *     Possible values:
             *
             *     * WHOLESALE_LIQUIDATION. */
            TransactionType?: string;
        };
        /** @description A comma-delimited list of Removal shipmentAdjustment details for FBA inventory. */
        financesV0_RemovalShipmentAdjustmentEventList: components["schemas"]["financesV0_RemovalShipmentAdjustmentEvent"][];
        /** @description A removal shipment event for a removal order. */
        financesV0_RemovalShipmentEvent: {
            /** @description The merchant removal orderId. */
            MerchantOrderId?: string;
            /** @description The identifier for the removal shipment order. */
            OrderId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            RemovalShipmentItemList?: components["schemas"]["financesV0_RemovalShipmentItemList"];
            /** @description The name of the store where the event occurred. */
            StoreName?: string;
            /** @description The type of removal order.
             *
             *     Possible values:
             *
             *     * WHOLESALE_LIQUIDATION */
            TransactionType?: string;
        };
        /** @description A list of removal shipment event information. */
        financesV0_RemovalShipmentEventList: components["schemas"]["financesV0_RemovalShipmentEvent"][];
        /** @description Item-level information for a removal shipment. */
        financesV0_RemovalShipmentItem: {
            FeeAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The Amazon fulfillment network SKU for the item. */
            FulfillmentNetworkSKU?: string;
            /**
             * Format: int32
             * @description The quantity of the item.
             */
            Quantity?: number;
            /** @description An identifier for an item in a removal shipment. */
            RemovalShipmentItemId?: string;
            Revenue?: components["schemas"]["financesV0_Currency"];
            TaxAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The tax collection model applied to the item.
             *
             *     Possible values:
             *
             *     * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.
             *
             *     * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon. */
            TaxCollectionModel?: string;
            TaxWithheld?: components["schemas"]["financesV0_Currency"];
        };
        /** @description Item-level information for a removal shipment item adjustment. */
        financesV0_RemovalShipmentItemAdjustment: {
            /**
             * Format: int32
             * @description Adjusted quantity of removal shipmentItemAdjustment items.
             */
            AdjustedQuantity?: number;
            /** @description The Amazon fulfillment network SKU for the item. */
            FulfillmentNetworkSKU?: string;
            /** @description An identifier for an item in a removal shipment. */
            RemovalShipmentItemId?: string;
            RevenueAdjustment?: components["schemas"]["financesV0_Currency"];
            TaxAmountAdjustment?: components["schemas"]["financesV0_Currency"];
            /** @description The tax collection model applied to the item.
             *
             *     Possible values:
             *
             *     * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.
             *
             *     * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon. */
            TaxCollectionModel?: string;
            TaxWithheldAdjustment?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of information about removal shipment items. */
        financesV0_RemovalShipmentItemList: components["schemas"]["financesV0_RemovalShipmentItem"][];
        /** @description An event related to a rental transaction. */
        financesV0_RentalTransactionEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            /**
             * Format: int32
             * @description The number of days that the buyer extended an already rented item. This value is only returned for RentalCustomerPayment-Extension and RentalCustomerRefund-Extension events.
             */
            ExtensionLength?: number;
            /** @description The name of the marketplace. */
            MarketplaceName?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            RentalChargeList?: components["schemas"]["financesV0_ChargeComponentList"];
            /** @description The type of rental event.
             *
             *     Possible values:
             *
             *     * RentalCustomerPayment-Buyout - Transaction type that represents when the customer wants to buy out a rented item.
             *
             *     * RentalCustomerPayment-Extension - Transaction type that represents when the customer wants to extend the rental period.
             *
             *     * RentalCustomerRefund-Buyout - Transaction type that represents when the customer requests a refund for the buyout of the rented item.
             *
             *     * RentalCustomerRefund-Extension - Transaction type that represents when the customer requests a refund over the extension on the rented item.
             *
             *     * RentalHandlingFee - Transaction type that represents the fee that Amazon charges sellers who rent through Amazon.
             *
             *     * RentalChargeFailureReimbursement - Transaction type that represents when Amazon sends money to the seller to compensate for a failed charge.
             *
             *     * RentalLostItemReimbursement - Transaction type that represents when Amazon sends money to the seller to compensate for a lost item. */
            RentalEventType?: string;
            RentalFeeList?: components["schemas"]["financesV0_FeeComponentList"];
            RentalInitialValue?: components["schemas"]["financesV0_Currency"];
            RentalReimbursement?: components["schemas"]["financesV0_Currency"];
            RentalTaxWithheldList?: components["schemas"]["financesV0_TaxWithheldComponentList"];
        };
        /** @description A list of rental transaction event information. */
        financesV0_RentalTransactionEventList: components["schemas"]["financesV0_RentalTransactionEvent"][];
        /** @description A retrocharge or retrocharge reversal. */
        financesV0_RetrochargeEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            BaseTax?: components["schemas"]["financesV0_Currency"];
            /** @description The name of the marketplace where the retrocharge event occurred. */
            MarketplaceName?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The type of event.
             *
             *     Possible values:
             *
             *     * Retrocharge
             *
             *     * RetrochargeReversal */
            RetrochargeEventType?: string;
            RetrochargeTaxWithheldList?: components["schemas"]["financesV0_TaxWithheldComponentList"];
            ShippingTax?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of information about Retrocharge or RetrochargeReversal events. */
        financesV0_RetrochargeEventList: components["schemas"]["financesV0_RetrochargeEvent"][];
        /** @description A SAFE-T claim reimbursement on the seller's account. */
        financesV0_SAFETReimbursementEvent: {
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description Indicates why the seller was reimbursed. */
            ReasonCode?: string;
            ReimbursedAmount?: components["schemas"]["financesV0_Currency"];
            /** @description A SAFE-T claim identifier. */
            SAFETClaimId?: string;
            SAFETReimbursementItemList?: components["schemas"]["financesV0_SAFETReimbursementItemList"];
        };
        /** @description A list of SAFETReimbursementEvents. */
        financesV0_SAFETReimbursementEventList: components["schemas"]["financesV0_SAFETReimbursementEvent"][];
        /** @description An item from a SAFE-T claim reimbursement. */
        financesV0_SAFETReimbursementItem: {
            itemChargeList?: components["schemas"]["financesV0_ChargeComponentList"];
            /** @description The description of the item as shown on the product detail page on the retail website. */
            productDescription?: string;
            /** @description The number of units of the item being reimbursed. */
            quantity?: string;
        };
        /** @description A list of SAFETReimbursementItems. */
        financesV0_SAFETReimbursementItemList: components["schemas"]["financesV0_SAFETReimbursementItem"][];
        /** @description An event linked to the payment of a fee related to the specified deal. */
        financesV0_SellerDealPaymentEvent: {
            /** @description The internal description of the deal. */
            dealDescription?: string;
            /** @description The unique identifier of the deal. */
            dealId?: string;
            /** @description The type of event: SellerDealComplete. */
            eventType?: string;
            feeAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The type of fee: RunLightningDealFee. */
            feeType?: string;
            postedDate?: components["schemas"]["financesV0_Date"];
            taxAmount?: components["schemas"]["financesV0_Currency"];
            totalAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of payment events for deal-related fees. */
        financesV0_SellerDealPaymentEventList: components["schemas"]["financesV0_SellerDealPaymentEvent"][];
        /** @description A fee payment event for the Early Reviewer Program. */
        financesV0_SellerReviewEnrollmentPaymentEvent: {
            ChargeComponent?: components["schemas"]["financesV0_ChargeComponent"];
            /** @description An enrollment identifier. */
            EnrollmentId?: string;
            FeeComponent?: components["schemas"]["financesV0_FeeComponent"];
            /** @description The Amazon Standard Identification Number (ASIN) of the item that was enrolled in the Early Reviewer Program. */
            ParentASIN?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            TotalAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of information about fee events for the Early Reviewer Program. */
        financesV0_SellerReviewEnrollmentPaymentEventList: components["schemas"]["financesV0_SellerReviewEnrollmentPaymentEvent"][];
        /** @description A service fee on the seller's account. */
        financesV0_ServiceFeeEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            /** @description A short description of the service fee event. */
            FeeDescription?: string;
            FeeList?: components["schemas"]["financesV0_FeeComponentList"];
            /** @description A short description of the service fee reason. */
            FeeReason?: string;
            /** @description A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center. */
            FnSKU?: string;
            /** @description The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API. */
            SellerSKU?: string;
            /** @description The name of the store where the event occurred. */
            StoreName?: string;
        };
        /** @description A list of information about service fee events. */
        financesV0_ServiceFeeEventList: components["schemas"]["financesV0_ServiceFeeEvent"][];
        /** @description A shipment, refund, guarantee claim, or chargeback. */
        financesV0_ShipmentEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            DirectPaymentList?: components["schemas"]["financesV0_DirectPaymentList"];
            /** @description The name of the marketplace where the event occurred. */
            MarketplaceName?: string;
            OrderChargeAdjustmentList?: components["schemas"]["financesV0_ChargeComponentList"];
            OrderChargeList?: components["schemas"]["financesV0_ChargeComponentList"];
            OrderFeeAdjustmentList?: components["schemas"]["financesV0_FeeComponentList"];
            OrderFeeList?: components["schemas"]["financesV0_FeeComponentList"];
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description A seller-defined identifier for an order. */
            SellerOrderId?: string;
            ShipmentFeeAdjustmentList?: components["schemas"]["financesV0_FeeComponentList"];
            ShipmentFeeList?: components["schemas"]["financesV0_FeeComponentList"];
            ShipmentItemAdjustmentList?: components["schemas"]["financesV0_ShipmentItemList"];
            ShipmentItemList?: components["schemas"]["financesV0_ShipmentItemList"];
            /** @description The name of the store where the event occurred. */
            StoreName?: string;
        };
        /** @description A list of shipment event information. */
        financesV0_ShipmentEventList: components["schemas"]["financesV0_ShipmentEvent"][];
        /** @description An item of a shipment, refund, guarantee claim, or chargeback. */
        financesV0_ShipmentItem: {
            CostOfPointsGranted?: components["schemas"]["financesV0_Currency"];
            CostOfPointsReturned?: components["schemas"]["financesV0_Currency"];
            ItemChargeAdjustmentList?: components["schemas"]["financesV0_ChargeComponentList"];
            ItemChargeList?: components["schemas"]["financesV0_ChargeComponentList"];
            ItemFeeAdjustmentList?: components["schemas"]["financesV0_FeeComponentList"];
            ItemFeeList?: components["schemas"]["financesV0_FeeComponentList"];
            ItemTaxWithheldList?: components["schemas"]["financesV0_TaxWithheldComponentList"];
            /** @description An Amazon-defined order adjustment identifier defined for refunds, guarantee claims, and chargeback events. */
            OrderAdjustmentItemId?: string;
            /** @description An Amazon-defined order item identifier. */
            OrderItemId?: string;
            PromotionAdjustmentList?: components["schemas"]["financesV0_PromotionList"];
            PromotionList?: components["schemas"]["financesV0_PromotionList"];
            /**
             * Format: int32
             * @description The number of items shipped.
             */
            QuantityShipped?: number;
            /** @description The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API. */
            SellerSKU?: string;
        };
        /** @description A list of shipment items. */
        financesV0_ShipmentItemList: components["schemas"]["financesV0_ShipmentItem"][];
        /** @description A list of `ShipmentEvent` items. */
        financesV0_ShipmentSettleEventList: components["schemas"]["financesV0_ShipmentEvent"][];
        /** @description A credit given to a solution provider. */
        financesV0_SolutionProviderCreditEvent: {
            /** @description The two-letter country code of the country associated with the marketplace where the order was placed. */
            MarketplaceCountryCode?: string;
            /** @description The identifier of the marketplace where the order was placed. */
            MarketplaceId?: string;
            /** @description The Amazon-defined identifier of the solution provider. */
            ProviderId?: string;
            /** @description The store name where the payment event occurred. */
            ProviderStoreName?: string;
            /** @description The transaction type. */
            ProviderTransactionType?: string;
            /** @description The Amazon-defined identifier of the seller. */
            SellerId?: string;
            /** @description A seller-defined identifier for an order. */
            SellerOrderId?: string;
            /** @description The store name where the payment event occurred. */
            SellerStoreName?: string;
            TransactionAmount?: components["schemas"]["financesV0_Currency"];
            TransactionCreationDate?: components["schemas"]["financesV0_Date"];
        };
        /** @description A list of information about solution provider credits. */
        financesV0_SolutionProviderCreditEventList: components["schemas"]["financesV0_SolutionProviderCreditEvent"][];
        /** @description Information about the taxes withheld. */
        financesV0_TaxWithheldComponent: {
            /** @description The tax collection model applied to the item.
             *
             *     Possible values:
             *
             *     * MarketplaceFacilitator - Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller.
             *
             *     * Standard - Tax is paid to the seller and not remitted to the taxing authority by Amazon. */
            TaxCollectionModel?: string;
            TaxesWithheld?: components["schemas"]["financesV0_ChargeComponentList"];
        };
        /** @description A list of information about taxes withheld. */
        financesV0_TaxWithheldComponentList: components["schemas"]["financesV0_TaxWithheldComponent"][];
        /** @description A TaxWithholding event on seller's account. */
        financesV0_TaxWithholdingEvent: {
            BaseAmount?: components["schemas"]["financesV0_Currency"];
            PostedDate?: components["schemas"]["financesV0_Date"];
            TaxWithholdingPeriod?: components["schemas"]["financesV0_TaxWithholdingPeriod"];
            WithheldAmount?: components["schemas"]["financesV0_Currency"];
        };
        /** @description A list of `TaxWithholding` events. */
        financesV0_TaxWithholdingEventList: components["schemas"]["financesV0_TaxWithholdingEvent"][];
        /** @description Period which taxwithholding on seller's account is calculated. */
        financesV0_TaxWithholdingPeriod: {
            EndDate?: components["schemas"]["financesV0_Date"];
            StartDate?: components["schemas"]["financesV0_Date"];
        };
        /** @description An event related to a Tax-Deducted-at-Source (TDS) reimbursement. */
        financesV0_TDSReimbursementEvent: {
            PostedDate?: components["schemas"]["financesV0_Date"];
            ReimbursedAmount?: components["schemas"]["financesV0_Currency"];
            /** @description The Tax-Deducted-at-Source (TDS) identifier. */
            TDSOrderId?: string;
        };
        /** @description A list of `TDSReimbursementEvent` items. */
        financesV0_TDSReimbursementEventList: components["schemas"]["financesV0_TDSReimbursementEvent"][];
        /** @description An event related to a trial shipment. */
        financesV0_TrialShipmentEvent: {
            /** @description An Amazon-defined identifier for an order. */
            AmazonOrderId?: string;
            FeeList?: components["schemas"]["financesV0_FeeComponentList"];
            /** @description The identifier of the financial event group. */
            FinancialEventGroupId?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            /** @description The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API. */
            SKU?: string;
        };
        /** @description A list of information about trial shipment financial events. */
        financesV0_TrialShipmentEventList: components["schemas"]["financesV0_TrialShipmentEvent"][];
        /** @description An event related to a value added service charge. */
        financesV0_ValueAddedServiceChargeEvent: {
            /** @description A short description of the service charge event. */
            Description?: string;
            PostedDate?: components["schemas"]["financesV0_Date"];
            TransactionAmount?: components["schemas"]["financesV0_Currency"];
            /** @description Indicates the type of transaction.
             *
             *     Example: 'Other Support Service fees' */
            TransactionType?: string;
        };
        /** @description A list of `ValueAddedServiceCharge` events. */
        financesV0_ValueAddedServiceChargeEventList: components["schemas"]["financesV0_ValueAddedServiceChargeEvent"][];
        /**
         * @description Specific details to identify a place.
         * @example {
         *       "addressLine1": "123 example street",
         *       "addressLine2": "Floor 19",
         *       "city": "Toronto",
         *       "companyName": "Acme",
         *       "countryCode": "CA",
         *       "email": "email@email.com",
         *       "name": "name",
         *       "phoneNumber": "1234567890",
         *       "postalCode": "M1M1M1",
         *       "stateOrProvinceCode": "ON"
         *     }
         */
        "fulfillmentInbound_2024-03-20_Address": {
            /** @description Street address information. */
            addressLine1: string;
            /** @description Additional street address information. */
            addressLine2?: string;
            /** @description The city. */
            city: string;
            /** @description The name of the business. */
            companyName?: string;
            /** @description The country code in two-character ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The district or county. */
            districtOrCounty?: string;
            /** @description The email address. */
            email?: string;
            /** @description The name of the individual who is the primary contact. */
            name: string;
            /** @description The phone number. */
            phoneNumber?: string;
            /** @description The postal code. */
            postalCode: string;
            /** @description The state or province code. */
            stateOrProvinceCode?: string;
        };
        /**
         * @description Specific details to identify a place.
         * @example {
         *       "addressLine1": "123 example street",
         *       "addressLine2": "Floor 19",
         *       "city": "Toronto",
         *       "companyName": "Acme",
         *       "countryCode": "CA",
         *       "email": "email@email.com",
         *       "name": "name",
         *       "phoneNumber": "1234567890",
         *       "postalCode": "M1M1M1",
         *       "stateOrProvinceCode": "ON"
         *     }
         */
        "fulfillmentInbound_2024-03-20_AddressInput": {
            /** @description Street address information. */
            addressLine1: string;
            /** @description Additional street address information. */
            addressLine2?: string;
            /** @description The city. */
            city: string;
            /** @description The name of the business. */
            companyName?: string;
            /** @description The country code in two-character ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The district or county. */
            districtOrCounty?: string;
            /** @description The email address. */
            email?: string;
            /** @description The name of the individual who is the primary contact. */
            name: string;
            /** @description The phone number. */
            phoneNumber: string;
            /** @description The postal code. */
            postalCode: string;
            /** @description The state or province code. */
            stateOrProvinceCode?: string;
        };
        /**
         * @description A constraint that applies to all owners. If no constraint is specified, defer to any individual owner constraints.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_AllOwnersConstraint": "MUST_MATCH";
        /** @description The fulfillment center appointment slot for the transportation option. */
        "fulfillmentInbound_2024-03-20_AppointmentSlot": {
            /** @description An identifier to a self-ship appointment slot. */
            slotId: string;
            slotTime: components["schemas"]["fulfillmentInbound_2024-03-20_AppointmentSlotTime"];
        };
        /** @description An appointment slot time with start and end. */
        "fulfillmentInbound_2024-03-20_AppointmentSlotTime": {
            /**
             * Format: date-time
             * @description The end timestamp of the appointment in UTC.
             */
            endTime: string;
            /**
             * Format: date-time
             * @description The start timestamp of the appointment in UTC.
             */
            startTime: string;
        };
        /** @description Contains information about a box that is used in the inbound plan. The box is a container that holds multiple items. */
        "fulfillmentInbound_2024-03-20_Box": {
            /** @description The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box. */
            boxId?: string;
            contentInformationSource?: components["schemas"]["fulfillmentInbound_2024-03-20_BoxContentInformationSource"];
            destinationRegion?: components["schemas"]["fulfillmentInbound_2024-03-20_Region"];
            dimensions?: components["schemas"]["fulfillmentInbound_2024-03-20_Dimensions"];
            /** @description The external identifier for this container / box. */
            externalContainerIdentifier?: string;
            /** @description Type of the external identifier used. Can be: `AMAZON`, `SSCC`. */
            externalContainerIdentifierType?: string;
            /** @description Items contained within the box. */
            items?: components["schemas"]["fulfillmentInbound_2024-03-20_Item"][];
            /** @description Primary key to uniquely identify a Package (Box or Pallet). */
            packageId: string;
            /** @description The number of containers where all other properties like weight or dimensions are identical. */
            quantity?: number;
            /** @description Template name of the box. */
            templateName?: string;
            weight?: components["schemas"]["fulfillmentInbound_2024-03-20_Weight"];
        };
        /**
         * @description Indication of how box content is meant to be provided.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_BoxContentInformationSource": "BOX_CONTENT_PROVIDED" | "MANUAL_PROCESS" | "BARCODE_2D";
        /**
         * @description Input information for a given box.
         * @example {
         *       "contentInformationSource": "BOX_CONTENT_PROVIDED",
         *       "dimensions": {
         *         "height": 5,
         *         "length": 3,
         *         "unitOfMeasurement": "CM",
         *         "width": 4
         *       },
         *       "items": [
         *         {
         *           "expiration": "2024-01-01",
         *           "labelOwner": "AMAZON",
         *           "manufacturingLotCode": "manufacturingLotCode",
         *           "msku": "Sunglasses",
         *           "prepOwner": "AMAZON",
         *           "quantity": 10
         *         }
         *       ],
         *       "quantity": 2,
         *       "weight": {
         *         "unit": "KG",
         *         "value": 5.5
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_BoxInput": {
            contentInformationSource: components["schemas"]["fulfillmentInbound_2024-03-20_BoxContentInformationSource"];
            dimensions: components["schemas"]["fulfillmentInbound_2024-03-20_Dimensions"];
            /** @description The items and their quantity in the box. This must be empty if the box `contentInformationSource` is `BARCODE_2D` or `MANUAL_PROCESS`. */
            items?: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
            /** @description The number of containers where all other properties like weight or dimensions are identical. */
            quantity: number;
            weight: components["schemas"]["fulfillmentInbound_2024-03-20_Weight"];
        };
        /** @description The requirements for a box in the packing option. */
        "fulfillmentInbound_2024-03-20_BoxRequirements": {
            weight: components["schemas"]["fulfillmentInbound_2024-03-20_WeightRange"];
        };
        /** @description Input information for updating a box */
        "fulfillmentInbound_2024-03-20_BoxUpdateInput": {
            contentInformationSource: components["schemas"]["fulfillmentInbound_2024-03-20_BoxContentInformationSource"];
            dimensions: components["schemas"]["fulfillmentInbound_2024-03-20_Dimensions"];
            /** @description The items and their quantity in the box. This must be empty if the box `contentInformationSource` is `BARCODE_2D` or `MANUAL_PROCESS`. */
            items?: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
            /** @description Primary key to uniquely identify a Box Package. PackageId must be provided if the intent is to update an existing box. Adding a new box will not require providing this value. Any existing PackageIds not provided will be treated as to-be-removed */
            packageId?: string;
            /** @description The number of containers where all other properties like weight or dimensions are identical. */
            quantity: number;
            weight: components["schemas"]["fulfillmentInbound_2024-03-20_Weight"];
        };
        /** @description The `cancelInboundPlan` response. */
        "fulfillmentInbound_2024-03-20_CancelInboundPlanResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `cancelSelfShipAppointment` request.
         * @example {
         *       "reasonComment": "OTHER"
         *     }
         */
        "fulfillmentInbound_2024-03-20_CancelSelfShipAppointmentRequest": {
            reasonComment?: components["schemas"]["fulfillmentInbound_2024-03-20_ReasonComment"];
        };
        /** @description The `CancelSelfShipAppointment` response. */
        "fulfillmentInbound_2024-03-20_CancelSelfShipAppointmentResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The carrier for the inbound shipment. */
        "fulfillmentInbound_2024-03-20_Carrier": {
            /** @description The carrier code. For example, USPS or DHLEX. */
            alphaCode?: string;
            /** @description The name of the carrier. */
            name?: string;
        };
        /** @description Contains details for a transportation carrier appointment. This appointment is vended out by Amazon and is an indicator for when a transportation carrier is accepting shipments to be picked up. */
        "fulfillmentInbound_2024-03-20_CarrierAppointment": {
            /**
             * Format: date-time
             * @description The end timestamp of the appointment in UTC.
             */
            endTime: string;
            /**
             * Format: date-time
             * @description The start timestamp of the appointment in UTC.
             */
            startTime: string;
        };
        /** @description Contains item identifiers and related tax information. */
        "fulfillmentInbound_2024-03-20_ComplianceDetail": {
            /** @description The Amazon Standard Identification Number, which identifies the detail page identifier. */
            asin?: string;
            /** @description The Fulfillment Network SKU, which identifies a real fulfillable item with catalog data and condition. */
            fnsku?: string;
            /** @description The merchant SKU, a merchant-supplied identifier for a specific SKU. */
            msku?: string;
            taxDetails?: components["schemas"]["fulfillmentInbound_2024-03-20_TaxDetails"];
        };
        /**
         * @description The `confirmDeliveryWindowOptions` response.
         * @example {
         *       "operationId": "1234abcd-1234-abcd-5678-1234abcd5678"
         *     }
         */
        "fulfillmentInbound_2024-03-20_ConfirmDeliveryWindowOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The `confirmPackingOption` response. */
        "fulfillmentInbound_2024-03-20_ConfirmPackingOptionResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The `confirmPlacementOption` response. */
        "fulfillmentInbound_2024-03-20_ConfirmPlacementOptionResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The `confirmShipmentContentUpdatePreview` response. */
        "fulfillmentInbound_2024-03-20_ConfirmShipmentContentUpdatePreviewResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `confirmTransportationOptions` request.
         * @example {
         *       "transportationSelections": [
         *         {
         *           "contactInformation": {
         *             "email": "email@email.com",
         *             "name": "John Smithy",
         *             "phoneNumber": "1234567890"
         *           },
         *           "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
         *           "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678"
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_ConfirmTransportationOptionsRequest": {
            /** @description Information needed to confirm one of the available transportation options. */
            transportationSelections: components["schemas"]["fulfillmentInbound_2024-03-20_TransportationSelection"][];
        };
        /** @description The `confirmTransportationOptions` response. */
        "fulfillmentInbound_2024-03-20_ConfirmTransportationOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The seller's contact information.
         * @example {
         *       "email": "email@email.com",
         *       "name": "name",
         *       "phoneNumber": "1234567890"
         *     }
         */
        "fulfillmentInbound_2024-03-20_ContactInformation": {
            /** @description The email address. */
            email?: string;
            /** @description The contact's name. */
            name: string;
            /** @description The phone number. */
            phoneNumber: string;
        };
        /** @description Preview of the changes that will be applied to the shipment. */
        "fulfillmentInbound_2024-03-20_ContentUpdatePreview": {
            /** @description Identifier of a content update preview. */
            contentUpdatePreviewId: string;
            /**
             * Format: date-time
             * @description The time at which the content update expires. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
             */
            expiration: string;
            requestedUpdates: components["schemas"]["fulfillmentInbound_2024-03-20_RequestedUpdates"];
            transportationOption: components["schemas"]["fulfillmentInbound_2024-03-20_TransportationOption"];
        };
        /**
         * @description The `createInboundPlan` request.
         * @example {
         *       "destinationMarketplaces": [
         *         "ATVPDKIKX0DER"
         *       ],
         *       "items": [
         *         {
         *           "expiration": "2024-01-01",
         *           "labelOwner": "AMAZON",
         *           "manufacturingLotCode": "manufacturingLotCode",
         *           "msku": "Sunglasses",
         *           "prepOwner": "AMAZON",
         *           "quantity": 10
         *         }
         *       ],
         *       "name": "My inbound plan",
         *       "sourceAddress": {
         *         "addressLine1": "123 example street",
         *         "addressLine2": "Floor 19",
         *         "city": "Toronto",
         *         "companyName": "Acme",
         *         "countryCode": "CA",
         *         "email": "email@email.com",
         *         "name": "name",
         *         "phoneNumber": "1234567890",
         *         "postalCode": "M1M1M1",
         *         "stateOrProvinceCode": "ON"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_CreateInboundPlanRequest": {
            /** @description Marketplaces where the items need to be shipped to. Currently only one marketplace can be selected in this request. */
            destinationMarketplaces: string[];
            /** @description Items included in this plan. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
            /** @description Name for the Inbound Plan. If one isn't provided, a default name will be provided. */
            name?: string;
            sourceAddress: components["schemas"]["fulfillmentInbound_2024-03-20_AddressInput"];
        };
        /** @description The `createInboundPlan` response. */
        "fulfillmentInbound_2024-03-20_CreateInboundPlanResponse": {
            /** @description Identifier of an inbound plan. */
            inboundPlanId: string;
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `createMarketplaceItemLabels` request.
         * @example {
         *       "height": 25,
         *       "labelType": "STANDARD_FORMAT",
         *       "localeCode": "en_US",
         *       "marketplaceId": "A2EUQ1WTGCTBG2",
         *       "mskuQuantities": [
         *         {
         *           "msku": "msku",
         *           "quantity": 5
         *         }
         *       ],
         *       "pageType": "A4_21",
         *       "width": 100
         *     }
         */
        "fulfillmentInbound_2024-03-20_CreateMarketplaceItemLabelsRequest": {
            /** @description The height of the item label. */
            height?: number;
            labelType: components["schemas"]["fulfillmentInbound_2024-03-20_LabelPrintType"];
            /**
             * @description The locale code constructed from ISO 639 language code and ISO 3166-1 alpha-2 standard of country codes separated by an underscore character.
             * @default en_US
             */
            localeCode: string;
            /** @description The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            /** @description Represents the quantity of an MSKU to print item labels for. */
            mskuQuantities: components["schemas"]["fulfillmentInbound_2024-03-20_MskuQuantity"][];
            pageType?: components["schemas"]["fulfillmentInbound_2024-03-20_ItemLabelPageType"];
            /** @description The width of the item label. */
            width?: number;
        };
        /** @description The `createMarketplaceItemLabels` response. */
        "fulfillmentInbound_2024-03-20_CreateMarketplaceItemLabelsResponse": {
            /** @description Resources to download the requested document. */
            documentDownloads: components["schemas"]["fulfillmentInbound_2024-03-20_DocumentDownload"][];
        };
        /** @description The type and amount of currency. */
        "fulfillmentInbound_2024-03-20_Currency": {
            /** @description Decimal value of the currency. */
            amount: number;
            /** @description ISO 4217 standard of a currency code. */
            code: string;
        };
        /**
         * @description Provide units going to the warehouse.
         * @example {
         *       "items": [
         *         {
         *           "expiration": "2024-01-01",
         *           "labelOwner": "AMAZON",
         *           "manufacturingLotCode": "manufacturingLotCode",
         *           "msku": "Sunglasses",
         *           "prepOwner": "AMAZON",
         *           "quantity": 10
         *         }
         *       ],
         *       "warehouseId": "YYZ14"
         *     }
         */
        "fulfillmentInbound_2024-03-20_CustomPlacementInput": {
            /** @description Items included while creating Inbound Plan. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
            /** @description Warehouse Id. */
            warehouseId: string;
        };
        /**
         * @description Specifies the date that the seller expects their shipment will be shipped.
         * @example {
         *       "readyToShipWindow": {
         *         "end": "2024-01-06T14:48:00.000Z",
         *         "start": "2024-01-05T14:48:00.000Z"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_Dates": {
            readyToShipWindow?: components["schemas"]["fulfillmentInbound_2024-03-20_Window"];
        };
        /**
         * @description Contains information pertaining to a delivery window option.
         * @example {
         *       "availabilityType": "AVAILABLE",
         *       "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
         *       "endDate": "2024-01-05T20:00:00.000Z",
         *       "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
         *       "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
         *       "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
         *       "startDate": "2024-01-05T14:00:00.000Z",
         *       "validUntil": "2024-01-05T20:00:00.000Z"
         *     }
         */
        "fulfillmentInbound_2024-03-20_DeliveryWindowOption": {
            /** @description Identifies type of Delivery Window Availability. Values: `AVAILABLE`, `CONGESTED` */
            availabilityType: string;
            /** @description Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered. */
            deliveryWindowOptionId: string;
            /**
             * Format: date-time
             * @description The time at which this delivery window option ends. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mmZ`.
             */
            endDate: string;
            /**
             * Format: date-time
             * @description The time at which this delivery window option starts. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mmZ`.
             */
            startDate: string;
            /**
             * Format: date-time
             * @description The time at which this window delivery option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mmZ`.
             */
            validUntil: string;
        };
        /** @description Measurement of a package's dimensions. */
        "fulfillmentInbound_2024-03-20_Dimensions": {
            /** @description The height of a package. */
            height: number;
            /** @description The length of a package. */
            length: number;
            unitOfMeasurement: components["schemas"]["fulfillmentInbound_2024-03-20_UnitOfMeasurement"];
            /** @description The width of a package. */
            width: number;
        };
        /** @description Resource to download the requested document. */
        "fulfillmentInbound_2024-03-20_DocumentDownload": {
            /** @description The type of download. Possible values: `URL`. */
            downloadType: string;
            /**
             * Format: date-time
             * @description The URI's expiration time. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
             */
            expiration?: string;
            /** @description Uniform resource identifier to identify where the document is located. */
            uri: string;
        };
        /**
         * @description Error object containing information about what went wrong.
         * @example {
         *       "code": "FBA_ERROR_001",
         *       "details": "The shipment is in a status that does not allow it to be edited.",
         *       "message": "Invalid Request"
         *     }
         */
        "fulfillmentInbound_2024-03-20_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "fulfillmentInbound_2024-03-20_ErrorList": {
            /** @description List of errors. */
            errors: components["schemas"]["fulfillmentInbound_2024-03-20_Error"][];
        };
        /**
         * @description Freight information describes the SKUs that are in transit. Freight carrier options and quotes will only be returned if the freight information is provided.
         * @example {
         *       "declaredValue": {
         *         "amount": 5.5,
         *         "code": "CAD"
         *       },
         *       "freightClass": "FC_50"
         *     }
         */
        "fulfillmentInbound_2024-03-20_FreightInformation": {
            declaredValue?: components["schemas"]["fulfillmentInbound_2024-03-20_Currency"];
            /** @description Freight class.
             *
             *     Possible values: `NONE`, `FC_50`, `FC_55`, `FC_60`, `FC_65`, `FC_70`, `FC_77_5`, `FC_85`, `FC_92_5`, `FC_100`, `FC_110`, `FC_125`, `FC_150`, `FC_175`, `FC_200`, `FC_250`, `FC_300`, `FC_400`, `FC_500`. */
            freightClass?: string;
        };
        /** @description The `generateDeliveryWindowOptions` response. */
        "fulfillmentInbound_2024-03-20_GenerateDeliveryWindowOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The `generatePackingOptions` response. */
        "fulfillmentInbound_2024-03-20_GeneratePackingOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `generatePlacementOptions` request.
         * @example {
         *       "customPlacement": [
         *         {
         *           "items": [
         *             {
         *               "expiration": "2024-01-01",
         *               "labelOwner": "AMAZON",
         *               "manufacturingLotCode": "manufacturingLotCode",
         *               "msku": "Sunglasses",
         *               "prepOwner": "AMAZON",
         *               "quantity": 10
         *             }
         *           ],
         *           "warehouseId": "YYZ14"
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_GeneratePlacementOptionsRequest": {
            /** @description Custom placement options you want to add to the plan. This is only used for the India (IN - A21TJRUUN4KGV) marketplace. */
            customPlacement?: components["schemas"]["fulfillmentInbound_2024-03-20_CustomPlacementInput"][];
        };
        /** @description The `generatePlacementOptions` response. */
        "fulfillmentInbound_2024-03-20_GeneratePlacementOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `generateSelfShipAppointmentSlots` request.
         * @example {
         *       "desiredEndDate": "2024-01-06T14:48:00.000Z",
         *       "desiredStartDate": "2024-01-05T14:48:00.000Z"
         *     }
         */
        "fulfillmentInbound_2024-03-20_GenerateSelfShipAppointmentSlotsRequest": {
            /**
             * Format: date-time
             * @description The desired end date. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
             */
            desiredEndDate?: string;
            /**
             * Format: date-time
             * @description The desired start date. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
             */
            desiredStartDate?: string;
        };
        /** @description The `generateSelfShipAppointmentSlots` response. */
        "fulfillmentInbound_2024-03-20_GenerateSelfShipAppointmentSlotsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `GenerateShipmentContentUpdatePreviews` request.
         * @example {
         *       "boxes": [
         *         {
         *           "contentInformationSource": "BOX_CONTENT_PROVIDED",
         *           "dimensions": {
         *             "height": 5,
         *             "length": 3,
         *             "unitOfMeasurement": "CM",
         *             "width": 4
         *           },
         *           "items": [
         *             {
         *               "expiration": "2024-01-01",
         *               "labelOwner": "AMAZON",
         *               "manufacturingLotCode": "manufacturingLotCode",
         *               "msku": "Sunglasses",
         *               "prepOwner": "AMAZON",
         *               "quantity": 10
         *             }
         *           ],
         *           "packageId": "pk1234abcd-1234-abcd-5678-1234abcd5678",
         *           "quantity": 2,
         *           "weight": {
         *             "unit": "KG",
         *             "value": 5.5
         *           }
         *         }
         *       ],
         *       "items": [
         *         {
         *           "expiration": "2024-01-01",
         *           "labelOwner": "AMAZON",
         *           "manufacturingLotCode": "manufacturingLotCode",
         *           "msku": "Sunglasses",
         *           "prepOwner": "AMAZON",
         *           "quantity": 10
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_GenerateShipmentContentUpdatePreviewsRequest": {
            /** @description A list of boxes that will be present in the shipment after the update. */
            boxes: components["schemas"]["fulfillmentInbound_2024-03-20_BoxUpdateInput"][];
            /** @description A list of all items that will be present in the shipment after the update. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
        };
        /** @description The `GenerateShipmentContentUpdatePreviews` response. */
        "fulfillmentInbound_2024-03-20_GenerateShipmentContentUpdatePreviewsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `generateTransportationOptions` request.
         * @example {
         *       "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
         *       "shipmentTransportationConfigurations": [
         *         {
         *           "contactInformation": {
         *             "email": "email@email.com",
         *             "name": "John Smithy",
         *             "phoneNumber": "1234567890"
         *           },
         *           "freightInformation": {
         *             "declaredValue": {
         *               "amount": 5.5,
         *               "code": "CAD"
         *             },
         *             "freightClass": "FC_50"
         *           },
         *           "pallets": [
         *             {
         *               "dimensions": {
         *                 "height": 5,
         *                 "length": 3,
         *                 "unitOfMeasurement": "CM",
         *                 "width": 4
         *               },
         *               "quantity": 2,
         *               "stackability": "STACKABLE",
         *               "weight": {
         *                 "unit": "KG",
         *                 "value": 5.5
         *               }
         *             }
         *           ],
         *           "readyToShipWindow": {
         *             "start": "2024-01-01T00:00Z"
         *           },
         *           "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_GenerateTransportationOptionsRequest": {
            /** @description The placement option to generate transportation options for. */
            placementOptionId: string;
            /** @description List of shipment transportation configurations. */
            shipmentTransportationConfigurations: components["schemas"]["fulfillmentInbound_2024-03-20_ShipmentTransportationConfiguration"][];
        };
        /** @description The `generateTransportationOptions` response. */
        "fulfillmentInbound_2024-03-20_GenerateTransportationOptionsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The `getDeliveryChallanDocumentResponse` response. */
        "fulfillmentInbound_2024-03-20_GetDeliveryChallanDocumentResponse": {
            documentDownload: components["schemas"]["fulfillmentInbound_2024-03-20_DocumentDownload"];
        };
        /** @description The `getSelfShipAppointmentSlots` response. */
        "fulfillmentInbound_2024-03-20_GetSelfShipAppointmentSlotsResponse": {
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
            selfShipAppointmentSlotsAvailability: components["schemas"]["fulfillmentInbound_2024-03-20_SelfShipAppointmentSlotsAvailability"];
        };
        /** @description GetInboundOperationStatus response. */
        "fulfillmentInbound_2024-03-20_InboundOperationStatus": {
            /** @description The name of the operation in the asynchronous API call. */
            operation: string;
            /** @description The operation ID returned by the asynchronous API call. */
            operationId: string;
            /** @description The problems in the processing of the asynchronous operation. */
            operationProblems: components["schemas"]["fulfillmentInbound_2024-03-20_OperationProblem"][];
            operationStatus: components["schemas"]["fulfillmentInbound_2024-03-20_OperationStatus"];
        };
        /**
         * @description Inbound plan containing details of the inbound workflow.
         * @example {
         *       "createdAt": "2024-03-20T12:01:00Z",
         *       "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
         *       "lastUpdatedAt": "2024-03-28T13:15:30Z",
         *       "marketplaceIds": [
         *         "A2EUQ1WTGCTBG2"
         *       ],
         *       "name": "FBA (03/20/2024, 12:01 PM)",
         *       "packingOptions": [],
         *       "placementOptions": [],
         *       "shipments": [],
         *       "sourceAddress": {
         *         "addressLine1": "123 example street",
         *         "addressLine2": "Floor 19",
         *         "city": "Toronto",
         *         "companyName": "Acme",
         *         "countryCode": "CA",
         *         "email": "email@email.com",
         *         "name": "name",
         *         "phoneNumber": "1234567890",
         *         "postalCode": "M1M1M1",
         *         "stateOrProvinceCode": "ON"
         *       },
         *       "status": "ACTIVE"
         *     }
         */
        "fulfillmentInbound_2024-03-20_InboundPlan": {
            /**
             * Format: date-time
             * @description The time at which the inbound plan was created. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime with pattern `yyyy-MM-ddTHH:mm:ssZ`.
             */
            createdAt: string;
            /** @description Identifier of an inbound plan. */
            inboundPlanId: string;
            /**
             * Format: date-time
             * @description The time at which the inbound plan was last updated. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ssZ`.
             */
            lastUpdatedAt: string;
            /** @description A list of marketplace IDs. */
            marketplaceIds: string[];
            /** @description Human-readable name of the inbound plan. */
            name: string;
            /** @description Packing options for the inbound plan. This property will be populated when it has been generated via the corresponding operation. If there is a chosen placement option, only packing options for that placement option will be returned. If there are confirmed shipments, only packing options for those shipments will be returned. Query the packing option for more details. */
            packingOptions?: components["schemas"]["fulfillmentInbound_2024-03-20_PackingOptionSummary"][];
            /** @description Placement options for the inbound plan. This property will be populated when it has been generated via the corresponding operation. If there is a chosen placement option, that will be the only returned option. Query the placement option for more details. */
            placementOptions?: components["schemas"]["fulfillmentInbound_2024-03-20_PlacementOptionSummary"][];
            /** @description A list of shipment IDs for the inbound plan. This property is populated when it has been generated with the `confirmPlacementOptions` operation. Only shipments from the chosen placement option are returned. Query the shipment for more details. */
            shipments?: components["schemas"]["fulfillmentInbound_2024-03-20_ShipmentSummary"][];
            sourceAddress: components["schemas"]["fulfillmentInbound_2024-03-20_Address"];
            /** @description Current status of the inbound plan. Possible values: `ACTIVE`, `VOIDED`, `SHIPPED`, `ERRORED`. */
            status: string;
        };
        /**
         * @description A light-weight inbound plan.
         * @example {
         *       "createdAt": "2023-03-08T13:15:30Z",
         *       "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
         *       "lastUpdatedAt": "2023-03-08T13:15:30Z",
         *       "marketplaceIds": [
         *         "A2EUQ1WTGCTBG2"
         *       ],
         *       "name": "FBA (03/08/2023, 01:15 PM)",
         *       "sourceAddress": {
         *         "addressLine1": "123 example street",
         *         "addressLine2": "Floor 19",
         *         "city": "Toronto",
         *         "companyName": "Acme",
         *         "countryCode": "CA",
         *         "email": "email@email.com",
         *         "name": "name",
         *         "phoneNumber": "1234567890",
         *         "postalCode": "M1M1M1",
         *         "stateOrProvinceCode": "ON"
         *       },
         *       "status": "ACTIVE"
         *     }
         */
        "fulfillmentInbound_2024-03-20_InboundPlanSummary": {
            /**
             * Format: date-time
             * @description The time at which the inbound plan was created. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ssZ`.
             */
            createdAt: string;
            /** @description Identifier of an inbound plan. */
            inboundPlanId: string;
            /**
             * Format: date-time
             * @description The time at which the inbound plan was last updated. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ssZ`.
             */
            lastUpdatedAt: string;
            /** @description A list of marketplace IDs. */
            marketplaceIds: string[];
            /** @description Human-readable name of the inbound plan. */
            name: string;
            sourceAddress: components["schemas"]["fulfillmentInbound_2024-03-20_Address"];
            /** @description The current status of the inbound plan. Possible values: `ACTIVE`, `VOIDED`, `SHIPPED`, `ERRORED`. */
            status: string;
        };
        /** @description Contains details about cost related modifications to the placement cost. */
        "fulfillmentInbound_2024-03-20_Incentive": {
            /** @description Description of the incentive. */
            description: string;
            /** @description Target of the incentive. Possible values: 'Placement Services', 'Fulfillment Fee Discount'. */
            target: string;
            /** @description Type of incentive. Possible values: `FEE`, `DISCOUNT`. */
            type: string;
            value: components["schemas"]["fulfillmentInbound_2024-03-20_Currency"];
        };
        /** @description Information associated with a single SKU in the seller's catalog. */
        "fulfillmentInbound_2024-03-20_Item": {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            asin: string;
            /** @description The expiration date of the MSKU. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern`YYYY-MM-DD`. The same MSKU with different expiration dates cannot go into the same box. */
            expiration?: string;
            /** @description A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center. */
            fnsku: string;
            /** @description Specifies who will label the items. Options include `AMAZON`, `SELLER`, and `NONE`. */
            labelOwner: string;
            /** @description The manufacturing lot code. */
            manufacturingLotCode?: string;
            /** @description The merchant-defined SKU ID. */
            msku: string;
            /** @description Special preparations that are required for an item. */
            prepInstructions: components["schemas"]["fulfillmentInbound_2024-03-20_PrepInstruction"][];
            /** @description The number of the specified MSKU. */
            quantity: number;
        };
        /**
         * @description Defines an item's input parameters.
         * @example {
         *       "expiration": "2024-01-01",
         *       "labelOwner": "AMAZON",
         *       "manufacturingLotCode": "manufacturingLotCode",
         *       "msku": "Sunglasses",
         *       "prepOwner": "AMAZON",
         *       "quantity": 10
         *     }
         */
        "fulfillmentInbound_2024-03-20_ItemInput": {
            /** @description The expiration date of the MSKU. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `YYYY-MM-DD`. Items with the same MSKU but different expiration dates cannot go into the same box. */
            expiration?: string;
            labelOwner: components["schemas"]["fulfillmentInbound_2024-03-20_LabelOwner"];
            /** @description The manufacturing lot code. */
            manufacturingLotCode?: string;
            /** @description The merchant SKU, a merchant-supplied identifier of a specific SKU. */
            msku: string;
            prepOwner: components["schemas"]["fulfillmentInbound_2024-03-20_PrepOwner"];
            /** @description The number of units of the specified MSKU that will be shipped. */
            quantity: number;
        };
        /**
         * @description The page type to use to print the labels. Possible values: 'A4_21', 'A4_24', 'A4_24_64x33', 'A4_24_66x35', 'A4_24_70x36', 'A4_24_70x37', 'A4_24i', 'A4_27', 'A4_40_52x29', 'A4_44_48x25', 'Letter_30'.
         * @example A4_21
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_ItemLabelPageType": "A4_21" | "A4_24" | "A4_24_64x33" | "A4_24_66x35" | "A4_24_70x36" | "A4_24_70x37" | "A4_24i" | "A4_27" | "A4_40_52x29" | "A4_44_48x25" | "Letter_30";
        /**
         * @description Specifies who will label the items. Options include `AMAZON`, `SELLER` or `NONE`.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_LabelOwner": "AMAZON" | "SELLER" | "NONE";
        /**
         * @description Indicates the type of print type for a given label.
         * @example STANDARD_FORMAT
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_LabelPrintType": "STANDARD_FORMAT" | "THERMAL_PRINTING";
        /** @description The `listDeliveryWindowOptions` response. */
        "fulfillmentInbound_2024-03-20_ListDeliveryWindowOptionsResponse": {
            /** @description Delivery window options generated for the placement option. */
            deliveryWindowOptions: components["schemas"]["fulfillmentInbound_2024-03-20_DeliveryWindowOption"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listInboundPlanBoxes` response. */
        "fulfillmentInbound_2024-03-20_ListInboundPlanBoxesResponse": {
            /** @description A list of boxes in an inbound plan. */
            boxes: components["schemas"]["fulfillmentInbound_2024-03-20_Box"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listInboundPlanItems` response. */
        "fulfillmentInbound_2024-03-20_ListInboundPlanItemsResponse": {
            /** @description The items in an inbound plan. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_Item"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listInboundPlanPallets` response. */
        "fulfillmentInbound_2024-03-20_ListInboundPlanPalletsResponse": {
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
            /** @description The pallets in an inbound plan. */
            pallets: components["schemas"]["fulfillmentInbound_2024-03-20_Pallet"][];
        };
        /** @description The `listInboundPlans` response. */
        "fulfillmentInbound_2024-03-20_ListInboundPlansResponse": {
            /** @description A list of inbound plans with minimal information. */
            inboundPlans?: components["schemas"]["fulfillmentInbound_2024-03-20_InboundPlanSummary"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listItemComplianceDetails` response. */
        "fulfillmentInbound_2024-03-20_ListItemComplianceDetailsResponse": {
            /** @description List of compliance details. */
            complianceDetails?: components["schemas"]["fulfillmentInbound_2024-03-20_ComplianceDetail"][];
        };
        /** @description The `listPackingGroupBoxes` response. */
        "fulfillmentInbound_2024-03-20_ListPackingGroupBoxesResponse": {
            /** @description Provides the information about the list of boxes in the packing group. */
            boxes: components["schemas"]["fulfillmentInbound_2024-03-20_Box"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listPackingGroupItems` response. */
        "fulfillmentInbound_2024-03-20_ListPackingGroupItemsResponse": {
            /** @description Provides the information about the list of items in the packing group. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_Item"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listPlacementOptions` response. */
        "fulfillmentInbound_2024-03-20_ListPackingOptionsResponse": {
            /** @description List of packing options. */
            packingOptions: components["schemas"]["fulfillmentInbound_2024-03-20_PackingOption"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listPlacementOptions` response. */
        "fulfillmentInbound_2024-03-20_ListPlacementOptionsResponse": {
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
            /** @description Placement options generated for the inbound plan. */
            placementOptions: components["schemas"]["fulfillmentInbound_2024-03-20_PlacementOption"][];
        };
        /** @description The response to the `listPrepDetails` operation. */
        "fulfillmentInbound_2024-03-20_ListPrepDetailsResponse": {
            /** @description A list of MSKUs and related prep details. */
            mskuPrepDetails: components["schemas"]["fulfillmentInbound_2024-03-20_MskuPrepDetail"][];
        };
        /** @description The `listShipmentBoxes` response. */
        "fulfillmentInbound_2024-03-20_ListShipmentBoxesResponse": {
            /** @description A list of boxes in a shipment. */
            boxes: components["schemas"]["fulfillmentInbound_2024-03-20_Box"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `ListShipmentContentUpdatePreviews` response. */
        "fulfillmentInbound_2024-03-20_ListShipmentContentUpdatePreviewsResponse": {
            /** @description A list of content update previews in a shipment. */
            contentUpdatePreviews: components["schemas"]["fulfillmentInbound_2024-03-20_ContentUpdatePreview"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listShipmentItems` response. */
        "fulfillmentInbound_2024-03-20_ListShipmentItemsResponse": {
            /** @description The items in a shipment. */
            items: components["schemas"]["fulfillmentInbound_2024-03-20_Item"][];
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
        };
        /** @description The `listShipmentPallets` response. */
        "fulfillmentInbound_2024-03-20_ListShipmentPalletsResponse": {
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
            /** @description The pallets in a shipment. */
            pallets: components["schemas"]["fulfillmentInbound_2024-03-20_Pallet"][];
        };
        /** @description The `listTransportationOptions` response. */
        "fulfillmentInbound_2024-03-20_ListTransportationOptionsResponse": {
            pagination?: components["schemas"]["fulfillmentInbound_2024-03-20_Pagination"];
            /** @description Transportation options generated for the placement option. */
            transportationOptions: components["schemas"]["fulfillmentInbound_2024-03-20_TransportationOption"][];
        };
        /** @description Contains information related to Less-Than-Truckload (LTL) shipment tracking. */
        "fulfillmentInbound_2024-03-20_LtlTrackingDetail": {
            /** @description The number of the carrier shipment acknowledgement document. */
            billOfLadingNumber?: string;
            /** @description The number associated with the freight bill. */
            freightBillNumber?: string[];
        };
        /**
         * @description Contains input information to update Less-Than-Truckload (LTL) tracking information.
         * @example {
         *       "billOfLadingNumber": "billOfLadingNumber",
         *       "freightBillNumber": [
         *         "freightBillNumber1"
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_LtlTrackingDetailInput": {
            /** @description The number of the carrier shipment acknowledgement document. */
            billOfLadingNumber?: string;
            /** @description Number associated with the freight bill. */
            freightBillNumber: string[];
        };
        /** @description An MSKU and its related prep details. */
        "fulfillmentInbound_2024-03-20_MskuPrepDetail": {
            allOwnersConstraint?: components["schemas"]["fulfillmentInbound_2024-03-20_AllOwnersConstraint"];
            labelOwnerConstraint?: components["schemas"]["fulfillmentInbound_2024-03-20_OwnerConstraint"];
            /** @description The merchant SKU, a merchant-supplied identifier for a specific SKU. */
            msku: string;
            prepCategory: components["schemas"]["fulfillmentInbound_2024-03-20_PrepCategory"];
            prepOwnerConstraint?: components["schemas"]["fulfillmentInbound_2024-03-20_OwnerConstraint"];
            /** @description A list of preparation types associated with a preparation category. */
            prepTypes: components["schemas"]["fulfillmentInbound_2024-03-20_PrepType"][];
        };
        /**
         * @description An MSKU and its related prep details.
         * @example {
         *       "msku": "msku",
         *       "prepCategory": "NONE",
         *       "prepTypes": [
         *         "ITEM_NO_PREP"
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_MskuPrepDetailInput": {
            /** @description The merchant SKU, a merchant-supplied identifier for a specific SKU. */
            msku: string;
            prepCategory: components["schemas"]["fulfillmentInbound_2024-03-20_PrepCategory"];
            /** @description A list of preparation types associated with a preparation category. */
            prepTypes: components["schemas"]["fulfillmentInbound_2024-03-20_PrepType"][];
        };
        /**
         * @description Represents an MSKU and the related quantity.
         * @example {
         *       "msku": "msku",
         *       "quantity": 5
         *     }
         */
        "fulfillmentInbound_2024-03-20_MskuQuantity": {
            /** @description The merchant SKU, a merchant-supplied identifier for a specific SKU. */
            msku: string;
            /** @description A positive integer. */
            quantity: number;
        };
        /** @description A problem with additional properties persisted to an operation. */
        "fulfillmentInbound_2024-03-20_OperationProblem": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
            /** @description The severity of the problem. Possible values: `WARNING`, `ERROR`. */
            severity: string;
        };
        /**
         * @description The status of an operation.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_OperationStatus": "SUCCESS" | "FAILED" | "IN_PROGRESS";
        /**
         * @description A constraint that can apply to an individual owner. If no constraint is specified, both `AMAZON` and `SELLER` are acceptable.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_OwnerConstraint": "AMAZON_ONLY" | "NONE_ONLY" | "SELLER_ONLY";
        /**
         * @description Packing information for the inbound plan.
         * @example {
         *       "boxes": [
         *         {
         *           "contentInformationSource": "BOX_CONTENT_PROVIDED",
         *           "dimensions": {
         *             "height": 5,
         *             "length": 3,
         *             "unitOfMeasurement": "CM",
         *             "width": 4
         *           },
         *           "items": [
         *             {
         *               "expiration": "2024-01-01",
         *               "labelOwner": "AMAZON",
         *               "manufacturingLotCode": "manufacturingLotCode",
         *               "msku": "Sunglasses",
         *               "prepOwner": "AMAZON",
         *               "quantity": 10
         *             }
         *           ],
         *           "quantity": 2,
         *           "weight": {
         *             "unit": "KG",
         *             "value": 5.5
         *           }
         *         }
         *       ],
         *       "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
         *       "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
         *     }
         */
        "fulfillmentInbound_2024-03-20_PackageGroupingInput": {
            /** @description Box level information being provided. */
            boxes: components["schemas"]["fulfillmentInbound_2024-03-20_BoxInput"][];
            /** @description The ID of the `packingGroup` that packages are grouped according to. The `PackingGroupId` can only be provided before placement confirmation, and it must belong to the confirmed `PackingOption`. One of `ShipmentId` or `PackingGroupId` must be provided with every request. */
            packingGroupId?: string;
            /** @description The ID of the shipment that packages are grouped according to. The `ShipmentId` can only be provided after placement confirmation, and the shipment must belong to the confirmed placement option. One of `ShipmentId` or `PackingGroupId` must be provided with every request. */
            shipmentId?: string;
        };
        /** @description A way to configure this packing option. Some box content information sources might not be allowed. Non-standard minimum and maximum box weights might be enforced. */
        "fulfillmentInbound_2024-03-20_PackingConfiguration": {
            /** @description The box content information sources that are allowed. */
            boxPackingMethods?: components["schemas"]["fulfillmentInbound_2024-03-20_BoxContentInformationSource"][];
            boxRequirements?: components["schemas"]["fulfillmentInbound_2024-03-20_BoxRequirements"];
            /** @description A list of supported shipping requirements for this packing configuration. */
            shippingRequirements?: components["schemas"]["fulfillmentInbound_2024-03-20_ShippingRequirements"][];
        };
        /** @description A packing option contains a set of pack groups plus additional information about the packing option, such as any discounts or fees if it's selected. */
        "fulfillmentInbound_2024-03-20_PackingOption": {
            /** @description Discount for the offered option. */
            discounts: components["schemas"]["fulfillmentInbound_2024-03-20_Incentive"][];
            /**
             * Format: date-time
             * @description The time at which this packing option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
             */
            expiration?: string;
            /** @description Fee for the offered option. */
            fees: components["schemas"]["fulfillmentInbound_2024-03-20_Incentive"][];
            /** @description Packing group IDs. */
            packingGroups: string[];
            /** @description Identifier of a packing option. */
            packingOptionId: string;
            /** @description The status of the packing option. Possible values: `OFFERED`, `ACCEPTED`, `EXPIRED`. */
            status: string;
            /** @description A list of possible configurations for this option. */
            supportedConfigurations: components["schemas"]["fulfillmentInbound_2024-03-20_PackingConfiguration"][];
            /** @description **This field is deprecated**. Use the `shippingRequirements` property under `supportedConfigurations` instead. List of supported shipping modes. */
            supportedShippingConfigurations: components["schemas"]["fulfillmentInbound_2024-03-20_ShippingConfiguration"][];
        };
        /**
         * @description Summary information about a packing option.
         * @example {
         *       "packingOptionId": "po1234abcd-1234-abcd-5678-1234abcd5678",
         *       "status": "OFFERED"
         *     }
         */
        "fulfillmentInbound_2024-03-20_PackingOptionSummary": {
            /** @description Identifier of a packing option. */
            packingOptionId: string;
            /** @description The status of a packing option. Possible values: 'OFFERED', 'ACCEPTED', 'EXPIRED'. */
            status: string;
        };
        /** @description Contains tokens to fetch from a certain page. */
        "fulfillmentInbound_2024-03-20_Pagination": {
            /** @description When present, pass this string token in the next request to return the next response page. */
            nextToken?: string;
        };
        /** @description Contains information about a pallet that is used in the inbound plan. The pallet is a container that holds multiple items or boxes. */
        "fulfillmentInbound_2024-03-20_Pallet": {
            dimensions?: components["schemas"]["fulfillmentInbound_2024-03-20_Dimensions"];
            /** @description Primary key to uniquely identify a Package (Box or Pallet). */
            packageId: string;
            /** @description The number of containers where all other properties like weight or dimensions are identical. */
            quantity?: number;
            stackability?: components["schemas"]["fulfillmentInbound_2024-03-20_Stackability"];
            weight?: components["schemas"]["fulfillmentInbound_2024-03-20_Weight"];
        };
        /**
         * @description Contains input information about a pallet to be used in the inbound plan.
         * @example {
         *       "dimensions": {
         *         "height": 5,
         *         "length": 3,
         *         "unitOfMeasurement": "CM",
         *         "width": 4
         *       },
         *       "quantity": 2,
         *       "stackability": "STACKABLE",
         *       "weight": {
         *         "unit": "KG",
         *         "value": 5.5
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_PalletInput": {
            dimensions?: components["schemas"]["fulfillmentInbound_2024-03-20_Dimensions"];
            /** @description The number of containers where all other properties like weight or dimensions are identical. */
            quantity: number;
            stackability?: components["schemas"]["fulfillmentInbound_2024-03-20_Stackability"];
            weight?: components["schemas"]["fulfillmentInbound_2024-03-20_Weight"];
        };
        /** @description Contains information pertaining to the placement of the contents of an inbound plan and the related costs. */
        "fulfillmentInbound_2024-03-20_PlacementOption": {
            /** @description Discount for the offered option. */
            discounts: components["schemas"]["fulfillmentInbound_2024-03-20_Incentive"][];
            /**
             * Format: date-time
             * @description The expiration date of the placement option. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
             */
            expiration?: string;
            /** @description The fee for the offered option. */
            fees: components["schemas"]["fulfillmentInbound_2024-03-20_Incentive"][];
            /** @description The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs. */
            placementOptionId: string;
            /** @description Shipment ids. */
            shipmentIds: string[];
            /** @description The status of a placement option. Possible values: `OFFERED`, `ACCEPTED`, `EXPIRED`. */
            status: string;
        };
        /**
         * @description Summary information about a placement option.
         * @example {
         *       "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
         *       "status": "ACCEPTED"
         *     }
         */
        "fulfillmentInbound_2024-03-20_PlacementOptionSummary": {
            /** @description The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs. */
            placementOptionId: string;
            /** @description The status of a placement option. Possible values: `OFFERED`, `ACCEPTED`. */
            status: string;
        };
        /**
         * @description The preparation category for shipping an item to Amazon's fulfillment network.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_PrepCategory": "ADULT" | "BABY" | "FC_PROVIDED" | "FRAGILE" | "GRANULAR" | "HANGER" | "LIQUID" | "PERFORATED" | "SET" | "SHARP" | "SMALL" | "TEXTILE" | "UNKNOWN" | "NONE";
        /** @description Information pertaining to the preparation of inbound goods. */
        "fulfillmentInbound_2024-03-20_PrepInstruction": {
            fee?: components["schemas"]["fulfillmentInbound_2024-03-20_Currency"];
            /** @description In some situations, special preparations are required for items and this field reflects the owner of the preparations. Options include `AMAZON`, `SELLER` or `NONE`. */
            prepOwner?: string;
            /** @description Type of preparation that should be done.
             *
             *     Possible values: `ITEM_LABELING`, `ITEM_BUBBLEWRAP`, `ITEM_POLYBAGGING`, `ITEM_TAPING`, `ITEM_BLACK_SHRINKWRAP`, `ITEM_HANG_GARMENT`, `ITEM_BOXING`, `ITEM_SETCREAT`, `ITEM_RMOVHANG`, `ITEM_SUFFOSTK`, `ITEM_CAP_SEALING`, `ITEM_DEBUNDLE`, `ITEM_SETSTK`, `ITEM_SIOC`, `ITEM_NO_PREP`, `ADULT`, `BABY`, `TEXTILE`, `HANGER`, `FRAGILE`, `LIQUID`, `SHARP`, `SMALL`, `PERFORATED`, `GRANULAR`, `SET`, `FC_PROVIDED`, `UNKNOWN`, `NONE`. */
            prepType?: string;
        };
        /**
         * @description The owner of the preparations, if special preparations are required.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_PrepOwner": "AMAZON" | "SELLER" | "NONE";
        /**
         * @description Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, refer to [Seller Central Help for your marketplace](https://developer-docs.amazon.com/sp-api/docs/seller-central-urls).
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_PrepType": "ITEM_BLACK_SHRINKWRAP" | "ITEM_BLANKSTK" | "ITEM_BOXING" | "ITEM_BUBBLEWRAP" | "ITEM_CAP_SEALING" | "ITEM_DEBUNDLE" | "ITEM_HANG_GARMENT" | "ITEM_LABELING" | "ITEM_NO_PREP" | "ITEM_POLYBAGGING" | "ITEM_RMOVHANG" | "ITEM_SETCREAT" | "ITEM_SETSTK" | "ITEM_SIOC" | "ITEM_SUFFOSTK" | "ITEM_TAPING";
        /** @description The estimated shipping cost associated with the transportation option. */
        "fulfillmentInbound_2024-03-20_Quote": {
            cost: components["schemas"]["fulfillmentInbound_2024-03-20_Currency"];
            /**
             * Format: date-time
             * @description The time at which this transportation option quote expires. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
             */
            expiration?: string;
            /**
             * Format: date-time
             * @description Voidable until timestamp.
             */
            voidableUntil?: string;
        };
        /**
         * @description Reason for cancelling or rescheduling a self-ship appointment.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_ReasonComment": "APPOINTMENT_REQUESTED_BY_MISTAKE" | "VEHICLE_DELAY" | "SLOT_NOT_SUITABLE" | "OUTSIDE_CARRIER_BUSINESS_HOURS" | "UNFAVOURABLE_EXTERNAL_CONDITIONS" | "PROCUREMENT_DELAY" | "SHIPPING_PLAN_CHANGED" | "INCREASED_QUANTITY" | "OTHER";
        /** @description Representation of a location used within the inbounding experience. */
        "fulfillmentInbound_2024-03-20_Region": {
            /** @description ISO 3166 standard alpha-2 country code. */
            countryCode?: string;
            /** @description State. */
            state?: string;
            /** @description An identifier for a warehouse, such as a FC, IXD, upstream storage. */
            warehouseId?: string;
        };
        /** @description Objects that were included in the update request. */
        "fulfillmentInbound_2024-03-20_RequestedUpdates": {
            /** @description A list of boxes that will be present in the shipment after the update. */
            boxes?: components["schemas"]["fulfillmentInbound_2024-03-20_BoxUpdateInput"][];
            /** @description A list of all items that will be present in the shipment after the update. */
            items?: components["schemas"]["fulfillmentInbound_2024-03-20_ItemInput"][];
        };
        /**
         * @description The `scheduleSelfShipAppointment` request.
         * @example {
         *       "reasonComment": "OTHER"
         *     }
         */
        "fulfillmentInbound_2024-03-20_ScheduleSelfShipAppointmentRequest": {
            reasonComment?: components["schemas"]["fulfillmentInbound_2024-03-20_ReasonComment"];
        };
        /**
         * @description The `scheduleSelfShipAppointment` response.
         * @example {
         *       "selfShipAppointmentDetails": {
         *         "appointmentId": 1000,
         *         "appointmentSlotTime": {
         *           "endTime": "2023-03-09T13:15:30Z",
         *           "startTime": "2023-03-08T13:15:30Z"
         *         },
         *         "appointmentStatus": "ARRIVAL_SCHEDULED"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_ScheduleSelfShipAppointmentResponse": {
            selfShipAppointmentDetails: components["schemas"]["fulfillmentInbound_2024-03-20_SelfShipAppointmentDetails"];
        };
        /**
         * @description Selected delivery window attributes.
         * @example {
         *       "availabilityType": "AVAILABLE",
         *       "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
         *       "editableUntil": "2024-01-05T20:00:00.000Z",
         *       "endDate": "2024-01-05T20:00:00.000Z",
         *       "startDate": "2024-01-05T14:00:00.000Z"
         *     }
         */
        "fulfillmentInbound_2024-03-20_SelectedDeliveryWindow": {
            /** @description Identifies type of Delivery Window Availability. Values: `AVAILABLE`, `CONGESTED` */
            availabilityType: string;
            /** @description Identifier of a delivery window option. A delivery window option represent one option for when a shipment is expected to be delivered. */
            deliveryWindowOptionId: string;
            /**
             * Format: date-time
             * @description The timestamp at which this Window can no longer be edited.
             */
            editableUntil?: string;
            /**
             * Format: date-time
             * @description The end timestamp of the window.
             */
            endDate: string;
            /**
             * Format: date-time
             * @description The start timestamp of the window.
             */
            startDate: string;
        };
        /** @description Appointment details for carrier pickup or fulfillment center appointments. */
        "fulfillmentInbound_2024-03-20_SelfShipAppointmentDetails": {
            /** @description Identifier for appointment. */
            appointmentId?: number;
            appointmentSlotTime?: components["schemas"]["fulfillmentInbound_2024-03-20_AppointmentSlotTime"];
            /** @description Status of the appointment. */
            appointmentStatus?: string;
        };
        /** @description The self ship appointment time slots availability and an expiration date for which the slots can be scheduled. */
        "fulfillmentInbound_2024-03-20_SelfShipAppointmentSlotsAvailability": {
            /**
             * Format: date-time
             * @description The time at which the self ship appointment slot expires. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format.
             */
            expiresAt?: string;
            /** @description A list of appointment slots. */
            slots?: components["schemas"]["fulfillmentInbound_2024-03-20_AppointmentSlot"][];
        };
        /**
         * @description The `setPackingInformation` request.
         * @example {
         *       "packageGroupings": [
         *         {
         *           "boxes": [
         *             {
         *               "contentInformationSource": "BOX_CONTENT_PROVIDED",
         *               "dimensions": {
         *                 "height": 5,
         *                 "length": 3,
         *                 "unitOfMeasurement": "CM",
         *                 "width": 4
         *               },
         *               "items": [
         *                 {
         *                   "expiration": "2024-01-01",
         *                   "labelOwner": "AMAZON",
         *                   "manufacturingLotCode": "manufacturingLotCode",
         *                   "msku": "Sunglasses",
         *                   "prepOwner": "AMAZON",
         *                   "quantity": 10
         *                 }
         *               ],
         *               "quantity": 2,
         *               "weight": {
         *                 "unit": "KG",
         *                 "value": 5.5
         *               }
         *             }
         *           ],
         *           "packingGroupId": "pg1234abcd-1234-abcd-5678-1234abcd5678",
         *           "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678"
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_SetPackingInformationRequest": {
            /** @description List of packing information for the inbound plan. */
            packageGroupings: components["schemas"]["fulfillmentInbound_2024-03-20_PackageGroupingInput"][];
        };
        /** @description The `setPackingInformation` response. */
        "fulfillmentInbound_2024-03-20_SetPackingInformationResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `setPrepDetails` request.
         * @example {
         *       "marketplaceId": "A2EUQ1WTGCTBG2",
         *       "mskuPrepDetails": [
         *         {
         *           "msku": "msku",
         *           "prepCategory": "NONE",
         *           "prepTypes": [
         *             "ITEM_NO_PREP"
         *           ]
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_SetPrepDetailsRequest": {
            /** @description The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
            marketplaceId: string;
            /** @description A list of MSKUs and related prep details. */
            mskuPrepDetails: components["schemas"]["fulfillmentInbound_2024-03-20_MskuPrepDetailInput"][];
        };
        /** @description The `setPrepDetails` response. */
        "fulfillmentInbound_2024-03-20_SetPrepDetailsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description Contains information pertaining to a shipment in an inbound plan.
         * @example {
         *       "destination": {
         *         "destinationType": "AMAZON_OPTIMIZED"
         *       },
         *       "freightInformation": {
         *         "declaredValue": {
         *           "amount": 5.5,
         *           "code": "CAD"
         *         },
         *         "freightClass": "FC_50"
         *       },
         *       "inboundPlanId": "wf1234abcd-1234-abcd-5678-1234abcd5678",
         *       "placementOptionId": "pl1234abcd-1234-abcd-5678-1234abcd5678",
         *       "selectedDeliveryWindow": {
         *         "availabilityType": "AVAILABLE",
         *         "deliveryWindowOptionId": "dw1234abcd-1234-abcd-5678-1234abcd5678",
         *         "editableUntil": "2024-01-05T20:00:00.000Z",
         *         "endDate": "2024-01-05T20:00:00.000Z",
         *         "startDate": "2024-01-05T14:00:00.000Z"
         *       },
         *       "shipmentConfirmationId": "shipmentConfirmationId",
         *       "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
         *       "source": {
         *         "sourceType": "SELLER_FACILITY"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_Shipment": {
            /** @description A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment. */
            amazonReferenceId?: string;
            contactInformation?: components["schemas"]["fulfillmentInbound_2024-03-20_ContactInformation"];
            dates?: components["schemas"]["fulfillmentInbound_2024-03-20_Dates"];
            destination: components["schemas"]["fulfillmentInbound_2024-03-20_ShipmentDestination"];
            freightInformation?: components["schemas"]["fulfillmentInbound_2024-03-20_FreightInformation"];
            /** @description The name of the shipment. */
            name?: string;
            /** @description The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs. */
            placementOptionId: string;
            selectedDeliveryWindow?: components["schemas"]["fulfillmentInbound_2024-03-20_SelectedDeliveryWindow"];
            /** @description Identifier of a transportation option. A transportation option represent one option for how to send a shipment. */
            selectedTransportationOptionId?: string;
            /** @description List of self ship appointment details. */
            selfShipAppointmentDetails?: components["schemas"]["fulfillmentInbound_2024-03-20_SelfShipAppointmentDetails"][];
            /** @description The confirmed shipment ID which shows up on labels (for example, `FBA1234ABCD`). */
            shipmentConfirmationId?: string;
            /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
            shipmentId: string;
            source: components["schemas"]["fulfillmentInbound_2024-03-20_ShipmentSource"];
            /** @description The status of a shipment. The state of the shipment will typically start as `UNCONFIRMED`, then transition to `WORKING` after a placement option has been confirmed, and then to `READY_TO_SHIP` once labels are generated.
             *
             *     Possible values: `ABANDONED`, `CANCELLED`, `CHECKED_IN`, `CLOSED`, `DELETED`, `DELIVERED`, `IN_TRANSIT`, `MIXED`, `READY_TO_SHIP`, `RECEIVING`, `SHIPPED`, `UNCONFIRMED`, `WORKING` */
            status?: string;
            trackingDetails?: components["schemas"]["fulfillmentInbound_2024-03-20_TrackingDetails"];
        };
        /** @description The Amazon fulfillment center address and warehouse ID. */
        "fulfillmentInbound_2024-03-20_ShipmentDestination": {
            address?: components["schemas"]["fulfillmentInbound_2024-03-20_Address"];
            /** @description The type of destination for this shipment. Possible values: `AMAZON_OPTIMIZED`, `AMAZON_WAREHOUSE`. */
            destinationType: string;
            /** @description The warehouse that the shipment should be sent to. This can be empty if the destination type is `AMAZON_OPTIMIZED`. */
            warehouseId?: string;
        };
        /** @description Specifies the 'ship from' address for the shipment. */
        "fulfillmentInbound_2024-03-20_ShipmentSource": {
            address?: components["schemas"]["fulfillmentInbound_2024-03-20_Address"];
            /** @description The type of source for this shipment. Possible values: `SELLER_FACILITY`. */
            sourceType: string;
        };
        /**
         * @description Summary information about a shipment.
         * @example {
         *       "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
         *       "status": "SHIPPED"
         *     }
         */
        "fulfillmentInbound_2024-03-20_ShipmentSummary": {
            /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
            shipmentId: string;
            /** @description The status of a shipment. The state of the shipment will typically start as `UNCONFIRMED`, then transition to `WORKING` after a placement option has been confirmed, and then to `READY_TO_SHIP` once labels are generated.
             *
             *     Possible values: `ABANDONED`, `CANCELLED`, `CHECKED_IN`, `CLOSED`, `DELETED`, `DELIVERED`, `IN_TRANSIT`, `MIXED`, `READY_TO_SHIP`, `RECEIVING`, `SHIPPED`, `UNCONFIRMED`, `WORKING` */
            status: string;
        };
        /** @description Details needed to generate the transportation options. */
        "fulfillmentInbound_2024-03-20_ShipmentTransportationConfiguration": {
            contactInformation?: components["schemas"]["fulfillmentInbound_2024-03-20_ContactInformation"];
            freightInformation?: components["schemas"]["fulfillmentInbound_2024-03-20_FreightInformation"];
            /** @description List of pallet configuration inputs. */
            pallets?: components["schemas"]["fulfillmentInbound_2024-03-20_PalletInput"][];
            readyToShipWindow: components["schemas"]["fulfillmentInbound_2024-03-20_WindowInput"];
            /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
            shipmentId: string;
        };
        /** @description The shipping configurations supported for the packing option. Available modes are ground small parcel, freight less-than-truckload (LTL), freight full-truckload (FTL) palletized, freight FTL non-palletized, ocean less-than-container-load (LCL), ocean full-container load (FCL), air small parcel, and air small parcel express. */
        "fulfillmentInbound_2024-03-20_ShippingConfiguration": {
            /** @description Mode of shipment transportation that this option will provide.
             *
             *     Possible values: `GROUND_SMALL_PARCEL`, `FREIGHT_LTL`, `FREIGHT_FTL_PALLET`, `FREIGHT_FTL_NONPALLET`, `OCEAN_LCL`, `OCEAN_FCL`, `AIR_SMALL_PARCEL`, `AIR_SMALL_PARCEL_EXPRESS`. */
            shippingMode?: string;
            /** @description Shipping program for the option. Possible values: `AMAZON_PARTNERED_CARRIER`, `USE_YOUR_OWN_CARRIER`. */
            shippingSolution?: string;
        };
        /** @description The possible shipping modes for the packing option for a given shipping solution or program. Available solutions are Amazon-Partnered Carrier and Use Your Own Carrier. Available modes are ground small parcel, freight less-than-truckload (LTL), freight full-truckload (FTL) palletized, freight FTL non-palletized, ocean less-than-container-load (LCL), ocean full-container load (FCL), air small parcel, and air small parcel express. */
        "fulfillmentInbound_2024-03-20_ShippingRequirements": {
            /** @description Available shipment modes for this shipping program. */
            modes: string[];
            /** @description Shipping program for the option. Can be: `AMAZON_PARTNERED_CARRIER`, `USE_YOUR_OWN_CARRIER`. */
            solution: string;
        };
        /** @description Contains information related to Small Parcel Delivery (SPD) shipment tracking. */
        "fulfillmentInbound_2024-03-20_SpdTrackingDetail": {
            /** @description List of Small Parcel Delivery (SPD) tracking items. */
            spdTrackingItems?: components["schemas"]["fulfillmentInbound_2024-03-20_SpdTrackingItem"][];
        };
        /**
         * @description Contains input information to update Small Parcel Delivery (SPD) tracking information.
         * @example {
         *       "spdTrackingItems": [
         *         {
         *           "boxId": "FBA10ABC0YY100001",
         *           "trackingId": "FBA10002000"
         *         }
         *       ]
         *     }
         */
        "fulfillmentInbound_2024-03-20_SpdTrackingDetailInput": {
            /** @description List of Small Parcel Delivery (SPD) tracking items input. */
            spdTrackingItems: components["schemas"]["fulfillmentInbound_2024-03-20_SpdTrackingItemInput"][];
        };
        /** @description Contains information used to track and identify a Small Parcel Delivery (SPD) item. */
        "fulfillmentInbound_2024-03-20_SpdTrackingItem": {
            /** @description The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box. */
            boxId?: string;
            /** @description The tracking ID associated with each box in a non-Amazon partnered Small Parcel Delivery (SPD) shipment. */
            trackingId?: string;
            /** @description Indicates whether Amazon has validated the tracking number. Because shipment validation is asynchronous, tracking IDs might not be validated immediately, and the status might change after a few hours. If more than 24 hours have passed and the status is not yet 'VALIDATED' or `NOT_SUPPORTED`, verify the number and update it if necessary. **Possible values:** `VALIDATED`, `NOT_VALIDATED`, `NOT_SUPPORTED` (Amazon is unable to find tracking information for the provided tracking ID). */
            trackingNumberValidationStatus?: string;
        };
        /**
         * @description Small Parcel Delivery (SPD) tracking items input information.
         * @example {
         *       "boxId": "FBA10ABC0YY100001",
         *       "trackingId": "FBA10002000"
         *     }
         */
        "fulfillmentInbound_2024-03-20_SpdTrackingItemInput": {
            /** @description The ID provided by Amazon that identifies a given box. This ID is comprised of the external shipment ID (which is generated after transportation has been confirmed) and the index of the box. */
            boxId: string;
            /** @description The tracking Id associated with each box in a non-Amazon partnered Small Parcel Delivery (SPD) shipment. The seller must provide this information. */
            trackingId: string;
        };
        /**
         * @description Indicates whether pallets will be stacked when carrier arrives for pick-up.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_Stackability": "STACKABLE" | "NON_STACKABLE";
        /** @description Information used to determine the tax compliance. */
        "fulfillmentInbound_2024-03-20_TaxDetails": {
            declaredValue?: components["schemas"]["fulfillmentInbound_2024-03-20_Currency"];
            /** @description Harmonized System of Nomenclature code. */
            hsnCode?: string;
            /** @description List of tax rates. */
            taxRates?: components["schemas"]["fulfillmentInbound_2024-03-20_TaxRate"][];
        };
        /** @description Contains the type and rate of tax. */
        "fulfillmentInbound_2024-03-20_TaxRate": {
            /** @description Rate of cess tax. */
            cessRate?: number;
            /** @description Rate of gst tax. */
            gstRate?: number;
            /** @description Type of tax. Possible values: `CGST`, `SGST`, `IGST`, `TOTAL_TAX`. */
            taxType?: string;
        };
        /** @description Tracking information for Less-Than-Truckload (LTL) and Small Parcel Delivery (SPD) shipments. */
        "fulfillmentInbound_2024-03-20_TrackingDetails": {
            ltlTrackingDetail?: components["schemas"]["fulfillmentInbound_2024-03-20_LtlTrackingDetail"];
            spdTrackingDetail?: components["schemas"]["fulfillmentInbound_2024-03-20_SpdTrackingDetail"];
        };
        /**
         * @description Tracking information input for Less-Than-Truckload (LTL) and Small Parcel Delivery (SPD) shipments.
         * @example {
         *       "ltlTrackingDetail": {
         *         "billOfLadingNumber": "billOfLadingNumber",
         *         "freightBillNumber": [
         *           "freightBillNumber1"
         *         ]
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_TrackingDetailsInput": {
            ltlTrackingDetail?: components["schemas"]["fulfillmentInbound_2024-03-20_LtlTrackingDetailInput"];
            spdTrackingDetail?: components["schemas"]["fulfillmentInbound_2024-03-20_SpdTrackingDetailInput"];
        };
        /**
         * @description Contains information pertaining to a transportation option and the related carrier.
         * @example {
         *       "carrier": {
         *         "alphaCode": "ABCD",
         *         "name": "Carrier Name"
         *       },
         *       "carrierAppointment": {
         *         "endTime": "2024-01-06T14:48:00.000Z",
         *         "startTime": "2024-01-05T14:48:00.000Z"
         *       },
         *       "preconditions": [
         *         "CONFIRMED_DELIVERY_WINDOW"
         *       ],
         *       "quote": {
         *         "cost": {
         *           "amount": 5.5,
         *           "code": "CAD"
         *         },
         *         "expiration": "2024-01-06T14:48:00.000Z",
         *         "voidableUntil": "2024-01-05T14:48:00.000Z"
         *       },
         *       "shipmentId": "sh1234abcd-1234-abcd-5678-1234abcd5678",
         *       "shippingMode": "GROUND_SMALL_PARCEL",
         *       "shippingSolution": "AMAZON_PARTNERED_CARRIER",
         *       "transportationOptionId": "to1234abcd-1234-abcd-5678-1234abcd5678"
         *     }
         */
        "fulfillmentInbound_2024-03-20_TransportationOption": {
            carrier: components["schemas"]["fulfillmentInbound_2024-03-20_Carrier"];
            carrierAppointment?: components["schemas"]["fulfillmentInbound_2024-03-20_CarrierAppointment"];
            /** @description Identifies a list of preconditions for confirming the transportation option. */
            preconditions: string[];
            quote?: components["schemas"]["fulfillmentInbound_2024-03-20_Quote"];
            /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
            shipmentId: string;
            /** @description Mode of shipment transportation that this option will provide.
             *
             *     Possible values: `GROUND_SMALL_PARCEL`, `FREIGHT_LTL`, `FREIGHT_FTL_PALLET`, `FREIGHT_FTL_NONPALLET`, `OCEAN_LCL`, `OCEAN_FCL`, `AIR_SMALL_PARCEL`, `AIR_SMALL_PARCEL_EXPRESS`. */
            shippingMode: string;
            /** @description Shipping program for the option. Possible values: `AMAZON_PARTNERED_CARRIER`, `USE_YOUR_OWN_CARRIER`. */
            shippingSolution: string;
            /** @description Identifier of a transportation option. A transportation option represent one option for how to send a shipment. */
            transportationOptionId: string;
        };
        /** @description The transportation option selected to confirm. */
        "fulfillmentInbound_2024-03-20_TransportationSelection": {
            contactInformation?: components["schemas"]["fulfillmentInbound_2024-03-20_ContactInformation"];
            /** @description Shipment ID that the transportation Option is for. */
            shipmentId: string;
            /** @description Transportation option being selected for the provided shipment. */
            transportationOptionId: string;
        };
        /**
         * @description Unit of linear measure.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_UnitOfMeasurement": "IN" | "CM";
        /**
         * @description Unit of the weight being measured.
         * @enum {string}
         */
        "fulfillmentInbound_2024-03-20_UnitOfWeight": "LB" | "KG";
        /**
         * @description The `updateInboundPlanName` request.
         * @example {
         *       "name": "name"
         *     }
         */
        "fulfillmentInbound_2024-03-20_UpdateInboundPlanNameRequest": {
            /** @description A human-readable name to update the inbound plan name to. */
            name: string;
        };
        /**
         * @description The `updateItemComplianceDetails` request.
         * @example {
         *       "msku": "Sunglasses",
         *       "taxDetails": {
         *         "declaredValue": {
         *           "amount": 5.5,
         *           "code": "CAD"
         *         },
         *         "hsnCode": "hsnCode"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_UpdateItemComplianceDetailsRequest": {
            /** @description The merchant SKU, a merchant-supplied identifier for a specific SKU. */
            msku: string;
            taxDetails: components["schemas"]["fulfillmentInbound_2024-03-20_TaxDetails"];
        };
        /** @description The `updateItemComplianceDetails` response. */
        "fulfillmentInbound_2024-03-20_UpdateItemComplianceDetailsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `updateShipmentName` request.
         * @example {
         *       "name": "name"
         *     }
         */
        "fulfillmentInbound_2024-03-20_UpdateShipmentNameRequest": {
            /** @description A human-readable name to update the shipment name to. */
            name: string;
        };
        /**
         * @description The `UpdateShipmentSourceAddress` request.
         * @example {
         *       "address": {
         *         "addressLine1": "123 example street",
         *         "addressLine2": "Floor 19",
         *         "city": "Toronto",
         *         "companyName": "Acme",
         *         "countryCode": "CA",
         *         "email": "email@email.com",
         *         "name": "name",
         *         "phoneNumber": "1234567890",
         *         "postalCode": "M1M1M1",
         *         "stateOrProvinceCode": "ON"
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_UpdateShipmentSourceAddressRequest": {
            address: components["schemas"]["fulfillmentInbound_2024-03-20_AddressInput"];
        };
        /** @description The `UpdateShipmentSourceAddress` response. */
        "fulfillmentInbound_2024-03-20_UpdateShipmentSourceAddressResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /**
         * @description The `updateShipmentTrackingDetails` request.
         * @example {
         *       "trackingDetails": {
         *         "spdTrackingDetail": {
         *           "spdTrackingItems": [
         *             {
         *               "boxId": "FBA10ABC0YY100001",
         *               "trackingId": "FBA10002000"
         *             }
         *           ]
         *         }
         *       }
         *     }
         */
        "fulfillmentInbound_2024-03-20_UpdateShipmentTrackingDetailsRequest": {
            trackingDetails: components["schemas"]["fulfillmentInbound_2024-03-20_TrackingDetailsInput"];
        };
        /** @description The `updateShipmentTrackingDetails` response. */
        "fulfillmentInbound_2024-03-20_UpdateShipmentTrackingDetailsResponse": {
            /** @description UUID for the given operation. */
            operationId: string;
        };
        /** @description The weight of a package. */
        "fulfillmentInbound_2024-03-20_Weight": {
            unit: components["schemas"]["fulfillmentInbound_2024-03-20_UnitOfWeight"];
            /** @description Value of a weight. */
            value: number;
        };
        /** @description The range of weights that are allowed for a package. */
        "fulfillmentInbound_2024-03-20_WeightRange": {
            /** @description Maximum allowed weight. */
            maximum: number;
            /** @description Minimum allowed weight. */
            minimum: number;
            unit: components["schemas"]["fulfillmentInbound_2024-03-20_UnitOfWeight"];
        };
        /**
         * @description Contains a start and end DateTime representing a time range.
         * @example {
         *       "editableUntil": "2024-01-05T20:00:00.000Z",
         *       "end": "2024-01-05T20:00:00.000Z",
         *       "start": "2024-01-05T14:00:00.000Z"
         *     }
         */
        "fulfillmentInbound_2024-03-20_Window": {
            /**
             * Format: date-time
             * @description The timestamp at which this Window can no longer be edited.
             */
            editableUntil?: string;
            /**
             * Format: date-time
             * @description The end timestamp of the window.
             */
            end: string;
            /**
             * Format: date-time
             * @description The start timestamp of the window.
             */
            start: string;
        };
        /** @description Contains only a starting DateTime. */
        "fulfillmentInbound_2024-03-20_WindowInput": {
            /**
             * Format: date-time
             * @description The start date of the window. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with minute precision. Supports patterns `yyyy-MM-ddTHH:mmZ`, `yyyy-MM-ddTHH:mm:ssZ`, or `yyyy-MM-ddTHH:mm:ss.sssZ`. Note that non-zero second and millisecond components are removed.
             */
            start: string;
        };
        /** @description Specific details to identify a place. */
        fulfillmentInboundV0_Address: {
            /** @description The street address information. */
            AddressLine1: string;
            /** @description Additional street address information, if required. */
            AddressLine2?: string;
            /** @description The city. */
            City: string;
            /** @description The country code in two-character ISO 3166-1 alpha-2 format. */
            CountryCode: string;
            /** @description The district or county. */
            DistrictOrCounty?: string;
            /** @description Name of the individual or business. */
            Name: string;
            /** @description The postal code.
             *
             *     If postal codes are used in your marketplace, we recommended that you include one with your request. This helps Amazon select the most appropriate Amazon fulfillment center for the inbound shipment plan. */
            PostalCode: string;
            /** @description The state or province code.
             *
             *     If state or province codes are used in your marketplace, it is recommended that you include one with your request. This helps Amazon to select the most appropriate Amazon fulfillment center for your inbound shipment plan. */
            StateOrProvinceCode: string;
        };
        /** @description The fees for Amazon to prep goods for shipment. */
        fulfillmentInboundV0_AmazonPrepFeesDetails: {
            FeePerUnit?: components["schemas"]["fulfillmentInboundV0_Amount"];
            PrepInstruction?: components["schemas"]["fulfillmentInboundV0_PrepInstruction"];
        };
        /** @description A list of preparation instructions and fees for Amazon to prep goods for shipment. */
        fulfillmentInboundV0_AmazonPrepFeesDetailsList: components["schemas"]["fulfillmentInboundV0_AmazonPrepFeesDetails"][];
        /** @description The monetary value. */
        fulfillmentInboundV0_Amount: {
            CurrencyCode: components["schemas"]["fulfillmentInboundV0_CurrencyCode"];
            Value: components["schemas"]["fulfillmentInboundV0_BigDecimalType"];
        };
        /** @description Item preparation instructions to help with item sourcing decisions. */
        fulfillmentInboundV0_ASINPrepInstructions: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            BarcodeInstruction?: components["schemas"]["fulfillmentInboundV0_BarcodeInstruction"];
            PrepGuidance?: components["schemas"]["fulfillmentInboundV0_PrepGuidance"];
            PrepInstructionList?: components["schemas"]["fulfillmentInboundV0_PrepInstructionList"];
        };
        /** @description A list of item preparation instructions. */
        fulfillmentInboundV0_ASINPrepInstructionsList: components["schemas"]["fulfillmentInboundV0_ASINPrepInstructions"][];
        /**
         * @description Labeling requirements for the item. For more information about FBA labeling requirements, see the Seller Central Help for your marketplace.
         * @enum {string}
         */
        fulfillmentInboundV0_BarcodeInstruction: "RequiresFNSKULabel" | "CanUseOriginalBarcode" | "MustProvideSellerSKU";
        /**
         * Format: double
         * @description Number format that supports decimal.
         */
        fulfillmentInboundV0_BigDecimalType: number;
        /** @description Download URL for the bill of lading. */
        fulfillmentInboundV0_BillOfLadingDownloadURL: {
            /** @description URL to download the bill of lading for the package. Note: The URL will only be valid for 15 seconds */
            DownloadURL?: string;
        };
        /** @description The manual processing fee per unit and total fee for a shipment. */
        fulfillmentInboundV0_BoxContentsFeeDetails: {
            FeePerUnit?: components["schemas"]["fulfillmentInboundV0_Amount"];
            TotalFee?: components["schemas"]["fulfillmentInboundV0_Amount"];
            TotalUnits?: components["schemas"]["fulfillmentInboundV0_Quantity"];
        };
        /**
         * @description Where the seller provided box contents information for a shipment.
         * @enum {string}
         */
        fulfillmentInboundV0_BoxContentsSource: "NONE" | "FEED" | "2D_BARCODE" | "INTERACTIVE";
        /**
         * @description The currency code.
         * @enum {string}
         */
        fulfillmentInboundV0_CurrencyCode: "USD" | "GBP";
        /**
         * Format: date
         * @description Type containing date in string format
         */
        fulfillmentInboundV0_DateStringType: string;
        /** @description Error response returned when the request is unsuccessful. */
        fulfillmentInboundV0_Error: {
            /** @description An error code that identifies the type of error that occured. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        fulfillmentInboundV0_ErrorList: components["schemas"]["fulfillmentInboundV0_Error"][];
        /**
         * @description The reason that the ASIN is invalid.
         * @enum {string}
         */
        fulfillmentInboundV0_ErrorReason: "DoesNotExist" | "InvalidASIN";
        /** @description The response schema for the getBillOfLading operation. */
        fulfillmentInboundV0_GetBillOfLadingResponse: {
            errors?: components["schemas"]["fulfillmentInboundV0_ErrorList"];
            payload?: components["schemas"]["fulfillmentInboundV0_BillOfLadingDownloadURL"];
        };
        /** @description The response schema for the getLabels operation. */
        fulfillmentInboundV0_GetLabelsResponse: {
            errors?: components["schemas"]["fulfillmentInboundV0_ErrorList"];
            payload?: components["schemas"]["fulfillmentInboundV0_LabelDownloadURL"];
        };
        /** @description The response schema for the getPrepInstructions operation. */
        fulfillmentInboundV0_GetPrepInstructionsResponse: {
            errors?: components["schemas"]["fulfillmentInboundV0_ErrorList"];
            payload?: components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResult"];
        };
        /** @description Result for the get prep instructions operation */
        fulfillmentInboundV0_GetPrepInstructionsResult: {
            ASINPrepInstructionsList?: components["schemas"]["fulfillmentInboundV0_ASINPrepInstructionsList"];
            InvalidASINList?: components["schemas"]["fulfillmentInboundV0_InvalidASINList"];
            InvalidSKUList?: components["schemas"]["fulfillmentInboundV0_InvalidSKUList"];
            SKUPrepInstructionsList?: components["schemas"]["fulfillmentInboundV0_SKUPrepInstructionsList"];
        };
        /** @description The response schema for the getShipmentItems operation. */
        fulfillmentInboundV0_GetShipmentItemsResponse: {
            errors?: components["schemas"]["fulfillmentInboundV0_ErrorList"];
            payload?: components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResult"];
        };
        /** @description Result for the get shipment items operation */
        fulfillmentInboundV0_GetShipmentItemsResult: {
            ItemData?: components["schemas"]["fulfillmentInboundV0_InboundShipmentItemList"];
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
        };
        /** @description The response schema for the getShipments operation. */
        fulfillmentInboundV0_GetShipmentsResponse: {
            errors?: components["schemas"]["fulfillmentInboundV0_ErrorList"];
            payload?: components["schemas"]["fulfillmentInboundV0_GetShipmentsResult"];
        };
        /** @description Result for the get shipments operation */
        fulfillmentInboundV0_GetShipmentsResult: {
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
            ShipmentData?: components["schemas"]["fulfillmentInboundV0_InboundShipmentList"];
        };
        /** @description Information about the seller's inbound shipments. Returned by the listInboundShipments operation. */
        fulfillmentInboundV0_InboundShipmentInfo: {
            /** @description Indicates whether or not an inbound shipment contains case-packed boxes. When AreCasesRequired = true for an inbound shipment, all items in the inbound shipment must be case packed. */
            AreCasesRequired: boolean;
            BoxContentsSource?: components["schemas"]["fulfillmentInboundV0_BoxContentsSource"];
            ConfirmedNeedByDate?: components["schemas"]["fulfillmentInboundV0_DateStringType"];
            /** @description An Amazon fulfillment center identifier created by Amazon. */
            DestinationFulfillmentCenterId?: string;
            EstimatedBoxContentsFee?: components["schemas"]["fulfillmentInboundV0_BoxContentsFeeDetails"];
            LabelPrepType?: components["schemas"]["fulfillmentInboundV0_LabelPrepType"];
            ShipFromAddress: components["schemas"]["fulfillmentInboundV0_Address"];
            /** @description The shipment identifier submitted in the request. */
            ShipmentId?: string;
            /** @description The name for the inbound shipment. */
            ShipmentName?: string;
            ShipmentStatus?: components["schemas"]["fulfillmentInboundV0_ShipmentStatus"];
        };
        /** @description Item information for an inbound shipment. Submitted with a call to the createInboundShipment or updateInboundShipment operation. */
        fulfillmentInboundV0_InboundShipmentItem: {
            /** @description Amazon's fulfillment network SKU of the item. */
            FulfillmentNetworkSKU?: string;
            PrepDetailsList?: components["schemas"]["fulfillmentInboundV0_PrepDetailsList"];
            QuantityInCase?: components["schemas"]["fulfillmentInboundV0_Quantity"];
            QuantityReceived?: components["schemas"]["fulfillmentInboundV0_Quantity"];
            QuantityShipped: components["schemas"]["fulfillmentInboundV0_Quantity"];
            ReleaseDate?: components["schemas"]["fulfillmentInboundV0_DateStringType"];
            /** @description The seller SKU of the item. */
            SellerSKU: string;
            /** @description A shipment identifier originally returned by the createInboundShipmentPlan operation. */
            ShipmentId?: string;
        };
        /** @description A list of inbound shipment item information. */
        fulfillmentInboundV0_InboundShipmentItemList: components["schemas"]["fulfillmentInboundV0_InboundShipmentItem"][];
        /** @description A list of inbound shipment information. */
        fulfillmentInboundV0_InboundShipmentList: components["schemas"]["fulfillmentInboundV0_InboundShipmentInfo"][];
        /** @description Contains details about an invalid ASIN */
        fulfillmentInboundV0_InvalidASIN: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            ErrorReason?: components["schemas"]["fulfillmentInboundV0_ErrorReason"];
        };
        /** @description A list of invalid ASIN values and the reasons they are invalid. */
        fulfillmentInboundV0_InvalidASINList: components["schemas"]["fulfillmentInboundV0_InvalidASIN"][];
        /** @description Contains detail about an invalid SKU */
        fulfillmentInboundV0_InvalidSKU: {
            ErrorReason?: components["schemas"]["fulfillmentInboundV0_ErrorReason"];
            /** @description The seller SKU of the item. */
            SellerSKU?: string;
        };
        /** @description A list of invalid SKU values and the reason they are invalid. */
        fulfillmentInboundV0_InvalidSKUList: components["schemas"]["fulfillmentInboundV0_InvalidSKU"][];
        /** @description Download URL for a label */
        fulfillmentInboundV0_LabelDownloadURL: {
            /** @description URL to download the label for the package. Note: The URL will only be valid for 15 seconds */
            DownloadURL?: string;
        };
        /**
         * @description The type of label preparation that is required for the inbound shipment.
         * @enum {string}
         */
        fulfillmentInboundV0_LabelPrepType: "NO_LABEL" | "SELLER_LABEL" | "AMAZON_LABEL";
        /** @description Preparation instructions and who is responsible for the preparation. */
        fulfillmentInboundV0_PrepDetails: {
            PrepInstruction: components["schemas"]["fulfillmentInboundV0_PrepInstruction"];
            PrepOwner: components["schemas"]["fulfillmentInboundV0_PrepOwner"];
        };
        /** @description A list of preparation instructions and who is responsible for that preparation. */
        fulfillmentInboundV0_PrepDetailsList: components["schemas"]["fulfillmentInboundV0_PrepDetails"][];
        /**
         * @description Item preparation instructions.
         * @enum {string}
         */
        fulfillmentInboundV0_PrepGuidance: "ConsultHelpDocuments" | "NoAdditionalPrepRequired" | "SeePrepInstructionsList";
        /**
         * @description Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, see the Seller Central Help for your marketplace.
         * @enum {string}
         */
        fulfillmentInboundV0_PrepInstruction: "Polybagging" | "BubbleWrapping" | "Taping" | "BlackShrinkWrapping" | "Labeling" | "HangGarment" | "SetCreation" | "Boxing" | "RemoveFromHanger" | "Debundle" | "SuffocationStickering" | "CapSealing" | "SetStickering" | "BlankStickering" | "ShipsInProductPackaging" | "NoPrep";
        /** @description A list of preparation instructions to help with item sourcing decisions. */
        fulfillmentInboundV0_PrepInstructionList: components["schemas"]["fulfillmentInboundV0_PrepInstruction"][];
        /**
         * @description Indicates who will prepare the item.
         * @enum {string}
         */
        fulfillmentInboundV0_PrepOwner: "AMAZON" | "SELLER";
        /**
         * Format: int32
         * @description The item quantity.
         */
        fulfillmentInboundV0_Quantity: number;
        /**
         * @description Indicates the status of the inbound shipment. When used with the createInboundShipment operation, WORKING is the only valid value. When used with the updateInboundShipment operation, possible values are WORKING, SHIPPED or CANCELLED.
         * @enum {string}
         */
        fulfillmentInboundV0_ShipmentStatus: "WORKING" | "SHIPPED" | "RECEIVING" | "CANCELLED" | "DELETED" | "CLOSED" | "ERROR" | "IN_TRANSIT" | "DELIVERED" | "CHECKED_IN";
        /** @description Labeling requirements and item preparation instructions to help you prepare items for shipment to Amazon's fulfillment network. */
        fulfillmentInboundV0_SKUPrepInstructions: {
            AmazonPrepFeesDetailsList?: components["schemas"]["fulfillmentInboundV0_AmazonPrepFeesDetailsList"];
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            BarcodeInstruction?: components["schemas"]["fulfillmentInboundV0_BarcodeInstruction"];
            PrepGuidance?: components["schemas"]["fulfillmentInboundV0_PrepGuidance"];
            PrepInstructionList?: components["schemas"]["fulfillmentInboundV0_PrepInstructionList"];
            /** @description The seller SKU of the item. */
            SellerSKU?: string;
        };
        /** @description A list of SKU labeling requirements and item preparation instructions. */
        fulfillmentInboundV0_SKUPrepInstructionsList: components["schemas"]["fulfillmentInboundV0_SKUPrepInstructions"][];
        /**
         * @description Additional location information.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_AdditionalLocationInfo": "AS_INSTRUCTED" | "CARPORT" | "CUSTOMER_PICKUP" | "DECK" | "DOOR_PERSON" | "FRONT_DESK" | "FRONT_DOOR" | "GARAGE" | "GUARD" | "MAIL_ROOM" | "MAIL_SLOT" | "MAILBOX" | "MC_BOY" | "MC_GIRL" | "MC_MAN" | "MC_WOMAN" | "NEIGHBOR" | "OFFICE" | "OUTBUILDING" | "PATIO" | "PORCH" | "REAR_DOOR" | "RECEPTIONIST" | "RECEIVER" | "SECURE_LOCATION" | "SIDE_DOOR";
        /** @description A physical address. */
        "fulfillmentOutbound_2020-07-01_Address": {
            /** @description The first line of the address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business, or institution is located. This property is required in all countries except Japan. It should not be used in Japan. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The district or county where the person, business, or institution is located. */
            districtOrCounty?: string;
            /** @description The name of the person, business or institution at the address. */
            name: string;
            /** @description The phone number of the person, business, or institution located at the address. */
            phone?: string;
            /** @description The postal code of the address. */
            postalCode: string;
            /** @description The state or region where the person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description A quantity based on unit of measure. */
        "fulfillmentOutbound_2020-07-01_Amount": {
            /**
             * @description The unit of measure for the amount.
             * @enum {string}
             */
            unitOfMeasure: "Eaches";
            value: components["schemas"]["fulfillmentOutbound_2020-07-01_Decimal"];
        };
        /** @description The response schema for the `cancelFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
        };
        /** @description The COD (Cash On Delivery) charges that you associate with a COD fulfillment order. */
        "fulfillmentOutbound_2020-07-01_CODSettings": {
            codCharge?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            codChargeTax?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            /** @description When true, this fulfillment order requires a COD (Cash On Delivery) payment. */
            isCodRequired: boolean;
            shippingCharge?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            shippingChargeTax?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
        };
        /** @description Item information for creating a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderItem": {
            /** @description Item-specific text that displays in recipient-facing materials such as the outbound shipment packing slip. */
            displayableComment?: string;
            /** @description Amazon's fulfillment network SKU of the item. */
            fulfillmentNetworkSku?: string;
            /** @description A message to the gift recipient, if applicable. */
            giftMessage?: string;
            perUnitDeclaredValue?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitPrice?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitTax?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description A fulfillment order item identifier that the seller creates to track fulfillment order items. Used to disambiguate multiple fulfillment items that have the same `sellerSku` value. For example, the seller might assign different `sellerFulfillmentOrderItemId` values to two items in a fulfillment order that share the same `sellerSku` value but have different `giftMessage` values. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
        };
        /** @description An array of item information for creating a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderItem"][];
        /** @description The request body schema for the `createFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderRequest": {
            codSettings?: components["schemas"]["fulfillmentOutbound_2020-07-01_CODSettings"];
            deliveryPreferences?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryPreferences"];
            deliveryWindow?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryWindow"];
            destinationAddress: components["schemas"]["fulfillmentOutbound_2020-07-01_Address"];
            /** @description Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip. */
            displayableOrderComment: string;
            displayableOrderDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `displayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the SellerFulfillmentOrderId for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.
             *
             *     The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed. */
            displayableOrderId: string;
            /** @description A list of features and their fulfillment policies to apply to the order. */
            featureConstraints?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSettings"][];
            fulfillmentAction?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentAction"];
            fulfillmentPolicy?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPolicy"];
            items: components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderItemList"];
            /** @description The marketplace the fulfillment order is placed against. */
            marketplaceId?: string;
            notificationEmails?: components["schemas"]["fulfillmentOutbound_2020-07-01_NotificationEmailList"];
            paymentInformation?: components["schemas"]["fulfillmentOutbound_2020-07-01_PaymentInformationList"];
            /** @description A fulfillment order identifier that the seller creates to track their fulfillment order. The `sellerFulfillmentOrderId` must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use. */
            sellerFulfillmentOrderId: string;
            /** @description The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format. */
            shipFromCountryCode?: string;
            shippingSpeedCategory: components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategory"];
        };
        /** @description The response schema for the `createFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
        };
        /** @description The `createFulfillmentReturn` operation creates a fulfillment return for items that were fulfilled using the `createFulfillmentOrder` operation. For calls to `createFulfillmentReturn`, you must include `returnReasonCode` values returned by a previous call to the `listReturnReasonCodes` operation. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnRequest": {
            items: components["schemas"]["fulfillmentOutbound_2020-07-01_CreateReturnItemList"];
        };
        /** @description The response schema for the `createFulfillmentReturn` operation. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResult"];
        };
        /** @description The result for the `createFulfillmentReturn` operation. */
        "fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResult": {
            invalidReturnItems?: components["schemas"]["fulfillmentOutbound_2020-07-01_InvalidReturnItemList"];
            returnAuthorizations?: components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnAuthorizationList"];
            returnItems?: components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnItemList"];
        };
        /** @description An item that Amazon accepted for return. */
        "fulfillmentOutbound_2020-07-01_CreateReturnItem": {
            /** @description The identifier for the shipment that is associated with the return item. */
            amazonShipmentId: string;
            /** @description An optional comment about the return item. */
            returnComment?: string;
            /** @description The return reason code assigned to the return item by the seller. */
            returnReasonCode: string;
            /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
            sellerFulfillmentOrderItemId: string;
            /** @description An identifier the seller assigns to the return item. */
            sellerReturnItemId: string;
        };
        /** @description An array of items to be returned. */
        "fulfillmentOutbound_2020-07-01_CreateReturnItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateReturnItem"][];
        /**
         * @description The current delivery status of the package.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_CurrentStatus": "IN_TRANSIT" | "DELIVERED" | "RETURNING" | "RETURNED" | "UNDELIVERABLE" | "DELAYED" | "AVAILABLE_FOR_PICKUP" | "CUSTOMER_ACTION" | "UNKNOWN" | "OUT_FOR_DELIVERY" | "DELIVERY_ATTEMPTED" | "PICKUP_SUCCESSFUL" | "PICKUP_CANCELLED" | "PICKUP_ATTEMPTED" | "PICKUP_SCHEDULED" | "RETURN_REQUEST_ACCEPTED" | "REFUND_ISSUED" | "RETURN_RECEIVED_IN_FC";
        /** @description The time range within which something (for example, a delivery) will occur. */
        "fulfillmentOutbound_2020-07-01_DateRange": {
            earliest: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            latest: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. */
        "fulfillmentOutbound_2020-07-01_Decimal": string;
        /** @description A delivery document for a package. */
        "fulfillmentOutbound_2020-07-01_DeliveryDocument": {
            /** @description The delivery document type. The only possible value is `DELIVERY_IMAGE`. */
            documentType: string;
            /** @description A URL that you can use to download the document. This URL has a `Content-Type` header. Note that the URL expires after one hour. To get a new URL, you must call the API again. */
            url?: string;
        };
        /** @description A list of delivery documents for a package. */
        "fulfillmentOutbound_2020-07-01_DeliveryDocumentList": components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryDocument"][];
        /** @description The delivery information for the package. This information is available after the package is delivered. */
        "fulfillmentOutbound_2020-07-01_DeliveryInformation": {
            deliveryDocumentList?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryDocumentList"];
            dropOffLocation?: components["schemas"]["fulfillmentOutbound_2020-07-01_DropOffLocation"];
        };
        /** @description Localized messaging for a delivery offering. */
        "fulfillmentOutbound_2020-07-01_DeliveryMessage": {
            /** @description The locale for the message (e.g., `en_US`). */
            locale?: string;
            /** @description The message content for a delivery offering. */
            text?: string;
        };
        /** @description An available offer for delivery of a product. */
        "fulfillmentOutbound_2020-07-01_DeliveryOffer": {
            dateRange?: components["schemas"]["fulfillmentOutbound_2020-07-01_DateRange"];
            expiresAt?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            policy?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryPolicy"];
        };
        /** @description An array of delivery offer information. */
        "fulfillmentOutbound_2020-07-01_DeliveryOffersList": components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryOffer"][];
        /** @description The policy for a delivery offering. */
        "fulfillmentOutbound_2020-07-01_DeliveryPolicy": {
            message?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryMessage"];
        };
        /** @description The delivery preferences applied to the destination address. These preferences are applied when possible and are best effort.
         *     This feature is currently supported only in the JP marketplace and not applicable for other marketplaces.
         *     For eligible orders, the default delivery preference will be to deliver the package unattended at the front door, unless you specify otherwise. */
        "fulfillmentOutbound_2020-07-01_DeliveryPreferences": {
            /** @description Additional delivery instructions. For example, this could be instructions on how to enter a building, nearby landmark or navigation instructions, 'Beware of dogs', etc. */
            deliveryInstructions?: string;
            dropOffLocation?: components["schemas"]["fulfillmentOutbound_2020-07-01_DropOffLocation"];
        };
        /** @description The time range within which a Scheduled Delivery fulfillment order should be delivered. This is only available in the JP marketplace. */
        "fulfillmentOutbound_2020-07-01_DeliveryWindow": {
            endDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            startDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
        };
        /** @description An array of delivery windows. */
        "fulfillmentOutbound_2020-07-01_DeliveryWindowList": components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryWindow"][];
        /** @description The destination for the delivery offer. */
        "fulfillmentOutbound_2020-07-01_Destination": {
            deliveryAddress?: components["schemas"]["fulfillmentOutbound_2020-07-01_VariablePrecisionAddress"];
            ipAddress?: components["schemas"]["fulfillmentOutbound_2020-07-01_IpAddress"];
        };
        /** @description The preferred location to leave packages at the destination address. */
        "fulfillmentOutbound_2020-07-01_DropOffLocation": {
            /** @description Additional information about the drop-off location that can vary depending on the type of drop-off location specified in the `type` field.
             *     If the `type` is set to `FALLBACK_NEIGHBOR_DELIVERY`, the `attributes` object should include the exact keys `neighborName` and `houseNumber` to provide the name and house number of the designated neighbor. */
            attributes?: {
                [key: string]: string;
            };
            /**
             * @description Specifies the preferred location to leave the package at the destination address.
             * @enum {string}
             */
            type: "FRONT_DOOR" | "DELIVERY_BOX" | "GAS_METER_BOX" | "BICYCLE_BASKET" | "GARAGE" | "RECEPTIONIST" | "FALLBACK_NEIGHBOR_DELIVERY" | "DO_NOT_LEAVE_UNATTENDED";
        };
        /** @description Error response returned when the request is unsuccessful. */
        "fulfillmentOutbound_2020-07-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "fulfillmentOutbound_2020-07-01_ErrorList": components["schemas"]["fulfillmentOutbound_2020-07-01_Error"][];
        /**
         * @description The event code for the delivery event.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_EventCode": "EVENT_101" | "EVENT_102" | "EVENT_201" | "EVENT_202" | "EVENT_203" | "EVENT_204" | "EVENT_205" | "EVENT_206" | "EVENT_301" | "EVENT_302" | "EVENT_304" | "EVENT_306" | "EVENT_307" | "EVENT_308" | "EVENT_309" | "EVENT_401" | "EVENT_402" | "EVENT_403" | "EVENT_404" | "EVENT_405" | "EVENT_406" | "EVENT_407" | "EVENT_408" | "EVENT_409" | "EVENT_411" | "EVENT_412" | "EVENT_413" | "EVENT_414" | "EVENT_415" | "EVENT_416" | "EVENT_417" | "EVENT_418" | "EVENT_419";
        /** @description A Multi-Channel Fulfillment feature. */
        "fulfillmentOutbound_2020-07-01_Feature": {
            /** @description The feature description. */
            featureDescription: string;
            /** @description The feature name. */
            featureName: string;
            /** @description When true, indicates that the seller is eligible to use the feature. */
            sellerEligible?: boolean;
        };
        /** @description An array of features. */
        "fulfillmentOutbound_2020-07-01_Features": components["schemas"]["fulfillmentOutbound_2020-07-01_Feature"][];
        /** @description Feature settings allows you to apply fulfillment features to an order. To block an order from being shipped using Amazon Logistics (AMZL) and an AMZL tracking number, set `featureName` to `BLOCK_AMZL` and `featureFulfillmentPolicy` to `Required`. Blocking AMZL will incur an additional fee surcharge on your MCF orders and increase the risk of some of your orders being unfulfilled or delivered late if there are no alternative carriers available. Using `BLOCK_AMZL` in an order request will take precedence over your Seller Central account setting. To ship in non-Amazon branded packaging (blank boxes), set `featureName` to `BLANK_BOX`. To require a signature from the recipient upon delivery, set `featureName` to `SIGNATURE_CONFIRMATION`. Note that using signature confirmation features will incur additional fees on MCF orders and are currently supported only in the US marketplace. To ensure all items in an order are delivered together, set `featureName` to `DELIVER_TOGETHER`. */
        "fulfillmentOutbound_2020-07-01_FeatureSettings": {
            /**
             * @description Specifies the policy to use when fulfilling an order.
             * @enum {string}
             */
            featureFulfillmentPolicy?: "Required" | "NotRequired";
            /** @description The name of the feature. Valid feature names are:
             *
             *     - `BLOCK_AMZL`: Blocks orders from being shipped using Amazon Logistics (AMZL).
             *       - Note: Using this feature will incur additional fee surcharges on MCF orders and may increase the risk of unfulfilled or delayed deliveries if alternative carriers are unavailable. Using `BLOCK_AMZL` in an order request will take precedence over your Seller Central account setting.
             *     - `BLANK_BOX`: Ships orders in non-Amazon branded packaging (blank boxes).
             *     - `SIGNATURE_CONFIRMATION`: Requires a signature from the recipient upon delivery.
             *       - Note: Using signature confirmation features will incur additional fees on MCF orders and are currently supported only in the US marketplace. */
            featureName?: string;
        };
        /** @description Information about an SKU, including the count available, identifiers, and a list of overlapping SKUs that share the same inventory pool. */
        "fulfillmentOutbound_2020-07-01_FeatureSku": {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            asin?: string;
            /** @description The unique SKU used by Amazon's fulfillment network. */
            fnSku?: string;
            /** @description Other seller SKUs that are shared across the same inventory. */
            overlappingSkus?: string[];
            /** @description Used to identify an item in the given marketplace. `SellerSKU` is qualified by the seller's SellerId, which is included with every operation that you submit. */
            sellerSku?: string;
            /** @description The number of SKUs available for this service. */
            skuCount?: number;
        };
        /** @description Fee type and cost. */
        "fulfillmentOutbound_2020-07-01_Fee": {
            amount: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            /**
             * @description The type of fee.
             * @enum {string}
             */
            name: "FBAPerUnitFulfillmentFee" | "FBAPerOrderFulfillmentFee" | "FBATransportationFee" | "FBAFulfillmentCODFee";
        };
        /** @description An array of fee type and cost pairs. */
        "fulfillmentOutbound_2020-07-01_FeeList": components["schemas"]["fulfillmentOutbound_2020-07-01_Fee"][];
        /**
         * @description Specifies whether the fulfillment order should ship now or have an order hold put on it.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_FulfillmentAction": "Ship" | "Hold";
        /** @description General information about a fulfillment order, including its status. */
        "fulfillmentOutbound_2020-07-01_FulfillmentOrder": {
            codSettings?: components["schemas"]["fulfillmentOutbound_2020-07-01_CODSettings"];
            deliveryWindow?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryWindow"];
            destinationAddress: components["schemas"]["fulfillmentOutbound_2020-07-01_Address"];
            /** @description A text block submitted with the `createFulfillmentOrder` operation. Displays in recipient-facing materials such as the packing slip. */
            displayableOrderComment: string;
            displayableOrderDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description A fulfillment order identifier submitted with the `createFulfillmentOrder` operation. Displays as the order identifier in recipient-facing materials such as the packing slip. */
            displayableOrderId: string;
            /** @description A list of features and their fulfillment policies to apply to the order. */
            featureConstraints?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSettings"][];
            fulfillmentAction?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentAction"];
            fulfillmentOrderStatus: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrderStatus"];
            fulfillmentPolicy?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPolicy"];
            /** @description The identifier for the marketplace the fulfillment order is placed against. */
            marketplaceId: string;
            notificationEmails?: components["schemas"]["fulfillmentOutbound_2020-07-01_NotificationEmailList"];
            receivedDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description The fulfillment order identifier submitted with the `createFulfillmentOrder` operation. */
            sellerFulfillmentOrderId: string;
            shippingSpeedCategory: components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategory"];
            statusUpdatedDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
        };
        /** @description Item information for a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_FulfillmentOrderItem": {
            cancelledQuantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description Item-specific text that displays in recipient-facing materials such as the outbound shipment packing slip. */
            displayableComment?: string;
            estimatedArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            estimatedShipDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description Amazon's fulfillment network SKU of the item. */
            fulfillmentNetworkSku?: string;
            /** @description A message to the gift recipient, if applicable. */
            giftMessage?: string;
            /** @description Indicates whether the item is sellable or unsellable. */
            orderItemDisposition?: string;
            perUnitDeclaredValue?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitPrice?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitTax?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description A fulfillment order item identifier submitted with a call to the `createFulfillmentOrder` operation. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
            unfulfillableQuantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
        };
        /** @description An array of fulfillment order item information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentOrderItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrderItem"][];
        /**
         * @description The current status of the fulfillment order.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_FulfillmentOrderStatus": "New" | "Received" | "Planning" | "Processing" | "Cancelled" | "Complete" | "CompletePartialled" | "Unfulfillable" | "Invalid";
        /**
         * @description The `FulfillmentPolicy` value specified when you called the `createFulfillmentOrder` operation.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_FulfillmentPolicy": "FillOrKill" | "FillAll" | "FillAllAvailable";
        /** @description Information about a fulfillment order preview, including delivery and fee information based on shipping method. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreview": {
            estimatedFees?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeeList"];
            estimatedShippingWeight?: components["schemas"]["fulfillmentOutbound_2020-07-01_Weight"];
            /** @description A list of features and their fulfillment policies to apply to the order. */
            featureConstraints?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSettings"][];
            fulfillmentPreviewShipments?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreviewShipmentList"];
            /** @description When true, this fulfillment order preview is for COD (Cash On Delivery). */
            isCODCapable: boolean;
            /** @description When true, this fulfillment order preview is fulfillable. */
            isFulfillable: boolean;
            /** @description The marketplace the fulfillment order is placed against. */
            marketplaceId: string;
            orderUnfulfillableReasons?: components["schemas"]["fulfillmentOutbound_2020-07-01_StringList"];
            scheduledDeliveryInfo?: components["schemas"]["fulfillmentOutbound_2020-07-01_ScheduledDeliveryInfo"];
            shippingSpeedCategory: components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategory"];
            unfulfillablePreviewItems?: components["schemas"]["fulfillmentOutbound_2020-07-01_UnfulfillablePreviewItemList"];
        };
        /** @description Item information for a shipment in a fulfillment order preview. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreviewItem": {
            estimatedShippingWeight?: components["schemas"]["fulfillmentOutbound_2020-07-01_Weight"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description A fulfillment order item identifier that the seller created with a call to the `createFulfillmentOrder` operation. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
            /**
             * @description The method used to calculate the estimated shipping weight.
             * @enum {string}
             */
            shippingWeightCalculationMethod?: "Package" | "Dimensional";
        };
        /** @description An array of fulfillment preview item information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreviewItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreviewItem"][];
        /** @description An array of fulfillment preview information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreviewList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreview"][];
        /** @description Delivery and item information for a shipment in a fulfillment order preview. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreviewShipment": {
            earliestArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            earliestShipDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            fulfillmentPreviewItems: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreviewItemList"];
            latestArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            latestShipDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description Provides additional insight into the shipment timeline when exact delivery dates are not able to be precomputed. */
            shippingNotes?: string[];
        };
        /** @description An array of fulfillment preview shipment information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentPreviewShipmentList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreviewShipment"][];
        /**
         * @description Indicates if the return item has been processed by a fulfillment center.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_FulfillmentReturnItemStatus": "New" | "Processed";
        /** @description Delivery and item information for a shipment in a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipment": {
            /** @description A shipment identifier assigned by Amazon. */
            amazonShipmentId: string;
            estimatedArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description An identifier for the fulfillment center from which the shipment is sent. */
            fulfillmentCenterId: string;
            fulfillmentShipmentItem: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipmentItemList"];
            fulfillmentShipmentPackage?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipmentPackageList"];
            /**
             * @description The current status of the shipment.
             * @enum {string}
             */
            fulfillmentShipmentStatus: "PENDING" | "SHIPPED" | "CANCELLED_BY_FULFILLER" | "CANCELLED_BY_SELLER";
            shippingDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description Provides additional insight into shipment timeline. Primarily used to communicate that actual delivery dates aren't available. */
            shippingNotes?: string[];
        };
        /** @description Item information for a shipment in a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipmentItem": {
            manufacturerLotCodes?: components["schemas"]["fulfillmentOutbound_2020-07-01_StringList"];
            /**
             * Format: int32
             * @description An identifier for the package that contains the item quantity.
             */
            packageNumber?: number;
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description The fulfillment order item identifier that the seller created and submitted with a call to the `createFulfillmentOrder` operation. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
            /** @description The serial number of the shipped item. */
            serialNumber?: string;
        };
        /** @description An array of fulfillment shipment item information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipmentItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipmentItem"][];
        /** @description An array of fulfillment shipment information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipmentList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipment"][];
        /** @description Package information for a shipment in a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipmentPackage": {
            /** @description The Amazon fulfillment tracking number, if provided, can be used to obtain tracking and delivery information. */
            amazonFulfillmentTrackingNumber?: string;
            /** @description Identifies the carrier who will deliver the shipment to the recipient. */
            carrierCode: string;
            deliveryInformation?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryInformation"];
            estimatedArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            lockerDetails?: components["schemas"]["fulfillmentOutbound_2020-07-01_LockerDetails"];
            /**
             * Format: int32
             * @description Identifies a package in a shipment.
             */
            packageNumber: number;
            /** @description The tracking number, if provided, can be used to obtain tracking and delivery information. */
            trackingNumber?: string;
        };
        /** @description An array of fulfillment shipment package information. */
        "fulfillmentOutbound_2020-07-01_FulfillmentShipmentPackageList": components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipmentPackage"][];
        /** @description The product details for the delivery offer. */
        "fulfillmentOutbound_2020-07-01_GetDeliveryOffersProduct": {
            amount?: components["schemas"]["fulfillmentOutbound_2020-07-01_Amount"];
            productIdentifier: components["schemas"]["fulfillmentOutbound_2020-07-01_ProductIdentifier"];
        };
        /** @description The request body schema for the `getDeliveryOffers` operation. */
        "fulfillmentOutbound_2020-07-01_GetDeliveryOffersRequest": {
            product: components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersProduct"];
            terms: components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersTerms"];
        };
        /** @description The response schema for the `getDeliveryOffers` operation. */
        "fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResult"];
        };
        /** @description A list of delivery offers, including offer expiration, earliest and latest date and time range, and the delivery offer policy. */
        "fulfillmentOutbound_2020-07-01_GetDeliveryOffersResult": {
            deliveryOffers?: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryOffersList"];
        };
        /** @description The delivery terms for the delivery offer. */
        "fulfillmentOutbound_2020-07-01_GetDeliveryOffersTerms": {
            destination: components["schemas"]["fulfillmentOutbound_2020-07-01_Destination"];
            origin: components["schemas"]["fulfillmentOutbound_2020-07-01_Origin"];
        };
        /** @description The breakdown of eligibility inventory by feature. */
        "fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResult"];
        };
        /** @description The payload for the `getEligibleInventory` operation. */
        "fulfillmentOutbound_2020-07-01_GetFeatureInventoryResult": {
            /** @description The name of the feature. */
            featureName: string;
            /** @description An array of SKUs eligible for this feature and the quantity available. */
            featureSkus?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSku"][];
            /** @description The requested marketplace. */
            marketplaceId: string;
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            nextToken?: string;
        };
        /** @description The response schema for the `getFeatureSKU` operation. */
        "fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResult"];
        };
        /** @description The payload for the `getFeatureSKU` operation. */
        "fulfillmentOutbound_2020-07-01_GetFeatureSkuResult": {
            /** @description The name of the feature. */
            featureName: string;
            /** @description A list of one or more reasons that the seller SKU is ineligible for the feature.
             *
             *     Possible values:
             *     * `MERCHANT_NOT_ENROLLED`: The merchant isn't enrolled for the feature.
             *     * `SKU_NOT_ELIGIBLE`: The SKU doesn't reside in a warehouse that supports the feature.
             *     * `INVALID_SKU`: There is an issue with the SKU provided. */
            ineligibleReasons?: string[];
            /** @description When true, the seller SKU is eligible for the requested feature. */
            isEligible: boolean;
            /** @description The requested marketplace. */
            marketplaceId: string;
            skuInfo?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSku"];
        };
        /** @description The response schema for the `getFeatures` operation. */
        "fulfillmentOutbound_2020-07-01_GetFeaturesResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResult"];
        };
        /** @description The payload for the `getFeatures` operation. */
        "fulfillmentOutbound_2020-07-01_GetFeaturesResult": {
            features: components["schemas"]["fulfillmentOutbound_2020-07-01_Features"];
        };
        /** @description The response schema for the `getFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResult"];
        };
        /** @description The request for the `getFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResult": {
            fulfillmentOrder: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrder"];
            fulfillmentOrderItems: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrderItemList"];
            fulfillmentShipments?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentShipmentList"];
            paymentInformation?: components["schemas"]["fulfillmentOutbound_2020-07-01_PaymentInformationList"];
            returnAuthorizations: components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnAuthorizationList"];
            returnItems: components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnItemList"];
        };
        /** @description Item information for a fulfillment order preview. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewItem": {
            perUnitDeclaredValue?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description A fulfillment order item identifier that the seller creates to track items in the fulfillment preview. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
        };
        /** @description An array of fulfillment preview item information. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewItem"][];
        /** @description The request body schema for the `getFulfillmentPreview` operation. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewRequest": {
            address: components["schemas"]["fulfillmentOutbound_2020-07-01_Address"];
            /** @description A list of features and their fulfillment policies to apply to the order. */
            featureConstraints?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSettings"][];
            /** @description When true, returns all fulfillment order previews both for COD and not for COD. Otherwise, returns only fulfillment order previews that are not for COD. */
            includeCODFulfillmentPreview?: boolean;
            /** @description When true, returns the `ScheduledDeliveryInfo` response object, which contains the available delivery windows for a Scheduled Delivery. The `ScheduledDeliveryInfo` response object can only be returned for fulfillment order previews with `ShippingSpeedCategories` equal to `ScheduledDelivery`. */
            includeDeliveryWindows?: boolean;
            items: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewItemList"];
            /** @description The marketplace the fulfillment order is placed against. */
            marketplaceId?: string;
            shippingSpeedCategories?: components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategoryList"];
        };
        /** @description The response schema for the `getFulfillmentPreview` operation. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResult"];
        };
        /** @description A list of fulfillment order previews, including estimated shipping weights, estimated shipping fees, and estimated ship dates and arrival dates. */
        "fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResult": {
            fulfillmentPreviews?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPreviewList"];
        };
        /** @description The response schema for the `getPackageTrackingDetails` operation. */
        "fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_PackageTrackingDetails"];
        };
        /** @description The reason that the item is invalid for return. */
        "fulfillmentOutbound_2020-07-01_InvalidItemReason": {
            /** @description A human readable description of the invalid item reason code. */
            description: string;
            invalidItemReasonCode: components["schemas"]["fulfillmentOutbound_2020-07-01_InvalidItemReasonCode"];
        };
        /**
         * @description A code for why the item is invalid for return.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_InvalidItemReasonCode": "InvalidValues" | "DuplicateRequest" | "NoCompletedShipItems" | "NoReturnableQuantity";
        /** @description An item that is invalid for return. */
        "fulfillmentOutbound_2020-07-01_InvalidReturnItem": {
            invalidItemReason: components["schemas"]["fulfillmentOutbound_2020-07-01_InvalidItemReason"];
            /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
            sellerFulfillmentOrderItemId: string;
            /** @description An identifier the seller assigns to the return item. */
            sellerReturnItemId: string;
        };
        /** @description An array of invalid return item information. */
        "fulfillmentOutbound_2020-07-01_InvalidReturnItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_InvalidReturnItem"][];
        /**
         * Format: ip
         * @description An IP Address.
         */
        "fulfillmentOutbound_2020-07-01_IpAddress": string;
        /** @description The response schema for the `listAllFulfillmentOrders` operation. */
        "fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResult"];
        };
        /** @description The request for the `listAllFulfillmentOrders` operation. */
        "fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResult": {
            /** @description An array of fulfillment order information. */
            fulfillmentOrders?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrder"][];
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            nextToken?: string;
        };
        /** @description The response schema for the `listReturnReasonCodes` operation. */
        "fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
            payload?: components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResult"];
        };
        /** @description The request for the `listReturnReasonCodes` operation. */
        "fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResult": {
            reasonCodeDetails?: components["schemas"]["fulfillmentOutbound_2020-07-01_ReasonCodeDetailsList"];
        };
        /** @description The locker details, which you can use to access the locker delivery box. */
        "fulfillmentOutbound_2020-07-01_LockerDetails": {
            /** @description Indicates the locker access code */
            lockerAccessCode?: string;
            /** @description Indicates the locker number */
            lockerNumber?: string;
        };
        /** @description An amount of money, including units in the form of currency. */
        "fulfillmentOutbound_2020-07-01_Money": {
            /** @description Three digit currency code in ISO 4217 format. */
            currencyCode: string;
            value: components["schemas"]["fulfillmentOutbound_2020-07-01_Decimal"];
        };
        /** @description A list of email addresses that the seller provides that are used by Amazon to send ship-complete notifications to recipients on behalf of the seller. */
        "fulfillmentOutbound_2020-07-01_NotificationEmailList": string[];
        /** @description The origin for the delivery offer. */
        "fulfillmentOutbound_2020-07-01_Origin": {
            /** @description The two digit country code the items should ship from. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
        };
        /** @description Tracking details of package */
        "fulfillmentOutbound_2020-07-01_PackageTrackingDetails": {
            additionalLocationInfo?: components["schemas"]["fulfillmentOutbound_2020-07-01_AdditionalLocationInfo"];
            /** @description The name of the carrier. */
            carrierCode?: string;
            /** @description The phone number of the carrier. */
            carrierPhoneNumber?: string;
            /** @description The URL of the carrier's website. */
            carrierURL?: string;
            currentStatus?: components["schemas"]["fulfillmentOutbound_2020-07-01_CurrentStatus"];
            /** @description Description corresponding to the `CurrentStatus` value. */
            currentStatusDescription?: string;
            /** @description Link on swiship.com that allows customers to track the package. */
            customerTrackingLink?: string;
            deliveryWindow?: components["schemas"]["fulfillmentOutbound_2020-07-01_DateRange"];
            estimatedArrivalDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /**
             * Format: int32
             * @description The package identifier.
             */
            packageNumber: number;
            shipDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            shipToAddress?: components["schemas"]["fulfillmentOutbound_2020-07-01_TrackingAddress"];
            /** @description The name of the person who signed for the package. */
            signedForBy?: string;
            trackingEvents?: components["schemas"]["fulfillmentOutbound_2020-07-01_TrackingEventList"];
            /** @description The tracking number for the package. */
            trackingNumber?: string;
        };
        /** @description The attributes related to the payment made from customer to seller for this order. */
        "fulfillmentOutbound_2020-07-01_PaymentInformation": {
            paymentDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description The transaction mode of this payment. */
            paymentMode: string;
            /** @description The transaction identifier of this payment. */
            paymentTransactionId: string;
        };
        /** @description An array of various payment attributes related to this fulfillment order. */
        "fulfillmentOutbound_2020-07-01_PaymentInformationList": components["schemas"]["fulfillmentOutbound_2020-07-01_PaymentInformation"][];
        /** @description Product identifier input that locates a product for MCF. */
        "fulfillmentOutbound_2020-07-01_ProductIdentifier": {
            /** @description The merchant SKU for the product. */
            merchantSku: string;
        };
        /**
         * Format: int32
         * @description The item quantity.
         */
        "fulfillmentOutbound_2020-07-01_Quantity": number;
        /** @description A return reason code, a description, and an optional description translation. */
        "fulfillmentOutbound_2020-07-01_ReasonCodeDetails": {
            /** @description A human readable description of the return reason code. */
            description: string;
            /** @description A code that indicates a valid return reason. */
            returnReasonCode: string;
            /** @description A translation of the description. The translation is in the language specified in the `language` request parameter. */
            translatedDescription?: string;
        };
        /** @description An array of return reason code details. */
        "fulfillmentOutbound_2020-07-01_ReasonCodeDetailsList": components["schemas"]["fulfillmentOutbound_2020-07-01_ReasonCodeDetails"][];
        /** @description Return authorization information for items accepted for return. */
        "fulfillmentOutbound_2020-07-01_ReturnAuthorization": {
            /** @description The return merchandise authorization (RMA) that Amazon needs to process the return. */
            amazonRmaId: string;
            /** @description An identifier for the Amazon fulfillment center to which the return items should be sent. */
            fulfillmentCenterId: string;
            /** @description An identifier for the return authorization. This identifier associates return items with the return authorization used to return them. */
            returnAuthorizationId: string;
            returnToAddress: components["schemas"]["fulfillmentOutbound_2020-07-01_Address"];
            /** @description A URL for a web page that contains the return authorization barcode and the mailing label. This does not include pre-paid shipping. */
            rmaPageURL: string;
        };
        /** @description An array of return authorization information. */
        "fulfillmentOutbound_2020-07-01_ReturnAuthorizationList": components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnAuthorization"][];
        /** @description An item that Amazon accepted for return. */
        "fulfillmentOutbound_2020-07-01_ReturnItem": {
            /** @description The return reason code that the Amazon fulfillment center assigned to the return item. */
            amazonReturnReasonCode?: string;
            /** @description The identifier for the shipment that is associated with the return item. */
            amazonShipmentId: string;
            /** @description The identifier for the Amazon fulfillment center that processed the return item. */
            fulfillmentCenterId?: string;
            /** @description Identifies the return authorization used to return this item. Refer to `ReturnAuthorization`. */
            returnAuthorizationId?: string;
            /** @description An optional comment about the return item. */
            returnComment?: string;
            returnReceivedCondition?: components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnItemDisposition"];
            /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
            sellerFulfillmentOrderItemId: string;
            /** @description An identifier the seller assigns to the return item. */
            sellerReturnItemId: string;
            /** @description The return reason code assigned to the return item by the seller. */
            sellerReturnReasonCode: string;
            status: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentReturnItemStatus"];
            statusChangedDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
        };
        /**
         * @description The condition of the return item when received by an Amazon fulfillment center.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_ReturnItemDisposition": "Sellable" | "Defective" | "CustomerDamaged" | "CarrierDamaged" | "FulfillerDamaged";
        /** @description An array of items that Amazon accepted for return. Returns empty if no items were accepted for return. */
        "fulfillmentOutbound_2020-07-01_ReturnItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_ReturnItem"][];
        /** @description Delivery information for a scheduled delivery. This is only available in the JP marketplace. */
        "fulfillmentOutbound_2020-07-01_ScheduledDeliveryInfo": {
            /** @description The time zone of the destination address for the fulfillment order preview. Must be an IANA time zone name. Example: Asia/Tokyo. */
            deliveryTimeZone: string;
            deliveryWindows: components["schemas"]["fulfillmentOutbound_2020-07-01_DeliveryWindowList"];
        };
        /**
         * @description The shipping method used for the fulfillment order. When this value is `ScheduledDelivery`, choose `Ship` for the `fulfillmentAction`. `Hold` is not a valid `fulfillmentAction` value when the `shippingSpeedCategory` value is `ScheduledDelivery`.
         *     Note: Shipping method service level agreements vary by marketplace. Sellers should refer to the [Seller Central](https://developer-docs.amazon.com/sp-api/docs/seller-central-urls) website in their marketplace for shipping method service level agreements and fulfillment fees.
         * @enum {string}
         */
        "fulfillmentOutbound_2020-07-01_ShippingSpeedCategory": "Standard" | "Expedited" | "Priority" | "ScheduledDelivery";
        /** @description List of shipping speed categories. */
        "fulfillmentOutbound_2020-07-01_ShippingSpeedCategoryList": components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategory"][];
        /** @description String list */
        "fulfillmentOutbound_2020-07-01_StringList": string[];
        /** @description The request body schema for the `submitFulfillmentOrderStatusUpdate` operation. */
        "fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateRequest": {
            fulfillmentOrderStatus?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentOrderStatus"];
        };
        /** @description The response schema for the `SubmitFulfillmentOrderStatusUpdate` operation. */
        "fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
        };
        /**
         * Format: date-time
         * @description Date timestamp
         */
        "fulfillmentOutbound_2020-07-01_Timestamp": string;
        /** @description Address information for tracking the package. */
        "fulfillmentOutbound_2020-07-01_TrackingAddress": {
            /** @description The city. */
            city: string;
            /** @description The country. */
            country: string;
            /** @description The state. */
            state: string;
        };
        /** @description Information for tracking package deliveries. */
        "fulfillmentOutbound_2020-07-01_TrackingEvent": {
            eventAddress: components["schemas"]["fulfillmentOutbound_2020-07-01_TrackingAddress"];
            eventCode: components["schemas"]["fulfillmentOutbound_2020-07-01_EventCode"];
            eventDate: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description A description for the corresponding event code. */
            eventDescription: string;
        };
        /** @description An array of tracking event information. */
        "fulfillmentOutbound_2020-07-01_TrackingEventList": components["schemas"]["fulfillmentOutbound_2020-07-01_TrackingEvent"][];
        /** @description Information about unfulfillable items in a fulfillment order preview. */
        "fulfillmentOutbound_2020-07-01_UnfulfillablePreviewItem": {
            itemUnfulfillableReasons?: components["schemas"]["fulfillmentOutbound_2020-07-01_StringList"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description A fulfillment order item identifier created with a call to the `getFulfillmentPreview` operation. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku: string;
        };
        /** @description An array of unfulfillable preview item information. */
        "fulfillmentOutbound_2020-07-01_UnfulfillablePreviewItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_UnfulfillablePreviewItem"][];
        /** @description Item information for updating a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderItem": {
            /** @description Item-specific text that displays in recipient-facing materials such as the outbound shipment packing slip. */
            displayableComment?: string;
            /** @description Amazon's fulfillment network SKU of the item. */
            fulfillmentNetworkSku?: string;
            /** @description A message to the gift recipient, if applicable. */
            giftMessage?: string;
            /** @description Indicates whether the item is sellable or unsellable. */
            orderItemDisposition?: string;
            perUnitDeclaredValue?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitPrice?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            perUnitTax?: components["schemas"]["fulfillmentOutbound_2020-07-01_Money"];
            quantity: components["schemas"]["fulfillmentOutbound_2020-07-01_Quantity"];
            /** @description Identifies the fulfillment order item to update. Created with a previous call to the `createFulfillmentOrder` operation. */
            sellerFulfillmentOrderItemId: string;
            /** @description The seller SKU of the item. */
            sellerSku?: string;
        };
        /** @description An array of fulfillment order item information for updating a fulfillment order. */
        "fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderItemList": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderItem"][];
        /** @description The request body schema for the `updateFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderRequest": {
            destinationAddress?: components["schemas"]["fulfillmentOutbound_2020-07-01_Address"];
            /** @description Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip. */
            displayableOrderComment?: string;
            displayableOrderDate?: components["schemas"]["fulfillmentOutbound_2020-07-01_Timestamp"];
            /** @description A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier. */
            displayableOrderId?: string;
            /** @description A list of features and their fulfillment policies to apply to the order. */
            featureConstraints?: components["schemas"]["fulfillmentOutbound_2020-07-01_FeatureSettings"][];
            fulfillmentAction?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentAction"];
            fulfillmentPolicy?: components["schemas"]["fulfillmentOutbound_2020-07-01_FulfillmentPolicy"];
            items?: components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderItemList"];
            /** @description The marketplace the fulfillment order is placed against. */
            marketplaceId?: string;
            notificationEmails?: components["schemas"]["fulfillmentOutbound_2020-07-01_NotificationEmailList"];
            /** @description The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format. */
            shipFromCountryCode?: string;
            shippingSpeedCategory?: components["schemas"]["fulfillmentOutbound_2020-07-01_ShippingSpeedCategory"];
        };
        /** @description The response schema for the `updateFulfillmentOrder` operation. */
        "fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse": {
            errors?: components["schemas"]["fulfillmentOutbound_2020-07-01_ErrorList"];
        };
        /** @description A physical address with varying degrees of precision. A more precise address can provide more accurate results than country code and postal code alone. */
        "fulfillmentOutbound_2020-07-01_VariablePrecisionAddress": {
            /** @description The first line of the address. */
            addressLine1?: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business, or institution is located. This property should not be used in Japan. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The district or county where the person, business, or institution is located. */
            districtOrCounty?: string;
            /** @description The postal code of the address. */
            postalCode: string;
            /** @description The state or region where the person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description The weight. */
        "fulfillmentOutbound_2020-07-01_Weight": {
            /**
             * @description The unit of weight.
             * @enum {string}
             */
            unit: "KG" | "KILOGRAMS" | "LB" | "POUNDS";
            /** @description The weight value. */
            value: string;
        };
        /** @description The definition of the attribute option. */
        "InvoicesApiModel_2024-06-19_AttributeOption": {
            /** @description The description of the attribute value. */
            description?: string;
            /** @description The possible values for the attribute option. */
            value?: string;
        };
        /** @description The error response that is returned when the request is unsuccessful. */
        "InvoicesApiModel_2024-06-19_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses that are returned when a request is unsuccessful. */
        "InvoicesApiModel_2024-06-19_ErrorList": {
            /** @description List of errors. */
            errors: components["schemas"]["InvoicesApiModel_2024-06-19_Error"][];
        };
        /** @description Detailed information about the export. */
        "InvoicesApiModel_2024-06-19_Export": {
            /** @description When the export generation fails, this attribute contains a description of the error. */
            errorMessage?: string;
            /** @description The export identifier. */
            exportId?: string;
            /**
             * Format: date-time
             * @description The date and time when the export generation finished. Vales are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
             */
            generateExportFinishedAt?: string;
            /**
             * Format: date-time
             * @description The date and time when the export generation started. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
             */
            generateExportStartedAt?: string;
            /** @description The identifier for the export documents. To get the information required to retrieve the export document's contents, pass each ID in the `getInvoicesDocument` operation.
             *
             *     This list is empty until the status is `DONE`. */
            invoicesDocumentIds?: string[];
            status?: components["schemas"]["InvoicesApiModel_2024-06-19_ExportStatus"];
        };
        /**
         * @description The information required to create the export request.
         * @example {
         *       "dateEnd": "2024-07-30T23:59:59",
         *       "dateStart": "2024-07-01T00:00:00",
         *       "externalInvoiceId": "1283743",
         *       "fileFormat": "XML",
         *       "invoiceType": "SYMBOLIC_RETURN",
         *       "marketplaceId": "A2Q3Y263D00KWC",
         *       "series": "32",
         *       "statuses": [
         *         "AUTHORIZED"
         *       ],
         *       "transactionIdentifier": {
         *         "name": "BUSINESS_TRANSACTION_ID",
         *         "id": "94cd4e1a-5cc5-486d-b592-045a95a168e1"
         *       },
         *       "transactionType": "CUSTOMER_SALES"
         *     }
         */
        "InvoicesApiModel_2024-06-19_ExportInvoicesRequest": {
            /**
             * Format: date
             * @description The latest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is the time of the request.
             */
            dateEnd?: string;
            /**
             * Format: date
             * @description The earliest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 24 hours prior to the time of the request.
             */
            dateStart?: string;
            /** @description The external ID of the invoices you want included in the response. */
            externalInvoiceId?: string;
            fileFormat?: components["schemas"]["InvoicesApiModel_2024-06-19_FileFormat"];
            /** @description The marketplace-specific classification of the invoice type. Use the `getInvoicesAttributes` operation to check `invoiceType` options. */
            invoiceType?: string;
            /** @description The ID of the marketplace from which you want the invoices. */
            marketplaceId: string;
            /** @description The series number of the invoices you want included in the response. */
            series?: string;
            /** @description A list of statuses that you can use to filter invoices. Use the `getInvoicesAttributes` operation to check invoice status options.
             *
             *     Min count: 1 */
            statuses?: string[];
            transactionIdentifier?: components["schemas"]["InvoicesApiModel_2024-06-19_TransactionIdentifier"];
            /** @description The marketplace-specific classification of the transaction type for which the invoice was created. Use the `getInvoicesAttributes` operation to check `transactionType` options */
            transactionType?: string;
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_ExportInvoicesResponse": {
            /** @description The export identifier. */
            exportId?: string;
        };
        /**
         * @description The current status of the request.
         * @enum {string}
         */
        "InvoicesApiModel_2024-06-19_ExportStatus": "REQUESTED" | "PROCESSING" | "DONE" | "ERROR";
        /**
         * @description Supported invoice file extensions.
         * @enum {string}
         */
        "InvoicesApiModel_2024-06-19_FileFormat": "XML";
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoiceResponse": {
            invoice?: components["schemas"]["InvoicesApiModel_2024-06-19_Invoice"];
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoicesAttributesResponse": {
            invoicesAttributes?: components["schemas"]["InvoicesApiModel_2024-06-19_InvoicesAttributes"];
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoicesDocumentResponse": {
            invoicesDocument?: components["schemas"]["InvoicesApiModel_2024-06-19_InvoicesDocument"];
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoicesExportResponse": {
            export?: components["schemas"]["InvoicesApiModel_2024-06-19_Export"];
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoicesExportsResponse": {
            /** @description A list of exports. */
            exports?: components["schemas"]["InvoicesApiModel_2024-06-19_Export"][];
            /** @description This token is returned when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the `getInvoices` operation and include this token with the previous call parameters. */
            nextToken?: string;
        };
        /** @description Success. */
        "InvoicesApiModel_2024-06-19_GetInvoicesResponse": {
            /** @description A list of invoices. */
            invoices?: components["schemas"]["InvoicesApiModel_2024-06-19_Invoice"][];
            /** @description This token is returned when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the `getInvoices` operation and include this token with the previous call parameters. */
            nextToken?: string;
        };
        /** @description Provides detailed information about an invoice. */
        "InvoicesApiModel_2024-06-19_Invoice": {
            /**
             * Format: date-time
             * @description The date and time the invoice is issued. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
             */
            date?: string;
            /** @description If the invoice is in an error state, this attribute displays the error code. */
            errorCode?: string;
            /** @description The invoice identifier that is used by an external party. This is typically the government agency that authorized the invoice. */
            externalInvoiceId?: string;
            /** @description The response message from the government authority when there is an error during invoice issuance. */
            govResponse?: string;
            /** @description The invoice identifier. */
            id?: string;
            /** @description The classification of the invoice type. This varies across marketplaces. Use the `getInvoicesAttributes` operation to check `invoiceType` options. */
            invoiceType?: string;
            /** @description Use this identifier in conjunction with `externalInvoiceId` to identify invoices from the same seller. */
            series?: string;
            /** @description The invoice status classification. Use the `getInvoicesAttributes` operation to check invoice status options. */
            status?: string;
            /** @description List with identifiers for the transactions associated to the invoice. */
            transactionIds?: components["schemas"]["InvoicesApiModel_2024-06-19_TransactionIdentifier"][];
            /** @description Classification of the transaction that originated this invoice. Use the `getInvoicesAttributes` operation to check `transactionType` options. */
            transactionType?: string;
        };
        /** @description An object that contains the invoice attributes definition. */
        "InvoicesApiModel_2024-06-19_InvoicesAttributes": {
            /** @description A list of all the options that are available for the invoice status attribute. */
            invoiceStatusOptions?: components["schemas"]["InvoicesApiModel_2024-06-19_AttributeOption"][];
            /** @description A list of all the options that are available for the invoice type attribute. */
            invoiceTypeOptions?: components["schemas"]["InvoicesApiModel_2024-06-19_AttributeOption"][];
            /** @description A list of all the options that are available for the transaction identifier name attribute. */
            transactionIdentifierNameOptions?: components["schemas"]["InvoicesApiModel_2024-06-19_AttributeOption"][];
            /** @description A list of all the options that are available for the transaction type attribute. */
            transactionTypeOptions?: components["schemas"]["InvoicesApiModel_2024-06-19_AttributeOption"][];
        };
        /** @description An object that contains the `documentId` and an S3 pre-signed URL that you can use to download the specified file. */
        "InvoicesApiModel_2024-06-19_InvoicesDocument": {
            /** @description The identifier of the export document. */
            invoicesDocumentId?: string;
            /** @description A pre-signed URL that you can use to download the invoices document in zip format. This URL expires after 30 seconds. */
            invoicesDocumentUrl?: string;
        };
        /** @description The identifier for a transaction. */
        "InvoicesApiModel_2024-06-19_TransactionIdentifier": {
            /** @description The transaction identifier. */
            id?: string;
            /** @description The transaction identifier name. Use the `getInvoicesAttributes` operation to check `transactionIdentifierName` options. */
            name?: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "listingsItems_2020-09-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "listingsItems_2020-09-01_ErrorList": {
            errors: components["schemas"]["listingsItems_2020-09-01_Error"][];
        };
        /** @description An issue with a listings item. */
        "listingsItems_2020-09-01_Issue": {
            /** @description Name of the attribute associated with the issue, if applicable. */
            attributeName?: string;
            /** @description An issue code that identifies the type of issue. */
            code: string;
            /** @description A message that describes the issue. */
            message: string;
            /**
             * @description The severity of the issue.
             * @enum {string}
             */
            severity: "ERROR" | "WARNING" | "INFO";
        };
        /** @description The request body schema for the patchListingsItem operation. */
        "listingsItems_2020-09-01_ListingsItemPatchRequest": {
            /** @description One or more JSON Patch operations to perform on the listings item. */
            patches: components["schemas"]["listingsItems_2020-09-01_PatchOperation"][];
            /** @description The Amazon product type of the listings item. */
            productType: string;
        };
        /** @description The request body schema for the putListingsItem operation. */
        "listingsItems_2020-09-01_ListingsItemPutRequest": {
            /** @description JSON object containing structured listings item attribute data keyed by attribute name. */
            attributes: {
                [key: string]: unknown;
            };
            /** @description The Amazon product type of the listings item. */
            productType: string;
            /**
             * @description The name of the requirements set for the provided data.
             * @enum {string}
             */
            requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
        };
        /** @description Response containing the results of a submission to the Selling Partner API for Listings Items. */
        "listingsItems_2020-09-01_ListingsItemSubmissionResponse": {
            /** @description Listings item issues related to the listings item submission. */
            issues?: components["schemas"]["listingsItems_2020-09-01_Issue"][];
            /** @description A selling partner provided identifier for an Amazon listing. */
            sku: string;
            /**
             * @description The status of the listings item submission.
             * @enum {string}
             */
            status: "ACCEPTED" | "INVALID";
            /** @description The unique identifier of the listings item submission. */
            submissionId: string;
        };
        /** @description Individual JSON Patch operation for an HTTP PATCH request. */
        "listingsItems_2020-09-01_PatchOperation": {
            /**
             * @description Type of JSON Patch operation. Supported JSON Patch operations include add, replace, and delete. See <https://tools.ietf.org/html/rfc6902>.
             * @enum {string}
             */
            op: "add" | "replace" | "delete";
            /** @description JSON Pointer path of the element to patch. See <https://tools.ietf.org/html/rfc6902>. */
            path: string;
            /** @description JSON value to add, replace, or delete. */
            value?: {
                [key: string]: unknown;
            }[];
        };
        /** @description Buyer segment or program this offer is applicable to. */
        "listingsItems_2021-08-01_Audience": {
            /** @description Localized display name for the audience. */
            displayName?: string;
            /**
             * @description Name of the audience an offer is applicable to.
             *
             *     Common values:
             *
             *     * 'ALL' - Standard offer audience for buyers on Amazon retail websites.
             *
             *     * 'B2B' - Offer audience for Amazon Business website buyers.
             * @example ALL
             */
            value?: string;
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unnaceptable, as with currencies. Follows RFC7159 for number representation. */
        "listingsItems_2021-08-01_Decimal": string;
        /** @description Error response returned when the request is unsuccessful. */
        "listingsItems_2021-08-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "listingsItems_2021-08-01_ErrorList": {
            errors: components["schemas"]["listingsItems_2021-08-01_Error"][];
        };
        /** @description The fulfillment availability details for the listings item. */
        "listingsItems_2021-08-01_FulfillmentAvailability": {
            /** @description Designates which fulfillment network is used. */
            fulfillmentChannelCode: string;
            /** @description The quantity of the item you are making available for sale. */
            quantity?: number;
        };
        /** @description An issue with a listings item. */
        "listingsItems_2021-08-01_Issue": {
            /** @description The names of the attributes associated with the issue, if applicable. */
            attributeNames?: string[];
            /**
             * @description List of issue categories.
             *
             *     Possible values:
             *
             *     * 'INVALID_ATTRIBUTE' - Indicating an invalid attribute in the listing.
             *
             *     * 'MISSING_ATTRIBUTE' - Highlighting a missing attribute in the listing.
             *
             *     * 'INVALID_IMAGE' - Signifying an invalid image in the listing.
             *
             *     * 'MISSING_IMAGE' - Noting the absence of an image in the listing.
             *
             *     * 'INVALID_PRICE' - Pertaining to issues with the listing's price-related attributes.
             *
             *     * 'MISSING_PRICE' - Pointing out the absence of a price attribute in the listing.
             *
             *     * 'DUPLICATE' - Identifying listings with potential duplicate problems, such as this ASIN potentially being a duplicate of another ASIN.
             *
             *     * 'QUALIFICATION_REQUIRED' - Indicating that the listing requires qualification-related approval.
             * @example [
             *       "INVALID_ATTRIBUTE"
             *     ]
             */
            categories: string[];
            /** @description An issue code that identifies the type of issue. */
            code: string;
            enforcements?: components["schemas"]["listingsItems_2021-08-01_IssueEnforcements"];
            /** @description A message that describes the issue. */
            message: string;
            /**
             * @description The severity of the issue.
             * @enum {string}
             */
            severity: "ERROR" | "WARNING" | "INFO";
        };
        /** @description The enforcement action taken by Amazon that affect the publishing or status of a listing */
        "listingsItems_2021-08-01_IssueEnforcementAction": {
            /**
             * @description The enforcement action name.
             *
             *     Possible values:
             *
             *     * `LISTING_SUPPRESSED` - This enforcement takes down the current listing item's buyability.
             *
             *     * `ATTRIBUTE_SUPPRESSED` - An attribute's value on the listing item is invalid, which causes it to be rejected by Amazon.
             *
             *     * `CATALOG_ITEM_REMOVED` - This catalog item is inactive on Amazon, and all offers against it in the applicable marketplace are non-buyable.
             *
             *     * `SEARCH_SUPPRESSED` - This value indicates that the catalog item is hidden from search results.
             * @example LISTING_SUPPRESSED
             */
            action: string;
        };
        /** @description This field provides information about the enforcement actions taken by Amazon that affect the publishing or status of a listing. It also includes details about any associated exemptions. */
        "listingsItems_2021-08-01_IssueEnforcements": {
            /** @description List of enforcement actions taken by Amazon that affect the publishing or status of a listing. */
            actions: components["schemas"]["listingsItems_2021-08-01_IssueEnforcementAction"][];
            exemption: components["schemas"]["listingsItems_2021-08-01_IssueExemption"];
        };
        /** @description Conveying the status of the listed enforcement actions and, if applicable, provides information about the exemption's expiry date. */
        "listingsItems_2021-08-01_IssueExemption": {
            /**
             * Format: date-time
             * @description Represents the timestamp, in ISO 8601 format, that specifies the date when the temporary exemptions expires, and Amazon begins enforcing the listed actions.
             * @example 2023-10-28T00:36:48.914Z
             */
            expiryDate?: string;
            /**
             * @description This field indicates the current exemption status for the listed enforcement actions. It can take values such as `EXEMPT`, signifying permanent exemption, `EXEMPT_UNTIL_EXPIRY_DATE` indicating temporary exemption until a specified date, or `NOT_EXEMPT` signifying no exemptions, and enforcement actions were already applied.
             * @enum {string}
             */
            status: "EXEMPT" | "EXEMPT_UNTIL_EXPIRY_DATE" | "NOT_EXEMPT";
        };
        /** @description A listings item. */
        "listingsItems_2021-08-01_Item": {
            attributes?: components["schemas"]["listingsItems_2021-08-01_ItemAttributes"];
            /** @description The fulfillment availability for the listings item. */
            fulfillmentAvailability?: components["schemas"]["listingsItems_2021-08-01_FulfillmentAvailability"][];
            issues?: components["schemas"]["listingsItems_2021-08-01_ItemIssues"];
            offers?: components["schemas"]["listingsItems_2021-08-01_ItemOffers"];
            /** @description The vendor procurement information for the listings item. */
            procurement?: components["schemas"]["listingsItems_2021-08-01_ItemProcurement"][];
            productTypes?: components["schemas"]["listingsItems_2021-08-01_ItemProductTypes"];
            relationships?: components["schemas"]["listingsItems_2021-08-01_ItemRelationships"];
            /** @description A selling partner provided identifier for an Amazon listing. */
            sku: string;
            summaries?: components["schemas"]["listingsItems_2021-08-01_ItemSummaries"];
        };
        /** @description A JSON object containing structured listings item attribute data keyed by attribute name. */
        "listingsItems_2021-08-01_ItemAttributes": {
            [key: string]: unknown;
        };
        /** @description Identity attributes associated with the item in the Amazon catalog, such as the ASIN. */
        "listingsItems_2021-08-01_ItemIdentifiers": components["schemas"]["listingsItems_2021-08-01_ItemIdentifiersByMarketplace"][];
        /** @description Identity attributes associated with the item in the Amazon catalog for the indicated Amazon marketplace. */
        "listingsItems_2021-08-01_ItemIdentifiersByMarketplace": {
            /** @description Amazon Standard Identification Number (ASIN) of the listings item. */
            asin?: string;
            /** @description A marketplace identifier. Identifies the Amazon marketplace for the listings item. */
            marketplaceId?: string;
        };
        /** @description The image for the listings item. */
        "listingsItems_2021-08-01_ItemImage": {
            /** @description The height of the image in pixels. */
            height: number;
            /** @description The link, or URL, to the image. */
            link: string;
            /** @description The width of the image in pixels. */
            width: number;
        };
        /** @description The issues associated with the listings item. */
        "listingsItems_2021-08-01_ItemIssues": components["schemas"]["listingsItems_2021-08-01_Issue"][];
        /** @description Offer details of a listings item for an Amazon marketplace. */
        "listingsItems_2021-08-01_ItemOfferByMarketplace": {
            audience?: components["schemas"]["listingsItems_2021-08-01_Audience"];
            /** @description The Amazon marketplace identifier. */
            marketplaceId: string;
            /**
             * @description Type of offer for the listings item.
             * @enum {string}
             */
            offerType: "B2C" | "B2B";
            points?: components["schemas"]["listingsItems_2021-08-01_Points"];
            price: components["schemas"]["listingsItems_2021-08-01_Money"];
        };
        /** @description Offer details for the listings item. */
        "listingsItems_2021-08-01_ItemOffers": components["schemas"]["listingsItems_2021-08-01_ItemOfferByMarketplace"][];
        /** @description The vendor procurement information for the listings item. */
        "listingsItems_2021-08-01_ItemProcurement": {
            costPrice: components["schemas"]["listingsItems_2021-08-01_Money"];
        };
        /** @description Product types that are associated with the listing item for the specified marketplace. */
        "listingsItems_2021-08-01_ItemProductTypeByMarketplace": {
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /**
             * @description The name of the product type that is submitted by the Selling Partner.
             * @example LUGGAGE
             */
            productType: string;
        };
        /** @description Product types for a listing item, by marketplace. */
        "listingsItems_2021-08-01_ItemProductTypes": components["schemas"]["listingsItems_2021-08-01_ItemProductTypeByMarketplace"][];
        /** @description The relationship details for a listing item. */
        "listingsItems_2021-08-01_ItemRelationship": {
            /** @description Identifiers (SKUs) of the related items that are children of this listing item. */
            childSkus?: string[];
            /** @description Identifiers (SKUs) of the related items that are parents of this listing item. */
            parentSkus?: string[];
            /**
             * @description The type of relationship.
             * @example VARIATION
             * @enum {string}
             */
            type: "VARIATION" | "PACKAGE_HIERARCHY";
            variationTheme?: components["schemas"]["listingsItems_2021-08-01_ItemVariationTheme"];
        };
        /** @description Relationships for a listing item, by marketplace (for example, variations). */
        "listingsItems_2021-08-01_ItemRelationships": components["schemas"]["listingsItems_2021-08-01_ItemRelationshipsByMarketplace"][];
        /** @description Relationship details for the listing item in the specified marketplace. */
        "listingsItems_2021-08-01_ItemRelationshipsByMarketplace": {
            /** @description Amazon marketplace identifier. */
            marketplaceId: string;
            /** @description Relationships for the listing item. */
            relationships: components["schemas"]["listingsItems_2021-08-01_ItemRelationship"][];
        };
        /** @description Selling partner listings items and search related metadata. */
        "listingsItems_2021-08-01_ItemSearchResults": {
            /** @description A list of listings items. */
            items: components["schemas"]["listingsItems_2021-08-01_Item"][];
            /** @description The total number of selling partner listings items found for the search criteria (only results up to the page count limit is returned per request regardless of the number found).
             *
             *     Note: The maximum number of items (SKUs) that can be returned and paged through is 1000. */
            numberOfResults: number;
            pagination?: components["schemas"]["listingsItems_2021-08-01_Pagination"];
        };
        /** @description Summary details of a listings item. */
        "listingsItems_2021-08-01_ItemSummaries": components["schemas"]["listingsItems_2021-08-01_ItemSummaryByMarketplace"][];
        /** @description Summary details of a listings item for an Amazon marketplace. */
        "listingsItems_2021-08-01_ItemSummaryByMarketplace": {
            /** @description Amazon Standard Identification Number (ASIN) of the listings item. */
            asin?: string;
            /**
             * @description Identifies the condition of the listings item.
             * @enum {string}
             */
            conditionType?: "new_new" | "new_open_box" | "new_oem" | "refurbished_refurbished" | "used_like_new" | "used_very_good" | "used_good" | "used_acceptable" | "collectible_like_new" | "collectible_very_good" | "collectible_good" | "collectible_acceptable" | "club_club";
            /**
             * Format: date-time
             * @description The date the listings item was created in ISO 8601 format.
             */
            createdDate: string;
            /** @description The fulfillment network stock keeping unit is an identifier used by Amazon fulfillment centers to identify each unique item. */
            fnSku?: string;
            /** @description The name or title associated with an Amazon catalog item. */
            itemName?: string;
            /**
             * Format: date-time
             * @description The date the listings item was last updated in ISO 8601 format.
             */
            lastUpdatedDate: string;
            mainImage?: components["schemas"]["listingsItems_2021-08-01_ItemImage"];
            /** @description A marketplace identifier. Identifies the Amazon marketplace for the listings item. */
            marketplaceId: string;
            /** @description The Amazon product type of the listings item. */
            productType: string;
            /** @description Statuses that apply to the listings item. */
            status: ("BUYABLE" | "DISCOVERABLE")[];
        };
        /** @description A variation theme that indicates the combination of listing item attributes that define the variation family. */
        "listingsItems_2021-08-01_ItemVariationTheme": {
            /** @description The names of the listing item attributes that are associated with the variation theme. */
            attributes: string[];
            /**
             * @description The variation theme that indicates the combination of listing item attributes that define the variation family.
             * @example COLOR_NAME/STYLE_NAME
             */
            theme: string;
        };
        /** @description The request body schema for the `patchListingsItem` operation. */
        "listingsItems_2021-08-01_ListingsItemPatchRequest": {
            /** @description One or more JSON Patch operations to perform on the listings item. */
            patches: components["schemas"]["listingsItems_2021-08-01_PatchOperation"][];
            /** @description The Amazon product type of the listings item. */
            productType: string;
        };
        /** @description The request body schema for the `putListingsItem` operation. */
        "listingsItems_2021-08-01_ListingsItemPutRequest": {
            /** @description A JSON object containing structured listings item attribute data keyed by attribute name. */
            attributes: {
                [key: string]: unknown;
            };
            /** @description The Amazon product type of the listings item. */
            productType: string;
            /**
             * @description The name of the requirements set for the provided data.
             * @enum {string}
             */
            requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
        };
        /** @description Response containing the results of a submission to the Selling Partner API for Listings Items. */
        "listingsItems_2021-08-01_ListingsItemSubmissionResponse": {
            identifiers?: components["schemas"]["listingsItems_2021-08-01_ItemIdentifiers"];
            /** @description Listings item issues related to the listings item submission. */
            issues?: components["schemas"]["listingsItems_2021-08-01_Issue"][];
            /** @description A selling partner provided identifier for an Amazon listing. */
            sku: string;
            /**
             * @description The status of the listings item submission.
             * @enum {string}
             */
            status: "ACCEPTED" | "INVALID" | "VALID";
            /** @description The unique identifier of the listings item submission. */
            submissionId: string;
        };
        /** @description The currency type and amount. */
        "listingsItems_2021-08-01_Money": {
            amount: components["schemas"]["listingsItems_2021-08-01_Decimal"];
            /** @description Three-digit currency code in ISO 4217 format. */
            currencyCode: string;
        };
        /** @description When a request produces a response that exceeds the `pageSize`, pagination occurs. This means the response is divided into individual pages. To retrieve the next page or the previous page, you must pass the `nextToken` value or the `previousToken` value as the `pageToken` parameter in the next request. When you receive the last page, there is no `nextToken` key in the pagination object. */
        "listingsItems_2021-08-01_Pagination": {
            /** @description A token that can be used to fetch the next page. */
            nextToken?: string;
            /** @description A token that can be used to fetch the previous page. */
            previousToken?: string;
        };
        /** @description Individual JSON Patch operation for an HTTP PATCH request. */
        "listingsItems_2021-08-01_PatchOperation": {
            /**
             * @description Type of JSON Patch operation. Supported JSON Patch operations include `add`, `replace`, `merge` and `delete`. Refer to <https://tools.ietf.org/html/rfc6902>.
             * @enum {string}
             */
            op: "add" | "replace" | "merge" | "delete";
            /** @description JSON Pointer path of the element to patch. Refer to [JavaScript Object Notation (JSON) Patch](https://tools.ietf.org/html/rfc6902) for more information. */
            path: string;
            /** @description JSON value to `add`, `replace`, `merge` or `delete`. */
            value?: {
                [key: string]: unknown;
            }[];
        };
        /** @description The number of Amazon Points offered with the purchase of an item, and their monetary value. Note that the `Points` element is only returned in Japan (JP). */
        "listingsItems_2021-08-01_Points": {
            pointsNumber: number;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "listingsRestrictions_2021-08-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "listingsRestrictions_2021-08-01_ErrorList": components["schemas"]["listingsRestrictions_2021-08-01_Error"][];
        /** @description A link to resources related to a listing restriction. */
        "listingsRestrictions_2021-08-01_Link": {
            /**
             * Format: uri
             * @description The URI of the related resource.
             */
            resource: string;
            /** @description The title of the related resource. */
            title?: string;
            /** @description The media type of the related resource. */
            type?: string;
            /**
             * @description The HTTP verb used to interact with the related resource.
             * @enum {string}
             */
            verb: "GET";
        };
        /** @description A reason for the restriction, including path forward links that may allow Selling Partners to remove the restriction, if available. */
        "listingsRestrictions_2021-08-01_Reason": {
            /** @description A list of path forward links that may allow Selling Partners to remove the restriction. */
            links?: components["schemas"]["listingsRestrictions_2021-08-01_Link"][];
            /** @description A message describing the reason for the restriction. */
            message: string;
            /**
             * @description A code indicating why the listing is restricted.
             * @enum {string}
             */
            reasonCode?: "APPROVAL_REQUIRED" | "ASIN_NOT_FOUND" | "NOT_ELIGIBLE";
        };
        /** @description A listing restriction, optionally qualified by a condition, with a list of reasons for the restriction. */
        "listingsRestrictions_2021-08-01_Restriction": {
            /**
             * @description The condition that applies to the restriction.
             * @enum {string}
             */
            conditionType?: "new_new" | "new_open_box" | "new_oem" | "refurbished_refurbished" | "used_like_new" | "used_very_good" | "used_good" | "used_acceptable" | "collectible_like_new" | "collectible_very_good" | "collectible_good" | "collectible_acceptable" | "club_club";
            /** @description A marketplace identifier. Identifies the Amazon marketplace where the restriction is enforced. */
            marketplaceId: string;
            /** @description A list of reasons for the restriction. */
            reasons?: components["schemas"]["listingsRestrictions_2021-08-01_Reason"][];
        };
        /** @description A list of restrictions for the specified Amazon catalog item. */
        "listingsRestrictions_2021-08-01_RestrictionList": {
            restrictions: components["schemas"]["listingsRestrictions_2021-08-01_Restriction"][];
        };
        /** @description Maps the additional seller input to the definition. The key to the map is the field name. */
        merchantFulfillmentV0_AdditionalInputs: {
            /** @description The field name. */
            AdditionalInputFieldName?: string;
            SellerInputDefinition?: components["schemas"]["merchantFulfillmentV0_SellerInputDefinition"];
        };
        /** @description A list of additional inputs. */
        merchantFulfillmentV0_AdditionalInputsList: components["schemas"]["merchantFulfillmentV0_AdditionalInputs"][];
        /** @description Additional information required to purchase shipping. */
        merchantFulfillmentV0_AdditionalSellerInput: {
            /** @description The data type of the additional information. */
            DataType?: string;
            ValueAsAddress?: components["schemas"]["merchantFulfillmentV0_Address"];
            /** @description The value when the data type is boolean. */
            ValueAsBoolean?: boolean;
            ValueAsCurrency?: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            ValueAsDimension?: components["schemas"]["merchantFulfillmentV0_Length"];
            /** @description The value when the data type is integer. */
            ValueAsInteger?: number;
            /** @description The value when the data type is string. */
            ValueAsString?: string;
            ValueAsTimestamp?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            ValueAsWeight?: components["schemas"]["merchantFulfillmentV0_Weight"];
        };
        /** @description An additional set of seller inputs required to purchase shipping. */
        merchantFulfillmentV0_AdditionalSellerInputs: {
            /** @description The name of the additional input field. */
            AdditionalInputFieldName: string;
            AdditionalSellerInput: components["schemas"]["merchantFulfillmentV0_AdditionalSellerInput"];
        };
        /** @description A list of additional seller input pairs required to purchase shipping. */
        merchantFulfillmentV0_AdditionalSellerInputsList: components["schemas"]["merchantFulfillmentV0_AdditionalSellerInputs"][];
        /** @description The postal address information. */
        merchantFulfillmentV0_Address: {
            AddressLine1: components["schemas"]["merchantFulfillmentV0_AddressLine1"];
            AddressLine2?: components["schemas"]["merchantFulfillmentV0_AddressLine2"];
            AddressLine3?: components["schemas"]["merchantFulfillmentV0_AddressLine3"];
            City: components["schemas"]["merchantFulfillmentV0_City"];
            CountryCode: components["schemas"]["merchantFulfillmentV0_CountryCode"];
            DistrictOrCounty?: components["schemas"]["merchantFulfillmentV0_DistrictOrCounty"];
            Email: components["schemas"]["merchantFulfillmentV0_EmailAddress"];
            Name: components["schemas"]["merchantFulfillmentV0_AddressName"];
            Phone: components["schemas"]["merchantFulfillmentV0_PhoneNumber"];
            PostalCode: components["schemas"]["merchantFulfillmentV0_PostalCode"];
            StateOrProvinceCode?: components["schemas"]["merchantFulfillmentV0_StateOrProvinceCode"];
        };
        /** @description The street address information. */
        merchantFulfillmentV0_AddressLine1: string;
        /** @description Additional street address information. */
        merchantFulfillmentV0_AddressLine2: string;
        /** @description Additional street address information. */
        merchantFulfillmentV0_AddressLine3: string;
        /** @description The name of the addressee, or business name. */
        merchantFulfillmentV0_AddressName: string;
        /** @description List of adjustments. */
        merchantFulfillmentV0_AdjustmentItemList: components["schemas"]["merchantFulfillmentV0_RateItem"][];
        /** @description An Amazon-defined order identifier, in 3-7-7 format. */
        merchantFulfillmentV0_AmazonOrderId: string;
        /** @description Indicates whether the carrier will pick up the package, and what fee is charged, if any. */
        merchantFulfillmentV0_AvailableCarrierWillPickUpOption: {
            CarrierWillPickUpOption: components["schemas"]["merchantFulfillmentV0_CarrierWillPickUpOption"];
            Charge: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
        };
        /** @description List of available carrier pickup options. */
        merchantFulfillmentV0_AvailableCarrierWillPickUpOptionsList: components["schemas"]["merchantFulfillmentV0_AvailableCarrierWillPickUpOption"][];
        /** @description The available delivery confirmation options, and the fee charged, if any. */
        merchantFulfillmentV0_AvailableDeliveryExperienceOption: {
            Charge: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            DeliveryExperienceOption: components["schemas"]["merchantFulfillmentV0_DeliveryExperienceOption"];
        };
        /** @description List of available delivery experience options. */
        merchantFulfillmentV0_AvailableDeliveryExperienceOptionsList: components["schemas"]["merchantFulfillmentV0_AvailableDeliveryExperienceOption"][];
        /** @description The available label formats. */
        merchantFulfillmentV0_AvailableFormatOptionsForLabel: components["schemas"]["merchantFulfillmentV0_LabelFormatOption"][];
        /** @description The available label formats. */
        merchantFulfillmentV0_AvailableFormatOptionsForLabelList: components["schemas"]["merchantFulfillmentV0_LabelFormatOption"][];
        /** @description The available shipping service options. */
        merchantFulfillmentV0_AvailableShippingServiceOptions: {
            AvailableCarrierWillPickUpOptions: components["schemas"]["merchantFulfillmentV0_AvailableCarrierWillPickUpOptionsList"];
            AvailableDeliveryExperienceOptions: components["schemas"]["merchantFulfillmentV0_AvailableDeliveryExperienceOptionsList"];
        };
        /** @description Benefits that are included and excluded for each shipping offer. Benefits represents services provided by Amazon (for example, `CLAIMS_PROTECTED`) when sellers purchase shipping through Amazon. Benefit details are made available for any shipment placed on or after January 1st 2024 00:00 UTC. */
        merchantFulfillmentV0_Benefits: {
            ExcludedBenefits?: components["schemas"]["merchantFulfillmentV0_ExcludedBenefits"];
            IncludedBenefits?: components["schemas"]["merchantFulfillmentV0_IncludedBenefits"];
        };
        /** @description Response schema. */
        merchantFulfillmentV0_CancelShipmentResponse: {
            errors?: components["schemas"]["merchantFulfillmentV0_ErrorList"];
            payload?: components["schemas"]["merchantFulfillmentV0_Shipment"];
        };
        /**
         * @description Carrier will pick up option.
         * @enum {string}
         */
        merchantFulfillmentV0_CarrierWillPickUpOption: "CarrierWillPickUp" | "ShipperWillDropOff" | "NoPreference";
        /** @description The city. */
        merchantFulfillmentV0_City: string;
        /** @description A validation constraint. */
        merchantFulfillmentV0_Constraint: {
            /** @description A regular expression. */
            ValidationRegEx?: string;
            /** @description A validation string. */
            ValidationString: string;
        };
        /** @description List of constraints. */
        merchantFulfillmentV0_Constraints: components["schemas"]["merchantFulfillmentV0_Constraint"][];
        /** @description The two-letter country code in [ISO 3166-1 alpha-2](https://www.iban.com/country-codes) format. */
        merchantFulfillmentV0_CountryCode: string;
        /** @description Request schema. */
        merchantFulfillmentV0_CreateShipmentRequest: {
            HazmatType?: components["schemas"]["merchantFulfillmentV0_HazmatType"];
            LabelFormatOption?: components["schemas"]["merchantFulfillmentV0_LabelFormatOptionRequest"];
            ShipmentLevelSellerInputsList?: components["schemas"]["merchantFulfillmentV0_AdditionalSellerInputsList"];
            ShipmentRequestDetails: components["schemas"]["merchantFulfillmentV0_ShipmentRequestDetails"];
            ShippingServiceId: components["schemas"]["merchantFulfillmentV0_ShippingServiceIdentifier"];
            /** @description Identifies a shipping service order made by a carrier. */
            ShippingServiceOfferId?: string;
        };
        /** @description Response schema. */
        merchantFulfillmentV0_CreateShipmentResponse: {
            errors?: components["schemas"]["merchantFulfillmentV0_ErrorList"];
            payload?: components["schemas"]["merchantFulfillmentV0_Shipment"];
        };
        /** @description Currency type and amount. */
        merchantFulfillmentV0_CurrencyAmount: {
            /**
             * Format: double
             * @description The currency amount.
             */
            Amount: number;
            /** @description Three-digit currency code in ISO 4217 format. */
            CurrencyCode: string;
        };
        /** @description Custom text to print on the label. Note: Custom text is only included on labels that are in ZPL format (ZPL203). FedEx does not support `CustomTextForLabel`. */
        merchantFulfillmentV0_CustomTextForLabel: string;
        /** @description Details related to any dangerous goods or items that are shipped. */
        merchantFulfillmentV0_DangerousGoodsDetails: {
            /**
             * @description The specific packaging group of the item being shipped.
             * @enum {string}
             */
            PackingGroup?: "I" | "II" | "III";
            /**
             * @description The specific packing instruction of the item being shipped.
             * @enum {string}
             */
            PackingInstruction?: "PI965_SECTION_IA" | "PI965_SECTION_IB" | "PI965_SECTION_II" | "PI966_SECTION_I" | "PI966_SECTION_II" | "PI967_SECTION_I" | "PI967_SECTION_II" | "PI968_SECTION_IA" | "PI968_SECTION_IB" | "PI969_SECTION_I" | "PI969_SECTION_II" | "PI970_SECTION_I" | "PI970_SECTION_II";
            /** @description The specific regulatory class of the shipped item. */
            TransportationRegulatoryClass?: string;
            /** @description The specific UNID of the item being shipped. */
            UnitedNationsRegulatoryId?: string;
        };
        /**
         * @description The delivery confirmation level.
         * @enum {string}
         */
        merchantFulfillmentV0_DeliveryExperienceOption: "DeliveryConfirmationWithAdultSignature" | "DeliveryConfirmationWithSignature" | "DeliveryConfirmationWithoutSignature" | "NoTracking" | "NoPreference";
        /**
         * @description The delivery confirmation level.
         * @enum {string}
         */
        merchantFulfillmentV0_DeliveryExperienceType: "DeliveryConfirmationWithAdultSignature" | "DeliveryConfirmationWithSignature" | "DeliveryConfirmationWithoutSignature" | "NoTracking";
        /** @description The district or county. */
        merchantFulfillmentV0_DistrictOrCounty: string;
        /** @description The email address. */
        merchantFulfillmentV0_EmailAddress: string;
        /** @description Error response returned when the request is unsuccessful. */
        merchantFulfillmentV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        merchantFulfillmentV0_ErrorList: components["schemas"]["merchantFulfillmentV0_Error"][];
        /** @description An object representing an excluded benefit that is excluded for a shipping offer or rate. */
        merchantFulfillmentV0_ExcludedBenefit: {
            /** @description A benefit that is being excluded from a shipment. */
            Benefit?: string;
            ReasonCodes?: components["schemas"]["merchantFulfillmentV0_ExcludedBenefitReasonCodes"];
        };
        /** @description List of reasons why a benefit is excluded for a shipping offer (for example, `LATE_DELIVERY_RISK`). */
        merchantFulfillmentV0_ExcludedBenefitReasonCodes: string[];
        /** @description A list of excluded benefits. Refer to the `ExcludeBenefit` object for further documentation. */
        merchantFulfillmentV0_ExcludedBenefits: components["schemas"]["merchantFulfillmentV0_ExcludedBenefit"][];
        /** @description The document data and checksum. */
        merchantFulfillmentV0_FileContents: {
            /** @description An MD5 hash to validate the PDF document data, in the form of a Base64 string. */
            Checksum: string;
            /** @description Data for printing labels encoded into a Base64, GZip-compressed string. */
            Contents: string;
            FileType: components["schemas"]["merchantFulfillmentV0_FileType"];
        };
        /**
         * @description The file type for a label.
         * @enum {string}
         */
        merchantFulfillmentV0_FileType: "application/pdf" | "application/zpl" | "image/png";
        /** @description Request schema. */
        merchantFulfillmentV0_GetAdditionalSellerInputsRequest: {
            OrderId: components["schemas"]["merchantFulfillmentV0_AmazonOrderId"];
            ShipFromAddress: components["schemas"]["merchantFulfillmentV0_Address"];
            ShippingServiceId: components["schemas"]["merchantFulfillmentV0_ShippingServiceIdentifier"];
        };
        /** @description Response schema. */
        merchantFulfillmentV0_GetAdditionalSellerInputsResponse: {
            errors?: components["schemas"]["merchantFulfillmentV0_ErrorList"];
            payload?: components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResult"];
        };
        /** @description The payload for the `getAdditionalSellerInputs` operation. */
        merchantFulfillmentV0_GetAdditionalSellerInputsResult: {
            ItemLevelFieldsList?: components["schemas"]["merchantFulfillmentV0_ItemLevelFieldsList"];
            ShipmentLevelFields?: components["schemas"]["merchantFulfillmentV0_AdditionalInputsList"];
        };
        /** @description Request schema. */
        merchantFulfillmentV0_GetEligibleShipmentServicesRequest: {
            ShipmentRequestDetails: components["schemas"]["merchantFulfillmentV0_ShipmentRequestDetails"];
            ShippingOfferingFilter?: components["schemas"]["merchantFulfillmentV0_ShippingOfferingFilter"];
        };
        /** @description Response schema. */
        merchantFulfillmentV0_GetEligibleShipmentServicesResponse: {
            errors?: components["schemas"]["merchantFulfillmentV0_ErrorList"];
            payload?: components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResult"];
        };
        /** @description The payload for the `getEligibleShipmentServices` operation. */
        merchantFulfillmentV0_GetEligibleShipmentServicesResult: {
            RejectedShippingServiceList?: components["schemas"]["merchantFulfillmentV0_RejectedShippingServiceList"];
            ShippingServiceList: components["schemas"]["merchantFulfillmentV0_ShippingServiceList"];
            TemporarilyUnavailableCarrierList?: components["schemas"]["merchantFulfillmentV0_TemporarilyUnavailableCarrierList"];
            TermsAndConditionsNotAcceptedCarrierList?: components["schemas"]["merchantFulfillmentV0_TermsAndConditionsNotAcceptedCarrierList"];
        };
        /** @description Response schema. */
        merchantFulfillmentV0_GetShipmentResponse: {
            errors?: components["schemas"]["merchantFulfillmentV0_ErrorList"];
            payload?: components["schemas"]["merchantFulfillmentV0_Shipment"];
        };
        /**
         * @description Hazardous materials options for a package. Consult the terms and conditions for each carrier for more information on hazardous materials.
         * @enum {string}
         */
        merchantFulfillmentV0_HazmatType: "None" | "LQHazmat";
        /** @description A list of included benefits. */
        merchantFulfillmentV0_IncludedBenefits: string[];
        /**
         * @description Indicates whether the additional seller input is at the item or shipment level.
         * @enum {string}
         */
        merchantFulfillmentV0_InputTargetType: "SHIPMENT_LEVEL" | "ITEM_LEVEL";
        /** @description An Amazon order item identifier and a quantity. */
        merchantFulfillmentV0_Item: {
            DangerousGoodsDetails?: components["schemas"]["merchantFulfillmentV0_DangerousGoodsDetails"];
            /** @description When true, the item qualifies as hazardous materials (hazmat). Defaults to false. */
            IsHazmat?: boolean;
            ItemDescription?: components["schemas"]["merchantFulfillmentV0_ItemDescription"];
            ItemLevelSellerInputsList?: components["schemas"]["merchantFulfillmentV0_AdditionalSellerInputsList"];
            ItemWeight?: components["schemas"]["merchantFulfillmentV0_Weight"];
            LiquidVolume?: components["schemas"]["merchantFulfillmentV0_LiquidVolume"];
            OrderItemId: components["schemas"]["merchantFulfillmentV0_OrderItemId"];
            Quantity: components["schemas"]["merchantFulfillmentV0_ItemQuantity"];
            TransparencyCodeList?: components["schemas"]["merchantFulfillmentV0_TransparencyCodeList"];
        };
        /** @description The description of the item. */
        merchantFulfillmentV0_ItemDescription: string;
        /** @description A list of item level fields. */
        merchantFulfillmentV0_ItemLevelFields: {
            AdditionalInputs: components["schemas"]["merchantFulfillmentV0_AdditionalInputsList"];
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            Asin: string;
        };
        /** @description A list of item level fields. */
        merchantFulfillmentV0_ItemLevelFieldsList: components["schemas"]["merchantFulfillmentV0_ItemLevelFields"][];
        /** @description The list of items you want to include in a shipment. */
        merchantFulfillmentV0_ItemList: components["schemas"]["merchantFulfillmentV0_Item"][];
        /**
         * Format: int32
         * @description The number of items.
         */
        merchantFulfillmentV0_ItemQuantity: number;
        /** @description Data for creating a shipping label and dimensions for printing the label. */
        merchantFulfillmentV0_Label: {
            CustomTextForLabel?: components["schemas"]["merchantFulfillmentV0_CustomTextForLabel"];
            Dimensions: components["schemas"]["merchantFulfillmentV0_LabelDimensions"];
            FileContents: components["schemas"]["merchantFulfillmentV0_FileContents"];
            LabelFormat?: components["schemas"]["merchantFulfillmentV0_LabelFormat"];
            StandardIdForLabel?: components["schemas"]["merchantFulfillmentV0_StandardIdForLabel"];
        };
        /** @description Custom text for shipping labels. */
        merchantFulfillmentV0_LabelCustomization: {
            CustomTextForLabel?: components["schemas"]["merchantFulfillmentV0_CustomTextForLabel"];
            StandardIdForLabel?: components["schemas"]["merchantFulfillmentV0_StandardIdForLabel"];
        };
        /** @description A label dimension. */
        merchantFulfillmentV0_LabelDimension: number;
        /** @description Dimensions for printing a shipping label. */
        merchantFulfillmentV0_LabelDimensions: {
            Length: components["schemas"]["merchantFulfillmentV0_LabelDimension"];
            Unit: components["schemas"]["merchantFulfillmentV0_UnitOfLength"];
            Width: components["schemas"]["merchantFulfillmentV0_LabelDimension"];
        };
        /**
         * @description The label format.
         * @enum {string}
         */
        merchantFulfillmentV0_LabelFormat: "PDF" | "PNG" | "ZPL203" | "ZPL300" | "ShippingServiceDefault";
        /** @description List of label formats. */
        merchantFulfillmentV0_LabelFormatList: components["schemas"]["merchantFulfillmentV0_LabelFormat"][];
        /** @description The label format details and whether to include a packing slip. */
        merchantFulfillmentV0_LabelFormatOption: {
            /** @description When true, include a packing slip with the label. */
            IncludePackingSlipWithLabel?: boolean;
            LabelFormat?: components["schemas"]["merchantFulfillmentV0_LabelFormat"];
        };
        /** @description Whether to include a packing slip. */
        merchantFulfillmentV0_LabelFormatOptionRequest: {
            /** @description When true, include a packing slip with the label. */
            IncludePackingSlipWithLabel?: boolean;
        };
        /** @description The length. */
        merchantFulfillmentV0_Length: {
            unit?: components["schemas"]["merchantFulfillmentV0_UnitOfLength"];
            /** @description The value in units. */
            value?: number;
        };
        /** @description Liquid volume. */
        merchantFulfillmentV0_LiquidVolume: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            Unit: "ML" | "L" | "FL_OZ" | "GAL" | "PT" | "QT" | "C";
            /** @description The measurement value. */
            Value: number;
        };
        /** @description An Amazon-defined identifier for an individual item in an order. */
        merchantFulfillmentV0_OrderItemId: string;
        /**
         * Format: double
         * @description A number that represents the given package dimension.
         */
        merchantFulfillmentV0_PackageDimension: number;
        /** @description The dimensions of a package contained in a shipment. */
        merchantFulfillmentV0_PackageDimensions: {
            Height?: components["schemas"]["merchantFulfillmentV0_PackageDimension"];
            Length?: components["schemas"]["merchantFulfillmentV0_PackageDimension"];
            PredefinedPackageDimensions?: components["schemas"]["merchantFulfillmentV0_PredefinedPackageDimensions"];
            Unit?: components["schemas"]["merchantFulfillmentV0_UnitOfLength"];
            Width?: components["schemas"]["merchantFulfillmentV0_PackageDimension"];
        };
        /** @description The phone number. */
        merchantFulfillmentV0_PhoneNumber: string;
        /** @description The zip code or postal code. */
        merchantFulfillmentV0_PostalCode: string;
        /**
         * @description An enumeration of predefined parcel tokens. If you specify a `PredefinedPackageDimensions` token, you are not obligated to use a branded package from a carrier. For example, if you specify the `FedEx_Box_10kg` token, you do not have to use that particular package from FedEx. You are only obligated to use a box that matches the dimensions specified by the token. Note: Carriers can have restrictions on the type of package allowed for certain ship methods. Check the carrier website for details. Example: Flat rate pricing is available when materials are sent by USPS in a USPS-produced Flat Rate envelope or box.
         * @enum {string}
         */
        merchantFulfillmentV0_PredefinedPackageDimensions: "FedEx_Box_10kg" | "FedEx_Box_25kg" | "FedEx_Box_Extra_Large_1" | "FedEx_Box_Extra_Large_2" | "FedEx_Box_Large_1" | "FedEx_Box_Large_2" | "FedEx_Box_Medium_1" | "FedEx_Box_Medium_2" | "FedEx_Box_Small_1" | "FedEx_Box_Small_2" | "FedEx_Envelope" | "FedEx_Padded_Pak" | "FedEx_Pak_1" | "FedEx_Pak_2" | "FedEx_Tube" | "FedEx_XL_Pak" | "UPS_Box_10kg" | "UPS_Box_25kg" | "UPS_Express_Box" | "UPS_Express_Box_Large" | "UPS_Express_Box_Medium" | "UPS_Express_Box_Small" | "UPS_Express_Envelope" | "UPS_Express_Hard_Pak" | "UPS_Express_Legal_Envelope" | "UPS_Express_Pak" | "UPS_Express_Tube" | "UPS_Laboratory_Pak" | "UPS_Pad_Pak" | "UPS_Pallet" | "USPS_Card" | "USPS_Flat" | "USPS_FlatRateCardboardEnvelope" | "USPS_FlatRateEnvelope" | "USPS_FlatRateGiftCardEnvelope" | "USPS_FlatRateLegalEnvelope" | "USPS_FlatRatePaddedEnvelope" | "USPS_FlatRateWindowEnvelope" | "USPS_LargeFlatRateBoardGameBox" | "USPS_LargeFlatRateBox" | "USPS_Letter" | "USPS_MediumFlatRateBox1" | "USPS_MediumFlatRateBox2" | "USPS_RegionalRateBoxA1" | "USPS_RegionalRateBoxA2" | "USPS_RegionalRateBoxB1" | "USPS_RegionalRateBoxB2" | "USPS_RegionalRateBoxC" | "USPS_SmallFlatRateBox" | "USPS_SmallFlatRateEnvelope";
        /** @description Rate item for shipping costs and adjustments. */
        merchantFulfillmentV0_RateItem: {
            RateItemCharge?: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            RateItemID: components["schemas"]["merchantFulfillmentV0_RateItemID"];
            /** @description Localized name for the RateItem. */
            RateItemNameLocalization?: string;
            RateItemType?: components["schemas"]["merchantFulfillmentV0_RateItemType"];
        };
        /**
         * @description Unique identifier for the RateItem.
         * @enum {string}
         */
        merchantFulfillmentV0_RateItemID: "FBM_SHIP_PLUS_CREDIT";
        /**
         * @description Type for the RateItem.
         * @enum {string}
         */
        merchantFulfillmentV0_RateItemType: "INCLUDED";
        /** @description Information about a rejected shipping service */
        merchantFulfillmentV0_RejectedShippingService: {
            /** @description The rejected shipping carrier name. For example, USPS. */
            CarrierName: string;
            /** @description A reason code meant to be consumed programatically. For example, `CARRIER_CANNOT_SHIP_TO_POBOX`. */
            RejectionReasonCode: string;
            /** @description A localized human readable description of the rejected reason. */
            RejectionReasonMessage?: string;
            ShippingServiceId: components["schemas"]["merchantFulfillmentV0_ShippingServiceIdentifier"];
            /** @description The rejected shipping service localized name. For example, FedEx Standard Overnight. */
            ShippingServiceName: string;
        };
        /** @description List of services that are for some reason unavailable for this request */
        merchantFulfillmentV0_RejectedShippingServiceList: components["schemas"]["merchantFulfillmentV0_RejectedShippingService"][];
        /** @description The set of fixed values in an additional seller input. */
        merchantFulfillmentV0_RestrictedSetValues: string[];
        /** @description Specifies characteristics that apply to a seller input. */
        merchantFulfillmentV0_SellerInputDefinition: {
            Constraints: components["schemas"]["merchantFulfillmentV0_Constraints"];
            /** @description The data type of the additional input field. */
            DataType: string;
            /** @description The display text for the additional input field. */
            InputDisplayText: string;
            InputTarget?: components["schemas"]["merchantFulfillmentV0_InputTargetType"];
            /** @description When true, the additional input field is required. */
            IsRequired: boolean;
            RestrictedSetValues?: components["schemas"]["merchantFulfillmentV0_RestrictedSetValues"];
            StoredValue: components["schemas"]["merchantFulfillmentV0_AdditionalSellerInput"];
        };
        /** @description A seller-defined order identifier. */
        merchantFulfillmentV0_SellerOrderId: string;
        /** @description The details of a shipment. Includes the shipment status. */
        merchantFulfillmentV0_Shipment: {
            AmazonOrderId: components["schemas"]["merchantFulfillmentV0_AmazonOrderId"];
            CreatedDate: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            Insurance: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            ItemList: components["schemas"]["merchantFulfillmentV0_ItemList"];
            Label: components["schemas"]["merchantFulfillmentV0_Label"];
            LastUpdatedDate?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            PackageDimensions: components["schemas"]["merchantFulfillmentV0_PackageDimensions"];
            SellerOrderId?: components["schemas"]["merchantFulfillmentV0_SellerOrderId"];
            ShipFromAddress: components["schemas"]["merchantFulfillmentV0_Address"];
            ShipmentId: components["schemas"]["merchantFulfillmentV0_ShipmentId"];
            ShippingService: components["schemas"]["merchantFulfillmentV0_ShippingService"];
            ShipToAddress: components["schemas"]["merchantFulfillmentV0_Address"];
            Status: components["schemas"]["merchantFulfillmentV0_ShipmentStatus"];
            TrackingId?: components["schemas"]["merchantFulfillmentV0_TrackingId"];
            Weight: components["schemas"]["merchantFulfillmentV0_Weight"];
        };
        /** @description An Amazon-defined shipment identifier. */
        merchantFulfillmentV0_ShipmentId: string;
        /** @description Shipment information required for requesting shipping service offers or for creating a shipment. */
        merchantFulfillmentV0_ShipmentRequestDetails: {
            AmazonOrderId: components["schemas"]["merchantFulfillmentV0_AmazonOrderId"];
            ItemList: components["schemas"]["merchantFulfillmentV0_ItemList"];
            LabelCustomization?: components["schemas"]["merchantFulfillmentV0_LabelCustomization"];
            MustArriveByDate?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            PackageDimensions: components["schemas"]["merchantFulfillmentV0_PackageDimensions"];
            SellerOrderId?: components["schemas"]["merchantFulfillmentV0_SellerOrderId"];
            ShipDate?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            ShipFromAddress: components["schemas"]["merchantFulfillmentV0_Address"];
            ShippingServiceOptions: components["schemas"]["merchantFulfillmentV0_ShippingServiceOptions"];
            Weight: components["schemas"]["merchantFulfillmentV0_Weight"];
        };
        /**
         * @description The shipment status.
         * @enum {string}
         */
        merchantFulfillmentV0_ShipmentStatus: "Purchased" | "RefundPending" | "RefundRejected" | "RefundApplied";
        /** @description Filter for use when requesting eligible shipping services. */
        merchantFulfillmentV0_ShippingOfferingFilter: {
            CarrierWillPickUp?: components["schemas"]["merchantFulfillmentV0_CarrierWillPickUpOption"];
            DeliveryExperience?: components["schemas"]["merchantFulfillmentV0_DeliveryExperienceOption"];
            /** @description When true, include complex shipping options. */
            IncludeComplexShippingOptions?: boolean;
            /** @description When true, include a packing slip with the label. */
            IncludePackingSlipWithLabel?: boolean;
        };
        /** @description A shipping service offer made by a carrier. */
        merchantFulfillmentV0_ShippingService: {
            AdjustmentItemList?: components["schemas"]["merchantFulfillmentV0_AdjustmentItemList"];
            AvailableFormatOptionsForLabel?: components["schemas"]["merchantFulfillmentV0_AvailableFormatOptionsForLabelList"];
            AvailableLabelFormats?: components["schemas"]["merchantFulfillmentV0_LabelFormatList"];
            AvailableShippingServiceOptions?: components["schemas"]["merchantFulfillmentV0_AvailableShippingServiceOptions"];
            Benefits?: components["schemas"]["merchantFulfillmentV0_Benefits"];
            /** @description The name of the carrier. */
            CarrierName: string;
            EarliestEstimatedDeliveryDate?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            LatestEstimatedDeliveryDate?: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            Rate: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            RateWithAdjustments: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            /** @description When true, additional seller inputs are required. */
            RequiresAdditionalSellerInputs: boolean;
            ShipDate: components["schemas"]["merchantFulfillmentV0_Timestamp"];
            ShippingServiceId: components["schemas"]["merchantFulfillmentV0_ShippingServiceIdentifier"];
            /** @description A plain text representation of a carrier's shipping service. For example, "UPS Ground" or "FedEx Standard Overnight".  */
            ShippingServiceName: string;
            /** @description An Amazon-defined shipping service offer identifier. */
            ShippingServiceOfferId: string;
            ShippingServiceOptions: components["schemas"]["merchantFulfillmentV0_ShippingServiceOptions"];
        };
        /** @description An Amazon-defined shipping service identifier. */
        merchantFulfillmentV0_ShippingServiceIdentifier: string;
        /** @description A list of shipping services offers. */
        merchantFulfillmentV0_ShippingServiceList: components["schemas"]["merchantFulfillmentV0_ShippingService"][];
        /** @description Extra services provided by a carrier. */
        merchantFulfillmentV0_ShippingServiceOptions: {
            /** @description When true, the carrier will pick up the package. Note: Scheduled carrier pickup is available only using Dynamex (US), DPD (UK), and Royal Mail (UK). */
            CarrierWillPickUp: boolean;
            CarrierWillPickUpOption?: components["schemas"]["merchantFulfillmentV0_CarrierWillPickUpOption"];
            DeclaredValue?: components["schemas"]["merchantFulfillmentV0_CurrencyAmount"];
            DeliveryExperience: components["schemas"]["merchantFulfillmentV0_DeliveryExperienceType"];
            LabelFormat?: components["schemas"]["merchantFulfillmentV0_LabelFormat"];
        };
        /**
         * @description The type of standard identifier to print on the label.
         * @enum {string}
         */
        merchantFulfillmentV0_StandardIdForLabel: "AmazonOrderId";
        /** @description The state or province code. This is a required field in Canada, US, and UK marketplaces, and for shipments that originate in China. */
        merchantFulfillmentV0_StateOrProvinceCode: string;
        /** @description A carrier who is temporarily unavailable, most likely due to a service outage experienced by the carrier. */
        merchantFulfillmentV0_TemporarilyUnavailableCarrier: {
            /** @description The name of the carrier. */
            CarrierName: string;
        };
        /** @description A list of temporarily unavailable carriers. */
        merchantFulfillmentV0_TemporarilyUnavailableCarrierList: components["schemas"]["merchantFulfillmentV0_TemporarilyUnavailableCarrier"][];
        /** @description A carrier whose terms and conditions have not been accepted by the seller. */
        merchantFulfillmentV0_TermsAndConditionsNotAcceptedCarrier: {
            /** @description The name of the carrier. */
            CarrierName: string;
        };
        /** @description List of carriers whose terms and conditions were not accepted by the seller. */
        merchantFulfillmentV0_TermsAndConditionsNotAcceptedCarrierList: components["schemas"]["merchantFulfillmentV0_TermsAndConditionsNotAcceptedCarrier"][];
        /**
         * Format: date-time
         * @description Date-time formatted timestamp.
         */
        merchantFulfillmentV0_Timestamp: string;
        /** @description The shipment tracking identifier provided by the carrier. */
        merchantFulfillmentV0_TrackingId: string;
        /** @description The transparency code associated with the item. Determine the transparency serial number with:
         *
         *     **1D or 2D barcode:** This has a **T** logo. Submit either the 29-character alpha-numeric identifier beginning with **AZ** or **ZA**, or the 38-character Serialized Global Trade Item Number (SGTIN).
         *     **2D barcode SN:** Submit the 7- to 20-character serial number barcode, that likely has the prefix **SN**. The serial number is applied to the same side of the packaging as the GTIN (UPC/EAN/ISBN) barcode.
         *     **QR code SN:** Submit the URL that the QR code generates. */
        merchantFulfillmentV0_TransparencyCode: string;
        /** @description A list of transparency codes. */
        merchantFulfillmentV0_TransparencyCodeList: components["schemas"]["merchantFulfillmentV0_TransparencyCode"][];
        /**
         * @description The unit of length.
         * @enum {string}
         */
        merchantFulfillmentV0_UnitOfLength: "inches" | "centimeters";
        /**
         * @description The unit of weight.
         * @enum {string}
         */
        merchantFulfillmentV0_UnitOfWeight: "oz" | "g";
        /** @description The weight. */
        merchantFulfillmentV0_Weight: {
            Unit: components["schemas"]["merchantFulfillmentV0_UnitOfWeight"];
            Value: components["schemas"]["merchantFulfillmentV0_WeightValue"];
        };
        /**
         * Format: double
         * @description The weight value.
         */
        merchantFulfillmentV0_WeightValue: number;
        /** @description Represents a file that was uploaded to a destination that was created by the Uploads API [`createUploadDestinationForResource`](https://developer-docs.amazon.com/sp-api/reference/createuploaddestinationforresource) operation. */
        messaging_Attachment: {
            /** @description The name of the file, including the extension. This is the file name that will appear in the message. This does not need to match the file name of the file that you uploaded. */
            fileName: string;
            /** @description The identifier for the upload destination. To retrieve this value, call the Uploads API [`createUploadDestinationForResource`](https://developer-docs.amazon.com/sp-api/reference/createuploaddestinationforresource) operation. */
            uploadDestinationId: string;
        };
        /** @description The request schema for the createAmazonMotors operation. */
        messaging_CreateAmazonMotorsRequest: {
            /** @description Attachments to include in the message to the buyer. If any text is included in the attachment, the text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            attachments?: components["schemas"]["messaging_Attachment"][];
        };
        /** @description The response schema for the createAmazonMotors operation. */
        messaging_CreateAmazonMotorsResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the confirmCustomizationDetails operation. */
        messaging_CreateConfirmCustomizationDetailsRequest: {
            /** @description Attachments to include in the message to the buyer. */
            attachments?: components["schemas"]["messaging_Attachment"][];
            /** @description The text to be sent to the buyer. Only links related to customization details are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            text?: string;
        };
        /** @description The response schema for the confirmCustomizationDetails operation. */
        messaging_CreateConfirmCustomizationDetailsResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createConfirmDeliveryDetails operation. */
        messaging_CreateConfirmDeliveryDetailsRequest: {
            /** @description The text to be sent to the buyer. Only links related to order delivery are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            text?: string;
        };
        /** @description The response schema for the createConfirmDeliveryDetails operation. */
        messaging_CreateConfirmDeliveryDetailsResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createConfirmOrderDetails operation. */
        messaging_CreateConfirmOrderDetailsRequest: {
            /** @description The text to be sent to the buyer. Only links related to order completion are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            text?: string;
        };
        /** @description The response schema for the createConfirmOrderDetails operation. */
        messaging_CreateConfirmOrderDetailsResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createConfirmServiceDetails operation. */
        messaging_CreateConfirmServiceDetailsRequest: {
            /** @description The text to be sent to the buyer. Only links related to Home Service calls are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            text?: string;
        };
        /** @description The response schema for the createConfirmServiceDetails operation. */
        messaging_CreateConfirmServiceDetailsResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the `createDigitalAccessKey` operation. */
        messaging_CreateDigitalAccessKeyRequest: {
            /** @description Attachments that you want to include in the message to the buyer. */
            attachments?: components["schemas"]["messaging_Attachment"][];
            /** @description The text that is sent to the buyer. Only links that are related to the digital access key are allowed. Do not include HTML or email addresses. The text must be written in the buyer's preferred language, which you can retrieve from the `GetAttributes` operation. */
            text?: string;
        };
        /** @description The response schema for the `createDigitalAccessKey` operation. */
        messaging_CreateDigitalAccessKeyResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createLegalDisclosure operation. */
        messaging_CreateLegalDisclosureRequest: {
            /** @description Attachments to include in the message to the buyer. If any text is included in the attachment, the text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            attachments?: components["schemas"]["messaging_Attachment"][];
        };
        /** @description The response schema for the createLegalDisclosure operation. */
        messaging_CreateLegalDisclosureResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createUnexpectedProblem operation. */
        messaging_CreateUnexpectedProblemRequest: {
            /** @description The text to be sent to the buyer. Only links related to unexpected problem calls are allowed. Do not include HTML or email addresses. The text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            text?: string;
        };
        /** @description The response schema for the createUnexpectedProblem operation. */
        messaging_CreateUnexpectedProblemResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The request schema for the createWarranty operation. */
        messaging_CreateWarrantyRequest: {
            /** @description Attachments to include in the message to the buyer. If any text is included in the attachment, the text must be written in the buyer's language of preference, which can be retrieved from the GetAttributes operation. */
            attachments?: components["schemas"]["messaging_Attachment"][];
            /**
             * Format: date-time
             * @description The end date of the warranty coverage to include in the message to the buyer.
             */
            coverageEndDate?: string;
            /**
             * Format: date-time
             * @description The start date of the warranty coverage to include in the message to the buyer.
             */
            coverageStartDate?: string;
        };
        /** @description The response schema for the createWarranty operation. */
        messaging_CreateWarrantyResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        messaging_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        messaging_ErrorList: components["schemas"]["messaging_Error"][];
        /** @description The response schema for the GetAttributes operation. */
        messaging_GetAttributesResponse: {
            /** @description The list of attributes related to the buyer. */
            buyer?: {
                /** @description The buyer's language of preference, indicated with a locale-specific language tag. Examples: "en-US", "zh-CN", and "en-GB". */
                locale?: string;
            };
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description Describes a messaging action that can be taken for an order. Provides a JSON Hypertext Application Language (HAL) link to the JSON schema document that describes the expected input. */
        messaging_GetMessagingActionResponse: {
            /** @description The embedded response associated with the messaging action. */
            _embedded?: {
                schema?: components["schemas"]["messaging_GetSchemaResponse"];
            };
            /** @description The links response that is associated with the messaging action. */
            _links?: {
                schema: components["schemas"]["messaging_LinkObject"];
                self: components["schemas"]["messaging_LinkObject"];
            };
            errors?: components["schemas"]["messaging_ErrorList"];
            payload?: components["schemas"]["messaging_MessagingAction"];
        };
        /** @description The response schema for the `getMessagingActionsForOrder` operation. */
        messaging_GetMessagingActionsForOrderResponse: {
            /** @description The messaging actions response that is associated with the specified `amazonOrderId`. */
            _embedded?: {
                actions: components["schemas"]["messaging_GetMessagingActionResponse"][];
            };
            /** @description The links response that is associated with the specified `amazonOrderId`. */
            _links?: {
                /** @description Eligible actions for the specified amazonOrderId. */
                actions: components["schemas"]["messaging_LinkObject"][];
                self: components["schemas"]["messaging_LinkObject"];
            };
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description The `GET` request schema response. */
        messaging_GetSchemaResponse: {
            /** @description The links response that is associated with the object. */
            _links?: {
                self: components["schemas"]["messaging_LinkObject"];
            };
            errors?: components["schemas"]["messaging_ErrorList"];
            payload?: components["schemas"]["messaging_Schema"];
        };
        /** @description The request schema for the `sendInvoice` operation. */
        messaging_InvoiceRequest: {
            /** @description Attachments to include in the message to the buyer. */
            attachments?: components["schemas"]["messaging_Attachment"][];
        };
        /** @description The response schema for the sendInvoice operation. */
        messaging_InvoiceResponse: {
            errors?: components["schemas"]["messaging_ErrorList"];
        };
        /** @description A Link object. */
        messaging_LinkObject: {
            /** @description A URI for this object. */
            href: string;
            /** @description An identifier for this object. */
            name?: string;
        };
        /** @description A simple object containing the name of the template. */
        messaging_MessagingAction: {
            /** @description The name of the template. */
            name: string;
        };
        /** @description A JSON schema document describing the expected payload of the action. This object can be validated against <a href=http://json-schema.org/draft-04/schema>http://json-schema.org/draft-04/schema</a>. */
        messaging_Schema: {
            [key: string]: unknown;
        };
        /** @description A filter used to select the aggregation time period at which to send notifications (for example: limit to one notification every five minutes for high frequency notifications). */
        notifications_AggregationFilter: {
            aggregationSettings?: components["schemas"]["notifications_AggregationSettings"];
        };
        /** @description A container that holds all of the necessary properties to configure the aggregation of notifications. */
        notifications_AggregationSettings: {
            aggregationTimePeriod: components["schemas"]["notifications_AggregationTimePeriod"];
        };
        /**
         * @description The supported aggregation time periods. For example, if FiveMinutes is the value chosen, and 50 price updates occur for an ASIN within 5 minutes, Amazon will send only two notifications; one for the first event, and then a subsequent notification 5 minutes later with the final end state of the data. The 48 interim events will be dropped.
         * @enum {string}
         */
        notifications_AggregationTimePeriod: "FiveMinutes" | "TenMinutes";
        /** @description The request schema for the `createDestination` operation. */
        notifications_CreateDestinationRequest: {
            /** @description A developer-defined name to help identify this destination. */
            name: string;
            resourceSpecification: components["schemas"]["notifications_DestinationResourceSpecification"];
        };
        /** @description The response schema for the createDestination operation. */
        notifications_CreateDestinationResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_Destination"];
        };
        /** @description The request schema for the `createSubscription` operation. */
        notifications_CreateSubscriptionRequest: {
            /** @description The identifier for the destination where notifications will be delivered. */
            destinationId: string;
            /** @description The version of the payload object to be used in the notification. */
            payloadVersion: string;
            processingDirective?: components["schemas"]["notifications_ProcessingDirective"];
        };
        /** @description The response schema for the `createSubscription` operation. */
        notifications_CreateSubscriptionResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_Subscription"];
        };
        /** @description The response schema for the `deleteDestination` operation. */
        notifications_DeleteDestinationResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
        };
        /** @description The response schema for the `deleteSubscriptionById` operation. */
        notifications_DeleteSubscriptionByIdResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
        };
        /** @description Information about the destination created when you call the `createDestination` operation. */
        notifications_Destination: {
            /** @description The destination identifier generated when you created the destination. */
            destinationId: string;
            /** @description The developer-defined name for this destination. */
            name: string;
            resource: components["schemas"]["notifications_DestinationResource"];
        };
        /** @description A list of destinations. */
        notifications_DestinationList: components["schemas"]["notifications_Destination"][];
        /** @description The destination resource types. */
        notifications_DestinationResource: {
            eventBridge?: components["schemas"]["notifications_EventBridgeResource"];
            sqs?: components["schemas"]["notifications_SqsResource"];
        };
        /** @description The information required to create a destination resource. Applications should use one resource type (sqs or eventBridge) per destination. */
        notifications_DestinationResourceSpecification: {
            eventBridge?: components["schemas"]["notifications_EventBridgeResourceSpecification"];
            sqs?: components["schemas"]["notifications_SqsResource"];
        };
        /** @description An error response returned when the request is unsuccessful. */
        notifications_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        notifications_ErrorList: components["schemas"]["notifications_Error"][];
        /** @description The Amazon EventBridge destination. */
        notifications_EventBridgeResource: {
            /** @description The identifier for the AWS account that is responsible for charges related to receiving notifications. */
            accountId: string;
            /** @description The name of the partner event source associated with the destination. */
            name: string;
            /** @description The AWS region in which you receive the notifications. For AWS regions that are supported in Amazon EventBridge, refer to [Amazon EventBridge endpoints and quotas](https://docs.aws.amazon.com/general/latest/gr/ev.html). */
            region: string;
        };
        /** @description The information required to create an Amazon EventBridge destination. */
        notifications_EventBridgeResourceSpecification: {
            /** @description The identifier for the AWS account that is responsible for charges related to receiving notifications. */
            accountId: string;
            /** @description The AWS region in which you will be receiving the notifications. */
            region: string;
        };
        /** @description A `notificationType` specific filter. This object contains all of the currently available filters and properties that you can use to define a `notificationType` specific filter. */
        notifications_EventFilter: components["schemas"]["notifications_AggregationFilter"] & components["schemas"]["notifications_MarketplaceFilter"] & components["schemas"]["notifications_OrderChangeTypeFilter"] & {
            /**
             * @description An `eventFilterType` value that is supported by the specific `notificationType`. This is used by the subscription service to determine the type of event filter. Refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values) to determine if an `eventFilterType` is supported.
             * @enum {string}
             */
            eventFilterType: "ANY_OFFER_CHANGED" | "ORDER_CHANGE";
        };
        /** @description The response schema for the `getDestination` operation. */
        notifications_GetDestinationResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_Destination"];
        };
        /** @description The response schema for the `getDestinations` operation. */
        notifications_GetDestinationsResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_DestinationList"];
        };
        /** @description The response schema for the `getSubscriptionById` operation. */
        notifications_GetSubscriptionByIdResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_Subscription"];
        };
        /** @description The response schema for the `getSubscription` operation. */
        notifications_GetSubscriptionResponse: {
            errors?: components["schemas"]["notifications_ErrorList"];
            payload?: components["schemas"]["notifications_Subscription"];
        };
        /** @description An event filter to customize your subscription to send notifications for only the specified `marketplaceId`s. */
        notifications_MarketplaceFilter: {
            marketplaceIds?: components["schemas"]["notifications_MarketplaceIds"];
        };
        /** @description A list of marketplace identifiers to subscribe to (for example: ATVPDKIKX0DER). To receive notifications in every marketplace, do not provide this list. */
        notifications_MarketplaceIds: string[];
        /**
         * @description The supported order change type of ORDER_CHANGE notification.
         * @enum {string}
         */
        notifications_OrderChangeTypeEnum: "OrderStatusChange" | "BuyerRequestedChange";
        /** @description An event filter to customize your subscription to send notifications for only the specified `orderChangeType`. */
        notifications_OrderChangeTypeFilter: {
            orderChangeTypes?: components["schemas"]["notifications_OrderChangeTypes"];
        };
        /** @description A list of order change types to subscribe to (for example: `BuyerRequestedChange`). To receive notifications of all change types, do not provide this list. */
        notifications_OrderChangeTypes: components["schemas"]["notifications_OrderChangeTypeEnum"][];
        /** @description Additional information passed to the subscription to control the processing of notifications. For example, you can use an `eventFilter` to customize your subscription to send notifications for only the specified `marketplaceId`s, or select the aggregation time period at which to send notifications (for example: limit to one notification every five minutes for high frequency notifications). The specific features available vary depending on the `notificationType`.
         *
         *     This feature is currently only supported by the `ANY_OFFER_CHANGED` and `ORDER_CHANGE` `notificationType`s. */
        notifications_ProcessingDirective: {
            eventFilter?: components["schemas"]["notifications_EventFilter"];
        };
        /** @description The information required to create an Amazon Simple Queue Service (Amazon SQS) queue destination. */
        notifications_SqsResource: {
            /** @description The Amazon Resource Name (ARN) associated with the SQS queue. */
            arn: string;
        };
        /** @description Information about the subscription. */
        notifications_Subscription: {
            /** @description The identifier for the destination where notifications will be delivered. */
            destinationId: string;
            /** @description The version of the payload object to be used in the notification. */
            payloadVersion: string;
            processingDirective?: components["schemas"]["notifications_ProcessingDirective"];
            /** @description The subscription identifier generated when the subscription is created. */
            subscriptionId: string;
        };
        /** @description The shipping address for the order. */
        ordersV0_Address: {
            /** @description The street address. */
            AddressLine1?: string;
            /** @description Additional street address information, if required. */
            AddressLine2?: string;
            /** @description Additional street address information, if required. */
            AddressLine3?: string;
            /**
             * @description The address type of the shipping address.
             * @enum {string}
             */
            AddressType?: "Residential" | "Commercial";
            /** @description The city. */
            City?: string;
            /** @description The company name of the recipient.
             *
             *     **Note**: This attribute is only available for shipping address. */
            CompanyName?: string;
            /** @description The country code. A two-character country code, in ISO 3166-1 alpha-2 format. */
            CountryCode?: string;
            /** @description The county. */
            County?: string;
            /** @description The district. */
            District?: string;
            ExtendedFields?: components["schemas"]["ordersV0_AddressExtendedFields"];
            /** @description The municipality. */
            Municipality?: string;
            /** @description The name. */
            Name?: string;
            /** @description The phone number of the buyer.
             *
             *     **Note**:
             *     1. This attribute is only available for shipping address.
             *     2. In some cases, the buyer phone number is suppressed:
             *     a. Phone is suppressed for all `AFN` (fulfilled by Amazon) orders.
             *     b. Phone is suppressed for the shipped `MFN` (fulfilled by seller) order when the current date is past the Latest Delivery Date. */
            Phone?: string;
            /** @description The postal code. */
            PostalCode?: string;
            /** @description The state or region. */
            StateOrRegion?: string;
        };
        /** @description The container for address extended fields (such as `street name` and `street number`). Currently only available with Brazil shipping addresses. */
        ordersV0_AddressExtendedFields: {
            /** @description The floor number/unit number in the building/private house number. */
            Complement?: string;
            /** @description The neighborhood. This value is only used in some countries (such as Brazil). */
            Neighborhood?: string;
            /** @description The street name. */
            StreetName?: string;
            /** @description The house, building, or property number associated with the location's street address. */
            StreetNumber?: string;
        };
        /** @description Contains the list of programs that Amazon associates with an item.
         *
         *     Possible programs are:
         *      - **Subscribe and Save**: Offers recurring, scheduled deliveries to Amazon customers and Amazon Business customers for their frequently ordered products. - **FBM Ship+**: Unlocks expedited shipping without the extra cost. Helps you to provide accurate and fast delivery dates to Amazon customers. You also receive protection from late deliveries, a discount on expedited shipping rates, and cash back when you ship. */
        ordersV0_AmazonPrograms: {
            /** @description A list of the programs that Amazon associates with the order item.
             *
             *     **Possible values**: `SUBSCRIBE_AND_SAVE`, `FBM_SHIP_PLUS` */
            Programs: string[];
        };
        /** @description An item that is associated with an order item. For example, a tire installation service that is purchased with tires. */
        ordersV0_AssociatedItem: {
            AssociationType?: components["schemas"]["ordersV0_AssociationType"];
            /** @description The order item's order identifier, in 3-7-7 format. */
            OrderId?: string;
            /** @description An Amazon-defined item identifier for the associated item. */
            OrderItemId?: string;
        };
        /**
         * @description The type of association an item has with an order item.
         * @enum {string}
         */
        ordersV0_AssociationType: "VALUE_ADD_SERVICE";
        /** @description Contains information regarding the Shipping Settings Automation program, such as whether the order's shipping settings were generated automatically, and what those settings are. */
        ordersV0_AutomatedShippingSettings: {
            /** @description Auto-generated carrier for SSA orders. */
            AutomatedCarrier?: string;
            /** @description Auto-generated ship method for SSA orders. */
            AutomatedShipMethod?: string;
            /** @description When true, this order has automated shipping settings generated by Amazon. This order could be identified as an SSA order. */
            HasAutomatedShippingSettings?: boolean;
        };
        /** @description Business days and hours when the destination is open for deliveries. */
        ordersV0_BusinessHours: {
            /**
             * @description Day of the week.
             * @enum {string}
             */
            DayOfWeek?: "SUN" | "MON" | "TUE" | "WED" | "THU" | "FRI" | "SAT";
            /** @description Time window during the day when the business is open. */
            OpenIntervals?: components["schemas"]["ordersV0_OpenInterval"][];
        };
        /** @description Buyer information for custom orders from the Amazon Custom program. */
        ordersV0_BuyerCustomizedInfoDetail: {
            /** @description The location of a ZIP file containing Amazon Custom data. */
            CustomizedURL?: string;
        };
        /** @description Buyer information. */
        ordersV0_BuyerInfo: {
            /** @description The county of the buyer.
             *
             *     **Note**: This attribute is only available in the Brazil marketplace. */
            BuyerCounty?: string;
            /** @description The anonymized email address of the buyer. */
            BuyerEmail?: string;
            /** @description The buyer name or the recipient name. */
            BuyerName?: string;
            BuyerTaxInfo?: components["schemas"]["ordersV0_BuyerTaxInfo"];
            /** @description The purchase order (PO) number entered by the buyer at checkout. Only returned for orders where the buyer entered a PO number at checkout. */
            PurchaseOrderNumber?: string;
        };
        /** @description Information about whether or not a buyer requested cancellation. */
        ordersV0_BuyerRequestedCancel: {
            /** @description The reason that the buyer requested cancellation. */
            BuyerCancelReason?: string;
            /** @description Indicate whether the buyer has requested cancellation.
             *
             *     **Possible Values**: `true`, `false`. */
            IsBuyerRequestedCancel?: string;
        };
        /** @description Tax information about the buyer. */
        ordersV0_BuyerTaxInfo: {
            /** @description The legal name of the company. */
            CompanyLegalName?: string;
            /** @description A list of tax classifications that apply to the order. */
            TaxClassifications?: components["schemas"]["ordersV0_TaxClassification"][];
            /** @description The country or region imposing the tax. */
            TaxingRegion?: string;
        };
        /** @description Contains the business invoice tax information. Available only in the TR marketplace. */
        ordersV0_BuyerTaxInformation: {
            /** @description Business buyer's address. */
            BuyerBusinessAddress?: string;
            /** @description Business buyer's company legal name. */
            BuyerLegalCompanyName?: string;
            /** @description Business buyer's tax office. */
            BuyerTaxOffice?: string;
            /** @description Business buyer's tax registration ID. */
            BuyerTaxRegistrationId?: string;
        };
        /** @description The error response schema for the `confirmShipment` operation. */
        ordersV0_ConfirmShipmentErrorResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
        };
        /** @description A single order item. */
        ordersV0_ConfirmShipmentOrderItem: {
            /** @description The order item's unique identifier. */
            orderItemId: string;
            /** @description The item's quantity. */
            quantity: number;
            transparencyCodes?: components["schemas"]["ordersV0_TransparencyCodeList"];
        };
        /** @description A list of order items. */
        ordersV0_ConfirmShipmentOrderItemsList: components["schemas"]["ordersV0_ConfirmShipmentOrderItem"][];
        /** @description The request schema for an shipment confirmation. */
        ordersV0_ConfirmShipmentRequest: {
            /**
             * @description The COD collection method (only supported in the JP marketplace).
             * @enum {string}
             */
            codCollectionMethod?: "DirectPayment";
            marketplaceId: components["schemas"]["ordersV0_MarketplaceId"];
            packageDetail: components["schemas"]["ordersV0_PackageDetail"];
        };
        /**
         * @description Details the importance of the constraint present on the item
         * @enum {string}
         */
        ordersV0_ConstraintType: "MANDATORY";
        /** @description Contains all of the delivery instructions provided by the customer for the shipping address. */
        ordersV0_DeliveryPreferences: {
            /** @description Building instructions, nearby landmark or navigation instructions. */
            AddressInstructions?: string;
            /** @description Drop-off location selected by the customer. */
            DropOffLocation?: string;
            /** @description Enumerated list of miscellaneous delivery attributes associated with the shipping address. */
            OtherAttributes?: components["schemas"]["ordersV0_OtherDeliveryAttributes"][];
            PreferredDeliveryTime?: components["schemas"]["ordersV0_PreferredDeliveryTime"];
        };
        /**
         * @description The status of the Amazon Easy Ship order. This property is only included for Amazon Easy Ship orders.
         * @enum {string}
         */
        ordersV0_EasyShipShipmentStatus: "PendingSchedule" | "PendingPickUp" | "PendingDropOff" | "LabelCanceled" | "PickedUp" | "DroppedOff" | "AtOriginFC" | "AtDestinationFC" | "Delivered" | "RejectedByBuyer" | "Undeliverable" | "ReturningToSeller" | "ReturnedToSeller" | "Lost" | "OutForDelivery" | "Damaged";
        /**
         * @description The status of the electronic invoice. Only available for Easy Ship orders and orders in the BR marketplace.
         * @enum {string}
         */
        ordersV0_ElectronicInvoiceStatus: "NotRequired" | "NotFound" | "Processing" | "Errored" | "Accepted";
        /** @description Error response returned when the request is unsuccessful. */
        ordersV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        ordersV0_ErrorList: components["schemas"]["ordersV0_Error"][];
        /** @description Dates when the business is closed or open with a different time window. */
        ordersV0_ExceptionDates: {
            /** @description Date when the business is closed, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date format. */
            ExceptionDate?: string;
            /** @description Boolean indicating if the business is closed or open on that date. */
            IsOpen?: boolean;
            /** @description Time window during the day when the business is open. */
            OpenIntervals?: components["schemas"]["ordersV0_OpenInterval"][];
        };
        /** @description Contains the instructions about the fulfillment, such as the location from where you want the order filled. */
        ordersV0_FulfillmentInstruction: {
            /** @description The `sourceId` of the location from where you want the order fulfilled. */
            FulfillmentSupplySourceId?: string;
        };
        /** @description The response schema for the `getOrderAddress` operation. */
        ordersV0_GetOrderAddressResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrderAddress"];
        };
        /** @description The response schema for the `getOrderBuyerInfo` operation. */
        ordersV0_GetOrderBuyerInfoResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrderBuyerInfo"];
        };
        /** @description The response schema for the `getOrderItemsBuyerInfo` operation. */
        ordersV0_GetOrderItemsBuyerInfoResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrderItemsBuyerInfoList"];
        };
        /** @description The response schema for the `getOrderItems` operation. */
        ordersV0_GetOrderItemsResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrderItemsList"];
        };
        /** @description The response schema for the `getOrderRegulatedInfo` operation. */
        ordersV0_GetOrderRegulatedInfoResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrderRegulatedInfo"];
        };
        /** @description The response schema for the `getOrder` operation. */
        ordersV0_GetOrderResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_Order"];
        };
        /** @description The response schema for the `getOrders` operation. */
        ordersV0_GetOrdersResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
            payload?: components["schemas"]["ordersV0_OrdersList"];
        };
        /** @description A single item's buyer information. */
        ordersV0_ItemBuyerInfo: {
            BuyerCustomizedInfo?: components["schemas"]["ordersV0_BuyerCustomizedInfoDetail"];
            /** @description A gift message provided by the buyer.
             *
             *     **Note**: This attribute is only available for MFN (fulfilled by seller) orders. */
            GiftMessageText?: string;
            /** @description The gift wrap level specified by the buyer. */
            GiftWrapLevel?: string;
            GiftWrapPrice?: components["schemas"]["ordersV0_Money"];
            GiftWrapTax?: components["schemas"]["ordersV0_Money"];
        };
        /** @description The unobfuscated marketplace identifier. */
        ordersV0_MarketplaceId: string;
        /** @description Tax information about the marketplace. */
        ordersV0_MarketplaceTaxInfo: {
            /** @description A list of tax classifications that apply to the order. */
            TaxClassifications?: components["schemas"]["ordersV0_TaxClassification"][];
        };
        /** @description Measurement information for an order item. */
        ordersV0_Measurement: {
            /**
             * @description The unit of measure.
             * @enum {string}
             */
            Unit: "OUNCES" | "POUNDS" | "KILOGRAMS" | "GRAMS" | "MILLIGRAMS" | "INCHES" | "FEET" | "METERS" | "CENTIMETERS" | "MILLIMETERS" | "SQUARE_METERS" | "SQUARE_CENTIMETERS" | "SQUARE_FEET" | "SQUARE_INCHES" | "GALLONS" | "PINTS" | "QUARTS" | "FLUID_OUNCES" | "LITERS" | "CUBIC_METERS" | "CUBIC_FEET" | "CUBIC_INCHES" | "CUBIC_CENTIMETERS" | "COUNT";
            /** @description The measurement value. */
            Value: number;
        };
        /** @description The monetary value of the order. */
        ordersV0_Money: {
            /** @description The currency amount. */
            Amount?: string;
            /** @description The three-digit currency code. In ISO 4217 format. */
            CurrencyCode?: string;
        };
        /** @description The time interval for which the business is open. */
        ordersV0_OpenInterval: {
            EndTime?: components["schemas"]["ordersV0_OpenTimeInterval"];
            StartTime?: components["schemas"]["ordersV0_OpenTimeInterval"];
        };
        /** @description The time when the business opens or closes. */
        ordersV0_OpenTimeInterval: {
            /** @description The hour when the business opens or closes. */
            Hour?: number;
            /** @description The minute when the business opens or closes. */
            Minute?: number;
        };
        /** @description Order information. */
        ordersV0_Order: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            AutomatedShippingSettings?: components["schemas"]["ordersV0_AutomatedShippingSettings"];
            BuyerInfo?: components["schemas"]["ordersV0_BuyerInfo"];
            /**
             * @description The buyer's invoicing preference. Sellers can use this data to issue electronic invoices for orders in Turkey.
             *
             *     **Note**: This attribute is only available in the Turkey marketplace.
             * @enum {string}
             */
            BuyerInvoicePreference?: "INDIVIDUAL" | "BUSINESS";
            BuyerTaxInformation?: components["schemas"]["ordersV0_BuyerTaxInformation"];
            /** @description Custom ship label for Checkout by Amazon (CBA). */
            CbaDisplayableShippingLabel?: string;
            DefaultShipFromLocationAddress?: components["schemas"]["ordersV0_Address"];
            /** @description The start of the time period within which you have committed to fulfill the order. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. Only returned for seller-fulfilled orders. */
            EarliestDeliveryDate?: string;
            /** @description The start of the time period within which you have committed to ship the order. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. Only returned for seller-fulfilled orders.
             *
             *     __Note__: `EarliestShipDate` might not be returned for orders placed before February 1, 2013. */
            EarliestShipDate?: string;
            EasyShipShipmentStatus?: components["schemas"]["ordersV0_EasyShipShipmentStatus"];
            ElectronicInvoiceStatus?: components["schemas"]["ordersV0_ElectronicInvoiceStatus"];
            /**
             * @description Whether the order was fulfilled by Amazon (`AFN`) or by the seller (`MFN`).
             * @enum {string}
             */
            FulfillmentChannel?: "MFN" | "AFN";
            FulfillmentInstruction?: components["schemas"]["ordersV0_FulfillmentInstruction"];
            /** @description Whether the order contains regulated items which may require additional approval steps before being fulfilled. */
            HasRegulatedItems?: boolean;
            /** @description When true, this order is marked to be delivered to an Access Point. The access location is chosen by the customer. Access Points include Amazon Hub Lockers, Amazon Hub Counters, and pickup points operated by carriers. */
            IsAccessPointOrder?: boolean;
            /** @description When true, the order is an Amazon Business order. An Amazon Business order is an order where the buyer is a Verified Business Buyer. */
            IsBusinessOrder?: boolean;
            /** @description When true, the estimated ship date is set for the order. Only returned for Sourcing on Demand orders. */
            IsEstimatedShipDateSet?: boolean;
            /** @description When true, the order is a `GlobalExpress` order. */
            IsGlobalExpressEnabled?: boolean;
            /** @description When true, the item within this order was bought and re-sold by Amazon Business EU SARL (ABEU). By buying and instantly re-selling your items, ABEU becomes the seller of record, making your inventory available for sale to customers who would not otherwise purchase from a third-party seller. */
            IsIBA?: boolean;
            /** @description When true, this order is marked to be picked up from a store rather than delivered. */
            IsISPU?: boolean;
            /** @description When true, the order has a Premium Shipping Service Level Agreement. For more information about Premium Shipping orders, refer to "Premium Shipping Options" in the Seller Central Help for your marketplace. */
            IsPremiumOrder?: boolean;
            /** @description When true, the order is a seller-fulfilled Amazon Prime order. */
            IsPrime?: boolean;
            /** @description When true, this is a replacement order. */
            IsReplacementOrder?: boolean;
            /** @description When true, the item within this order was bought and re-sold by Amazon Business EU SARL (ABEU). By buying and instantly re-selling your items, ABEU becomes the seller of record, making your inventory available for sale to customers who would not otherwise purchase from a third-party seller. */
            IsSoldByAB?: boolean;
            /** @description The date when the order was last updated.
             *
             *     __Note__: `LastUpdateDate` is returned with an incorrect date for orders that were last updated before 2009-04-01. */
            LastUpdateDate: string;
            /** @description The end of the time period within which you have committed to fulfill the order. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. Only returned for seller-fulfilled orders that do not have a `PendingAvailability`, `Pending`, or `Canceled` status. */
            LatestDeliveryDate?: string;
            /** @description The end of the time period within which you have committed to ship the order. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. Only returned for seller-fulfilled orders.
             *
             *     __Note__: `LatestShipDate` might not be returned for orders placed before February 1, 2013. */
            LatestShipDate?: string;
            /** @description The identifier for the marketplace where the order was placed. */
            MarketplaceId?: string;
            MarketplaceTaxInfo?: components["schemas"]["ordersV0_MarketplaceTaxInfo"];
            /** @description The number of items shipped. */
            NumberOfItemsShipped?: number;
            /** @description The number of items unshipped. */
            NumberOfItemsUnshipped?: number;
            /** @description The order channel for the first item in the order. */
            OrderChannel?: string;
            /**
             * @description The current order status.
             * @enum {string}
             */
            OrderStatus: "Pending" | "Unshipped" | "PartiallyShipped" | "Shipped" | "Canceled" | "Unfulfillable" | "InvoiceUnconfirmed" | "PendingAvailability";
            OrderTotal?: components["schemas"]["ordersV0_Money"];
            /**
             * @description The order's type.
             * @enum {string}
             */
            OrderType?: "StandardOrder" | "LongLeadTimeOrder" | "Preorder" | "BackOrder" | "SourcingOnDemandOrder";
            PaymentExecutionDetail?: components["schemas"]["ordersV0_PaymentExecutionDetailItemList"];
            /**
             * @description The payment method for the order. This property is limited to COD and CVS payment methods. Unless you need the specific COD payment information provided by the `PaymentExecutionDetailItem` object, we recommend using the `PaymentMethodDetails` property to get payment method information.
             * @enum {string}
             */
            PaymentMethod?: "COD" | "CVS" | "Other";
            PaymentMethodDetails?: components["schemas"]["ordersV0_PaymentMethodDetailItemList"];
            /** @description Indicates the date by which the seller must respond to the buyer with an estimated ship date. Only returned for Sourcing on Demand orders. */
            PromiseResponseDueDate?: string;
            /** @description The date when the order was created. */
            PurchaseDate: string;
            /** @description The order ID value for the order that is being replaced. Returned only if IsReplacementOrder = true. */
            ReplacedOrderId?: string;
            /** @description The sales channel for the first item in the order. */
            SalesChannel?: string;
            /** @description The seller’s friendly name registered in the marketplace where the sale took place. Sellers can use this data to issue electronic invoices for orders in Brazil.
             *
             *     **Note**: This attribute is only available in the Brazil marketplace for the orders with `Pending` or `Unshipped` status. */
            SellerDisplayName?: string;
            /** @description A seller-defined order identifier. */
            SellerOrderId?: string;
            /** @description The shipment service level category for the order.
             *
             *     **Possible values**: `Expedited`, `FreeEconomy`, `NextDay`, `Priority`, `SameDay`, `SecondDay`, `Scheduled`, and `Standard`. */
            ShipmentServiceLevelCategory?: string;
            ShippingAddress?: components["schemas"]["ordersV0_Address"];
            /** @description The order's shipment service level. */
            ShipServiceLevel?: string;
        };
        /** @description The shipping address for the order. */
        ordersV0_OrderAddress: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            /** @description The company name of the contact buyer. For IBA orders, the buyer company must be Amazon entities. */
            BuyerCompanyName?: string;
            DeliveryPreferences?: components["schemas"]["ordersV0_DeliveryPreferences"];
            ShippingAddress?: components["schemas"]["ordersV0_Address"];
        };
        /** @description Buyer information for an order. */
        ordersV0_OrderBuyerInfo: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            /** @description The county of the buyer.
             *
             *     **Note**: This attribute is only available in the Brazil marketplace. */
            BuyerCounty?: string;
            /** @description The anonymized email address of the buyer. */
            BuyerEmail?: string;
            /** @description The buyer name or the recipient name. */
            BuyerName?: string;
            BuyerTaxInfo?: components["schemas"]["ordersV0_BuyerTaxInfo"];
            /** @description The purchase order (PO) number entered by the buyer at checkout. Only returned for orders where the buyer entered a PO number at checkout. */
            PurchaseOrderNumber?: string;
        };
        /** @description A single order item. */
        ordersV0_OrderItem: {
            AmazonPrograms?: components["schemas"]["ordersV0_AmazonPrograms"];
            /** @description The item's Amazon Standard Identification Number (ASIN). */
            ASIN: string;
            /** @description A list of associated items that a customer has purchased with a product. For example, a tire installation service purchased with tires. */
            AssociatedItems?: components["schemas"]["ordersV0_AssociatedItem"][];
            BuyerInfo?: components["schemas"]["ordersV0_ItemBuyerInfo"];
            BuyerRequestedCancel?: components["schemas"]["ordersV0_BuyerRequestedCancel"];
            CODFee?: components["schemas"]["ordersV0_Money"];
            CODFeeDiscount?: components["schemas"]["ordersV0_Money"];
            /** @description The condition of the item.
             *
             *     **Possible values**: `New`, `Used`, `Collectible`, `Refurbished`, `Preorder`, and `Club`. */
            ConditionId?: string;
            /** @description The condition of the item, as described by the seller. */
            ConditionNote?: string;
            /** @description The subcondition of the item.
             *
             *     **Possible values**: `New`, `Mint`, `Very Good`, `Good`, `Acceptable`, `Poor`, `Club`, `OEM`, `Warranty`, `Refurbished Warranty`, `Refurbished`, `Open Box`, `Any`, and `Other`. */
            ConditionSubtypeId?: string;
            /**
             * @description The category of deemed reseller. This applies to selling partners that are not based in the EU and is used to help them meet the VAT Deemed Reseller tax laws in the EU and UK.
             * @enum {string}
             */
            DeemedResellerCategory?: "IOSS" | "UOSS";
            /** @description The IOSS number of the marketplace. Sellers shipping to the EU from outside the EU must provide this IOSS number to their carrier when Amazon has collected the VAT on the sale. */
            IossNumber?: string;
            /** @description Indicates whether the item is a gift.
             *
             *     **Possible values**: `true` and `false`. */
            IsGift?: string;
            /** @description When true, the ASIN is enrolled in Transparency. The Transparency serial number that you must submit is determined by:
             *
             *     **1D or 2D Barcode:** This has a **T** logo. Submit either the 29-character alpha-numeric identifier beginning with **AZ** or **ZA**, or the 38-character Serialized Global Trade Item Number (SGTIN).
             *     **2D Barcode SN:** Submit the 7- to 20-character serial number barcode, which likely has the prefix **SN**. The serial number is applied to the same side of the packaging as the GTIN (UPC/EAN/ISBN) barcode.
             *     **QR code SN:** Submit the URL that the QR code generates. */
            IsTransparency?: boolean;
            ItemPrice?: components["schemas"]["ordersV0_Money"];
            ItemTax?: components["schemas"]["ordersV0_Money"];
            Measurement?: components["schemas"]["ordersV0_Measurement"];
            /** @description An Amazon-defined order item identifier. */
            OrderItemId: string;
            PointsGranted?: components["schemas"]["ordersV0_PointsGrantedDetail"];
            /** @description Indicates that the selling price is a special price that is only available for Amazon Business orders. For more information about the Amazon Business Seller Program, refer to the [Amazon Business website](https://www.amazon.com/b2b/info/amazon-business).
             *
             *     **Possible values**: `BusinessPrice` */
            PriceDesignation?: string;
            ProductInfo?: components["schemas"]["ordersV0_ProductInfoDetail"];
            PromotionDiscount?: components["schemas"]["ordersV0_Money"];
            PromotionDiscountTax?: components["schemas"]["ordersV0_Money"];
            PromotionIds?: components["schemas"]["ordersV0_PromotionIdList"];
            /** @description The number of items in the order.  */
            QuantityOrdered: number;
            /** @description The number of items shipped. */
            QuantityShipped?: number;
            /** @description The end date of the scheduled delivery window in the time zone for the order destination. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. */
            ScheduledDeliveryEndDate?: string;
            /** @description The start date of the scheduled delivery window in the time zone for the order destination. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. */
            ScheduledDeliveryStartDate?: string;
            /** @description The item's seller stock keeping unit (SKU). */
            SellerSKU?: string;
            /** @description When true, the product type for this item has a serial number.
             *
             *      Only returned for Amazon Easy Ship orders. */
            SerialNumberRequired?: boolean;
            /** @description A list of serial numbers for electronic products that are shipped to customers. Returned for FBA orders only. */
            SerialNumbers?: string[];
            ShippingConstraints?: components["schemas"]["ordersV0_ShippingConstraints"];
            ShippingDiscount?: components["schemas"]["ordersV0_Money"];
            ShippingDiscountTax?: components["schemas"]["ordersV0_Money"];
            ShippingPrice?: components["schemas"]["ordersV0_Money"];
            ShippingTax?: components["schemas"]["ordersV0_Money"];
            /** @description The store chain store identifier. Linked to a specific store in a store chain. */
            StoreChainStoreId?: string;
            SubstitutionPreferences?: components["schemas"]["ordersV0_SubstitutionPreferences"];
            TaxCollection?: components["schemas"]["ordersV0_TaxCollection"];
            /** @description The item's name. */
            Title?: string;
        };
        /** @description A single order item's buyer information. */
        ordersV0_OrderItemBuyerInfo: {
            BuyerCustomizedInfo?: components["schemas"]["ordersV0_BuyerCustomizedInfoDetail"];
            /** @description A gift message provided by the buyer.
             *
             *     **Note**: This attribute is only available for MFN (fulfilled by seller) orders. */
            GiftMessageText?: string;
            /** @description The gift wrap level specified by the buyer. */
            GiftWrapLevel?: string;
            GiftWrapPrice?: components["schemas"]["ordersV0_Money"];
            GiftWrapTax?: components["schemas"]["ordersV0_Money"];
            /** @description An Amazon-defined order item identifier. */
            OrderItemId: string;
        };
        /** @description A single order item's buyer information list. */
        ordersV0_OrderItemBuyerInfoList: components["schemas"]["ordersV0_OrderItemBuyerInfo"][];
        /** @description A list of order items. */
        ordersV0_OrderItemList: components["schemas"]["ordersV0_OrderItem"][];
        /** @description For partial shipment status updates, the list of order items and quantities to be updated. */
        ordersV0_OrderItems: {
            /** @description The order item's unique identifier. */
            orderItemId?: string;
            /** @description The quantity for which to update the shipment status. */
            quantity?: number;
        }[];
        /** @description A single order item's buyer information list with the order ID. */
        ordersV0_OrderItemsBuyerInfoList: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
            OrderItems: components["schemas"]["ordersV0_OrderItemBuyerInfoList"];
        };
        /** @description The order items list along with the order ID. */
        ordersV0_OrderItemsList: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
            OrderItems: components["schemas"]["ordersV0_OrderItemList"];
        };
        /** @description A list of orders. */
        ordersV0_OrderList: components["schemas"]["ordersV0_Order"][];
        /** @description The order's regulated information along with its verification status. */
        ordersV0_OrderRegulatedInfo: {
            /** @description An Amazon-defined order identifier, in 3-7-7 format. */
            AmazonOrderId: string;
            RegulatedInformation: components["schemas"]["ordersV0_RegulatedInformation"];
            RegulatedOrderVerificationStatus: components["schemas"]["ordersV0_RegulatedOrderVerificationStatus"];
            /** @description When true, the order requires attaching a dosage information label when shipped. */
            RequiresDosageLabel: boolean;
        };
        /** @description A list of orders along with additional information to make subsequent API calls. */
        ordersV0_OrdersList: {
            /** @description Use this date to select orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
            CreatedBefore?: string;
            /** @description Use this date to select orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. Use [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format for all dates. */
            LastUpdatedBefore?: string;
            /** @description When present and not empty, pass this string token in the next request to return the next response page. */
            NextToken?: string;
            Orders: components["schemas"]["ordersV0_OrderList"];
        };
        /**
         * @description Miscellaneous delivery attributes associated with the shipping address.
         * @enum {string}
         */
        ordersV0_OtherDeliveryAttributes: "HAS_ACCESS_POINT" | "PALLET_ENABLED" | "PALLET_DISABLED";
        /** @description Properties of packages */
        ordersV0_PackageDetail: {
            /** @description Identifies the carrier that will deliver the package. This field is required for all marketplaces. For more information, refer to the [`CarrierCode` announcement](https://developer-docs.amazon.com/sp-api/changelog/carriercode-value-required-in-shipment-confirmations-for-br-mx-ca-sg-au-in-jp-marketplaces). */
            carrierCode: string;
            /** @description Carrier name that will deliver the package. Required when `carrierCode` is "Other"  */
            carrierName?: string;
            orderItems: components["schemas"]["ordersV0_ConfirmShipmentOrderItemsList"];
            packageReferenceId: components["schemas"]["ordersV0_PackageReferenceId"];
            /**
             * Format: date-time
             * @description The shipping date for the package. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date/time format.
             */
            shipDate: string;
            /** @description The unique identifier for the supply source. */
            shipFromSupplySourceId?: string;
            /** @description Ship method to be used for shipping the order. */
            shippingMethod?: string;
            /** @description The tracking number used to obtain tracking and delivery information. */
            trackingNumber: string;
        };
        /** @description A seller-supplied identifier that uniquely identifies a package within the scope of an order. Only positive numeric values are supported. */
        ordersV0_PackageReferenceId: string;
        /** @description Information about a sub-payment method used to pay for a COD order. */
        ordersV0_PaymentExecutionDetailItem: {
            /** @description The Brazilian Taxpayer Identifier (CNPJ) of the payment processor or acquiring bank that authorizes the payment.
             *
             *     **Note**: This attribute is only available for orders in the Brazil (BR) marketplace when the `PaymentMethod` is `CreditCard` or `Pix`. */
            AcquirerId?: string;
            /** @description The unique code that confirms the payment authorization.
             *
             *     **Note**: This attribute is only available for orders in the Brazil (BR) marketplace when the `PaymentMethod` is `CreditCard` or `Pix`. */
            AuthorizationCode?: string;
            /** @description The card network or brand used in the payment transaction (for example, Visa or Mastercard).
             *
             *     **Note**: This attribute is only available for orders in the Brazil (BR) marketplace when the `PaymentMethod` is `CreditCard`. */
            CardBrand?: string;
            Payment: components["schemas"]["ordersV0_Money"];
            /** @description The sub-payment method for an order.
             *
             *     **Possible values**:
             *     * `COD`: Cash on delivery
             *     * `GC`: Gift card
             *     * `PointsAccount`: Amazon Points
             *     * `Invoice`: Invoice
             *     * `CreditCard`: Credit card
             *     * `Pix`: Pix
             *     * `Other`: Other. */
            PaymentMethod: string;
        };
        /** @description A list of payment execution detail items. */
        ordersV0_PaymentExecutionDetailItemList: components["schemas"]["ordersV0_PaymentExecutionDetailItem"][];
        /** @description A list of payment method detail items. */
        ordersV0_PaymentMethodDetailItemList: string[];
        /** @description The number of Amazon Points offered with the purchase of an item, and their monetary value. */
        ordersV0_PointsGrantedDetail: {
            PointsMonetaryValue?: components["schemas"]["ordersV0_Money"];
            /** @description The number of Amazon Points granted with the purchase of an item. */
            PointsNumber?: number;
        };
        /** @description The time window when the delivery is preferred. */
        ordersV0_PreferredDeliveryTime: {
            /** @description Business hours when the business is open for deliveries. */
            BusinessHours?: components["schemas"]["ordersV0_BusinessHours"][];
            /** @description Dates when the business is closed during the next 30 days. */
            ExceptionDates?: components["schemas"]["ordersV0_ExceptionDates"][];
        };
        /** @description Information about the prescription that is used to verify a regulated product. This must be provided once per order and reflect the seller’s own records. Only approved orders can have prescriptions. */
        ordersV0_PrescriptionDetail: {
            /** @description The identifier for the clinic which provided the prescription used to verify the regulated product. */
            clinicId: string;
            /**
             * Format: date-time
             * @description The expiration date of the prescription used to verify the regulated product, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format.
             */
            expirationDate: string;
            /** @description The identifier for the prescription used to verify the regulated product. */
            prescriptionId: string;
            /** @description The number of refills remaining for the prescription used to verify the regulated product. If a prescription originally had 10 total refills, this value must be `10` for the first order, `9` for the second order, and `0` for the eleventh order. If a prescription originally had no refills, this value must be 0. */
            refillsRemaining: number;
            /** @description The total number of refills written in the original prescription used to verify the regulated product. If a prescription originally had no refills, this value must be 0. */
            totalRefillsAuthorized: number;
            /** @description The instructions for the prescription as provided by the approver of the regulated product. */
            usageInstructions: string;
            /** @description The number of units in each fill as provided in the prescription. */
            writtenQuantity: number;
        };
        /** @description Product information on the number of items. */
        ordersV0_ProductInfoDetail: {
            /** @description The total number of items that are included in the ASIN. */
            NumberOfItems?: string;
        };
        /** @description A list of promotion identifiers provided by the seller when the promotions were created. */
        ordersV0_PromotionIdList: string[];
        /** @description The regulated information collected during purchase and used to verify the order. */
        ordersV0_RegulatedInformation: {
            /** @description A list of regulated information fields as collected from the regulatory form. */
            Fields: components["schemas"]["ordersV0_RegulatedInformationField"][];
        };
        /** @description A field collected from the regulatory form. */
        ordersV0_RegulatedInformationField: {
            /** @description The unique identifier of the field. */
            FieldId: string;
            /** @description The name of the field. */
            FieldLabel: string;
            /**
             * @description The type of field.
             * @enum {string}
             */
            FieldType: "Text" | "FileAttachment";
            /** @description The content of the field as collected in regulatory form. Note that `FileAttachment` type fields contain a URL where you can download the attachment. */
            FieldValue: string;
        };
        /** @description The verification status of the order, along with associated approval or rejection metadata. */
        ordersV0_RegulatedOrderVerificationStatus: {
            /** @description The identifier for the order's regulated information reviewer. */
            ExternalReviewerId?: string;
            RejectionReason?: components["schemas"]["ordersV0_RejectionReason"];
            /** @description When true, the regulated information provided in the order requires a review by the merchant. */
            RequiresMerchantAction: boolean;
            /** @description The date the order was reviewed. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. */
            ReviewDate?: string;
            Status: components["schemas"]["ordersV0_VerificationStatus"];
            /** @description A list of valid rejection reasons that may be used to reject the order's regulated information. */
            ValidRejectionReasons: components["schemas"]["ordersV0_RejectionReason"][];
            /** @description A list of valid verification details that may be provided and the criteria required for when the verification detail can be provided. */
            ValidVerificationDetails?: components["schemas"]["ordersV0_ValidVerificationDetail"][];
        };
        /** @description The reason for rejecting the order's regulated information. This is only present if the order is rejected. */
        ordersV0_RejectionReason: {
            /** @description The description of this rejection reason. */
            RejectionReasonDescription: string;
            /** @description The unique identifier for the rejection reason. */
            RejectionReasonId: string;
        };
        /**
         * @description The shipment status to apply.
         * @enum {string}
         */
        ordersV0_ShipmentStatus: "ReadyForPickup" | "PickedUp" | "RefusedPickup";
        /** @description Delivery constraints applicable to this order. */
        ordersV0_ShippingConstraints: {
            PalletDelivery?: components["schemas"]["ordersV0_ConstraintType"];
            RecipientAgeVerification?: components["schemas"]["ordersV0_ConstraintType"];
            RecipientIdentityVerification?: components["schemas"]["ordersV0_ConstraintType"];
            SignatureConfirmation?: components["schemas"]["ordersV0_ConstraintType"];
        };
        /** @description Substitution options for an order item. */
        ordersV0_SubstitutionOption: {
            /** @description The item's Amazon Standard Identification Number (ASIN). */
            ASIN?: string;
            Measurement?: components["schemas"]["ordersV0_Measurement"];
            /** @description The number of items to be picked for this substitution option.  */
            QuantityOrdered?: number;
            /** @description The item's seller stock keeping unit (SKU). */
            SellerSKU?: string;
            /** @description The item's title. */
            Title?: string;
        };
        /** @description A collection of substitution options. */
        ordersV0_SubstitutionOptionList: components["schemas"]["ordersV0_SubstitutionOption"][];
        /** @description Substitution preferences for an order item. */
        ordersV0_SubstitutionPreferences: {
            SubstitutionOptions?: components["schemas"]["ordersV0_SubstitutionOptionList"];
            /**
             * @description The type of substitution that these preferences represent.
             * @enum {string}
             */
            SubstitutionType: "CUSTOMER_PREFERENCE" | "AMAZON_RECOMMENDED" | "DO_NOT_SUBSTITUTE";
        };
        /** @description The tax classification of the order. */
        ordersV0_TaxClassification: {
            /** @description The type of tax. */
            Name?: string;
            /** @description The buyer's tax identifier. */
            Value?: string;
        };
        /** @description Information about withheld taxes. */
        ordersV0_TaxCollection: {
            /**
             * @description The tax collection model applied to the item.
             * @enum {string}
             */
            Model?: "MarketplaceFacilitator";
            /**
             * @description The party responsible for withholding the taxes and remitting them to the taxing authority.
             * @enum {string}
             */
            ResponsibleParty?: "Amazon Services, Inc.";
        };
        /** @description The transparency code associated with the item. */
        ordersV0_TransparencyCode: string;
        /** @description A list of order items. */
        ordersV0_TransparencyCodeList: components["schemas"]["ordersV0_TransparencyCode"][];
        /** @description The error response schema for the `UpdateShipmentStatus` operation. */
        ordersV0_UpdateShipmentStatusErrorResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
        };
        /** @description The request body for the `updateShipmentStatus` operation. */
        ordersV0_UpdateShipmentStatusRequest: {
            marketplaceId: components["schemas"]["ordersV0_MarketplaceId"];
            orderItems?: components["schemas"]["ordersV0_OrderItems"];
            shipmentStatus: components["schemas"]["ordersV0_ShipmentStatus"];
        };
        /** @description The error response schema for the `UpdateVerificationStatus` operation. */
        ordersV0_UpdateVerificationStatusErrorResponse: {
            errors?: components["schemas"]["ordersV0_ErrorList"];
        };
        /** @description The request body for the `updateVerificationStatus` operation. */
        ordersV0_UpdateVerificationStatusRequest: {
            regulatedOrderVerificationStatus: components["schemas"]["ordersV0_UpdateVerificationStatusRequestBody"];
        };
        /** @description The updated values of the `VerificationStatus` field. */
        ordersV0_UpdateVerificationStatusRequestBody: {
            /** @description The identifier of the order's regulated information reviewer. */
            externalReviewerId: string;
            /** @description The unique identifier of the rejection reason used for rejecting the order's regulated information. Only required if the new status is rejected. */
            rejectionReasonId?: string;
            status?: components["schemas"]["ordersV0_VerificationStatus"];
            verificationDetails?: components["schemas"]["ordersV0_VerificationDetails"];
        };
        /** @description The types of verification details that may be provided for the order and the criteria required for when the type of verification detail can be provided. The types of verification details allowed depend on the type of regulated product and will not change order to order. */
        ordersV0_ValidVerificationDetail: {
            /** @description A list of valid verification statuses where the associated verification detail type may be provided. For example, if the value of this field is ["Approved"], calls to provide the associated verification detail will fail for orders with a `VerificationStatus` of `Pending`, `Rejected`, `Expired`, or `Cancelled`. */
            ValidVerificationStatuses: components["schemas"]["ordersV0_VerificationStatus"][];
            /** @description A supported type of verification detail. The type indicates which verification detail could be shared while updating the regulated order. Valid value: `prescriptionDetail`. */
            VerificationDetailType: string;
        };
        /** @description Additional information related to the verification of a regulated order. */
        ordersV0_VerificationDetails: {
            prescriptionDetail?: components["schemas"]["ordersV0_PrescriptionDetail"];
        };
        /**
         * @description The verification status of the order.
         * @enum {string}
         */
        ordersV0_VerificationStatus: "Pending" | "Approved" | "Rejected" | "Expired" | "Cancelled";
        /** @description An object representing an error that occurred during the API operation. */
        productFeesV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        productFeesV0_ErrorList: components["schemas"]["productFeesV0_Error"][];
        /** @description The type of fee, fee amount, and other details. */
        productFeesV0_FeeDetail: {
            FeeAmount: components["schemas"]["productFeesV0_MoneyType"];
            FeePromotion?: components["schemas"]["productFeesV0_MoneyType"];
            /** @description The type of fee charged to a seller. */
            FeeType: string;
            FinalFee: components["schemas"]["productFeesV0_MoneyType"];
            IncludedFeeDetailList?: components["schemas"]["productFeesV0_IncludedFeeDetailList"];
            TaxAmount?: components["schemas"]["productFeesV0_MoneyType"];
        };
        /** @description A list of other fees that contribute to a given fee. */
        productFeesV0_FeeDetailList: components["schemas"]["productFeesV0_FeeDetail"][];
        /** @description The total estimated fees for an item and a list of details. */
        productFeesV0_FeesEstimate: {
            FeeDetailList?: components["schemas"]["productFeesV0_FeeDetailList"];
            /**
             * Format: date-time
             * @description The time at which the fees were estimated. This defaults to the time the request is made.
             */
            TimeOfFeesEstimation: string;
            TotalFeesEstimate?: components["schemas"]["productFeesV0_MoneyType"];
        };
        /** @description A product, marketplace, and proposed price used to request estimated fees. */
        productFeesV0_FeesEstimateByIdRequest: {
            FeesEstimateRequest?: components["schemas"]["productFeesV0_FeesEstimateRequest"];
            IdType: components["schemas"]["productFeesV0_IdType"];
            /** @description The item identifier. */
            IdValue: string;
        };
        /** @description An unexpected error occurred during this operation. */
        productFeesV0_FeesEstimateError: {
            /** @description An error code that identifies the type of error that occurred. */
            Code: string;
            Detail: components["schemas"]["productFeesV0_FeesEstimateErrorDetail"];
            /** @description A message that describes the error condition. */
            Message: string;
            /** @description An error type, identifying either the receiver or the sender as the originator of the error. */
            Type: string;
        };
        /** @description Additional information that can help the caller understand or fix the issue. */
        productFeesV0_FeesEstimateErrorDetail: Record<string, unknown>[];
        /** @description An item identifier, marketplace, time of request, and other details that identify an estimate. */
        productFeesV0_FeesEstimateIdentifier: {
            IdType?: components["schemas"]["productFeesV0_IdType"];
            /** @description The item identifier. */
            IdValue?: string;
            /** @description When true, the offer is fulfilled by Amazon. */
            IsAmazonFulfilled?: boolean;
            /** @description A marketplace identifier. */
            MarketplaceId?: string;
            OptionalFulfillmentProgram?: components["schemas"]["productFeesV0_OptionalFulfillmentProgram"];
            PriceToEstimateFees?: components["schemas"]["productFeesV0_PriceToEstimateFees"];
            /** @description The seller identifier. */
            SellerId?: string;
            /** @description A unique identifier provided by the caller to track this request. */
            SellerInputIdentifier?: string;
        };
        /** @description A product, marketplace, and proposed price used to request estimated fees. */
        productFeesV0_FeesEstimateRequest: {
            /** @description A unique identifier provided by the caller to track this request. */
            Identifier: string;
            /** @description When true, the offer is fulfilled by Amazon. */
            IsAmazonFulfilled?: boolean;
            /** @description A marketplace identifier. */
            MarketplaceId: string;
            OptionalFulfillmentProgram?: components["schemas"]["productFeesV0_OptionalFulfillmentProgram"];
            PriceToEstimateFees: components["schemas"]["productFeesV0_PriceToEstimateFees"];
        };
        /** @description An item identifier and the estimated fees for the item. */
        productFeesV0_FeesEstimateResult: {
            Error?: components["schemas"]["productFeesV0_FeesEstimateError"];
            FeesEstimate?: components["schemas"]["productFeesV0_FeesEstimate"];
            FeesEstimateIdentifier?: components["schemas"]["productFeesV0_FeesEstimateIdentifier"];
            /** @description The status of the fee request. Possible values: Success, ClientError, ServiceError. */
            Status?: string;
        };
        /** @description Request schema. */
        productFeesV0_GetMyFeesEstimateRequest: {
            FeesEstimateRequest?: components["schemas"]["productFeesV0_FeesEstimateRequest"];
        };
        /** @description The response object for the GetMyFeesEstimate operation. */
        productFeesV0_GetMyFeesEstimateResponse: {
            errors?: components["schemas"]["productFeesV0_ErrorList"];
            payload?: components["schemas"]["productFeesV0_GetMyFeesEstimateResult"];
        };
        /** @description Response schema. */
        productFeesV0_GetMyFeesEstimateResult: {
            FeesEstimateResult?: components["schemas"]["productFeesV0_FeesEstimateResult"];
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        productFeesV0_GetMyFeesEstimatesErrorList: {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["productFeesV0_Error"][];
        };
        /** @description Request for estimated fees for a list of products. */
        productFeesV0_GetMyFeesEstimatesRequest: components["schemas"]["productFeesV0_FeesEstimateByIdRequest"][];
        /** @description Estimated fees for a list of products. */
        productFeesV0_GetMyFeesEstimatesResponse: components["schemas"]["productFeesV0_FeesEstimateResult"][];
        /**
         * @description The type of product identifier used in a `FeesEstimateByIdRequest`.
         * @enum {string}
         */
        productFeesV0_IdType: "ASIN" | "SellerSKU";
        /** @description The type of fee, fee amount, and other details. */
        productFeesV0_IncludedFeeDetail: {
            FeeAmount: components["schemas"]["productFeesV0_MoneyType"];
            FeePromotion?: components["schemas"]["productFeesV0_MoneyType"];
            /** @description The type of fee charged to a seller. */
            FeeType: string;
            FinalFee: components["schemas"]["productFeesV0_MoneyType"];
            TaxAmount?: components["schemas"]["productFeesV0_MoneyType"];
        };
        /** @description A list of other fees that contribute to a given fee. */
        productFeesV0_IncludedFeeDetailList: components["schemas"]["productFeesV0_IncludedFeeDetail"][];
        /** @description An object representing a monetary value with its currency information. */
        productFeesV0_MoneyType: {
            /** @description The monetary value. */
            Amount?: number;
            /** @description The currency code in ISO 4217 format. */
            CurrencyCode?: string;
        };
        /**
         * @description An optional enrollment program to return the estimated fees when the offer is fulfilled by Amazon (IsAmazonFulfilled is set to true).
         * @enum {string}
         */
        productFeesV0_OptionalFulfillmentProgram: "FBA_CORE" | "FBA_SNL" | "FBA_EFN";
        /** @description The number of Amazon Points offered with the purchase of an item.The Amazon Points program is only available in Japan. */
        productFeesV0_Points: {
            PointsMonetaryValue?: components["schemas"]["productFeesV0_MoneyType"];
            /**
             * Format: int32
             * @description The number of Amazon Points
             */
            PointsNumber?: number;
        };
        /** @description Price information for an item, used to estimate fees. */
        productFeesV0_PriceToEstimateFees: {
            ListingPrice: components["schemas"]["productFeesV0_MoneyType"];
            Points?: components["schemas"]["productFeesV0_Points"];
            Shipping?: components["schemas"]["productFeesV0_MoneyType"];
        };
        /** @description The ASIN of the item. */
        "productPricing_2022-05-01_Asin": string;
        /** @description The common properties for individual requests within a batch. */
        "productPricing_2022-05-01_BatchRequest": {
            body?: components["schemas"]["productPricing_2022-05-01_HttpBody"];
            headers?: components["schemas"]["productPricing_2022-05-01_HttpHeaders"];
            method: components["schemas"]["productPricing_2022-05-01_HttpMethod"];
            /** @description The URI associated with an individual request within a batch. For `FeaturedOfferExpectedPrice`, this is `/products/pricing/2022-05-01/offer/featuredOfferExpectedPrice`. */
            uri: string;
        };
        /** @description The common properties for responses to individual requests within a batch. */
        "productPricing_2022-05-01_BatchResponse": {
            headers: components["schemas"]["productPricing_2022-05-01_HttpHeaders"];
            status: components["schemas"]["productPricing_2022-05-01_HttpStatusLine"];
        };
        /** @description The `competitiveSummary` batch request data. */
        "productPricing_2022-05-01_CompetitiveSummaryBatchRequest": {
            requests: components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryRequestList"];
        };
        /** @description The response schema for the `competitiveSummaryBatch` operation. */
        "productPricing_2022-05-01_CompetitiveSummaryBatchResponse": {
            responses: components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryResponseList"];
        };
        /**
         * @description The supported data types in the `getCompetitiveSummary` API.
         * @enum {string}
         */
        "productPricing_2022-05-01_CompetitiveSummaryIncludedData": "featuredBuyingOptions" | "referencePrices" | "lowestPricedOffers";
        /** @description An individual `competitiveSummary` request for an ASIN and `marketplaceId`. */
        "productPricing_2022-05-01_CompetitiveSummaryRequest": {
            asin: components["schemas"]["productPricing_2022-05-01_Asin"];
            /** @description The list of requested competitive pricing data for the product. */
            includedData: components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryIncludedData"][];
            /** @description The list of `lowestPricedOffersInput` parameters that are used to build `lowestPricedOffers` in the response. This attribute is only valid if `lowestPricedOffers` is requested in `includedData` */
            lowestPricedOffersInputs?: components["schemas"]["productPricing_2022-05-01_LowestPricedOffersInput"][];
            marketplaceId: components["schemas"]["productPricing_2022-05-01_MarketplaceId"];
            method: components["schemas"]["productPricing_2022-05-01_HttpMethod"];
            uri: components["schemas"]["productPricing_2022-05-01_HttpUri"];
        };
        /** @description A batched list of `competitiveSummary` requests. */
        "productPricing_2022-05-01_CompetitiveSummaryRequestList": components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryRequest"][];
        /** @description The response for the individual `competitiveSummary` request in the batch operation. */
        "productPricing_2022-05-01_CompetitiveSummaryResponse": {
            body: components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryResponseBody"];
            status: components["schemas"]["productPricing_2022-05-01_HttpStatusLine"];
        };
        /** @description The `competitiveSummaryResponse` body for a requested ASIN and `marketplaceId`. */
        "productPricing_2022-05-01_CompetitiveSummaryResponseBody": {
            asin: components["schemas"]["productPricing_2022-05-01_Asin"];
            errors?: components["schemas"]["productPricing_2022-05-01_ErrorList"];
            /** @description A list of featured buying options for the specified ASIN `marketplaceId` combination. */
            featuredBuyingOptions?: components["schemas"]["productPricing_2022-05-01_FeaturedBuyingOption"][];
            /** @description A list of lowest priced offers for the specified ASIN `marketplaceId` combination. */
            lowestPricedOffers?: components["schemas"]["productPricing_2022-05-01_LowestPricedOffer"][];
            marketplaceId: components["schemas"]["productPricing_2022-05-01_MarketplaceId"];
            /** @description A list of reference prices for the specified ASIN `marketplaceId` combination. */
            referencePrices?: components["schemas"]["productPricing_2022-05-01_ReferencePrice"][];
        };
        /** @description The response list for the `competitiveSummaryBatch` operation. */
        "productPricing_2022-05-01_CompetitiveSummaryResponseList": components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryResponse"][];
        /**
         * @description The condition of the item.
         * @enum {string}
         */
        "productPricing_2022-05-01_Condition": "New" | "Used" | "Collectible" | "Refurbished" | "Club";
        /** @description Error response returned when the request is unsuccessful. */
        "productPricing_2022-05-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses that are returned when a request is unsuccessful. */
        "productPricing_2022-05-01_ErrorList": components["schemas"]["productPricing_2022-05-01_Error"][];
        /** @description A list of error responses returned when a request is unsuccessful. */
        "productPricing_2022-05-01_Errors": {
            errors: components["schemas"]["productPricing_2022-05-01_ErrorList"];
        };
        /** @description Describes a featured buying option, which includes a list of segmented featured offers for a particular item condition. */
        "productPricing_2022-05-01_FeaturedBuyingOption": {
            /**
             * @description The buying option type for the featured offer. `buyingOptionType` represents the buying options that a customer receives on the detail page, such as `B2B`, `Fresh`, and `Subscribe n Save`. `buyingOptionType` currently supports `NEW` as a value.
             * @enum {string}
             */
            buyingOptionType: "New";
            /** @description A list of segmented featured offers for the current buying option type. A segment can be considered as a group of regional contexts that all have the same featured offer. A regional context is a combination of factors such as customer type, region, or postal code and buying option. */
            segmentedFeaturedOffers: components["schemas"]["productPricing_2022-05-01_SegmentedFeaturedOffer"][];
        };
        /** @description Schema for `currentFeaturedOffer` or `competingFeaturedOffer`. */
        "productPricing_2022-05-01_FeaturedOffer": {
            condition?: components["schemas"]["productPricing_2022-05-01_Condition"];
            offerIdentifier: components["schemas"]["productPricing_2022-05-01_OfferIdentifier"];
            price?: components["schemas"]["productPricing_2022-05-01_Price"];
        };
        /** @description The item price at or below which the target offer may be featured. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPrice": {
            listingPrice: components["schemas"]["productPricing_2022-05-01_MoneyType"];
            points?: components["schemas"]["productPricing_2022-05-01_Points"];
        };
        /** @description An individual FOEP request for a particular SKU. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceRequest": components["schemas"]["productPricing_2022-05-01_BatchRequest"] & components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceRequestParams"];
        /** @description A batched list of FOEP requests. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceRequestList": components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceRequest"][];
        /** @description The parameters for an individual request. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceRequestParams": {
            marketplaceId: components["schemas"]["productPricing_2022-05-01_MarketplaceId"];
            segment?: components["schemas"]["productPricing_2022-05-01_Segment"];
            sku: components["schemas"]["productPricing_2022-05-01_Sku"];
        };
        /** @description Schema for an individual FOEP response. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceResponse": components["schemas"]["productPricing_2022-05-01_BatchResponse"] & {
            body?: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceResponseBody"];
            request: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceRequestParams"];
        };
        /** @description The FOEP response data for a requested SKU. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceResponseBody": {
            errors?: components["schemas"]["productPricing_2022-05-01_ErrorList"];
            featuredOfferExpectedPriceResults?: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceResultList"];
            offerIdentifier?: components["schemas"]["productPricing_2022-05-01_OfferIdentifier"];
        };
        /** @description A batched list of FOEP responses. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceResponseList": components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceResponse"][];
        /** @description The FOEP result data for the requested offer. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceResult": {
            competingFeaturedOffer?: components["schemas"]["productPricing_2022-05-01_FeaturedOffer"];
            currentFeaturedOffer?: components["schemas"]["productPricing_2022-05-01_FeaturedOffer"];
            featuredOfferExpectedPrice?: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPrice"];
            /** @description The status of the FOEP computation. Possible values include `VALID_FOEP`, `NO_COMPETING_OFFER`, `OFFER_NOT_ELIGIBLE`, `OFFER_NOT_FOUND`, and `ASIN_NOT_ELIGIBLE`. Additional values might be added in the future. */
            resultStatus: string;
        };
        /** @description A list of FOEP results for the requested offer. */
        "productPricing_2022-05-01_FeaturedOfferExpectedPriceResultList": components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceResult"][];
        /** @description Describes the segment in which the offer is featured. */
        "productPricing_2022-05-01_FeaturedOfferSegment": {
            /**
             * @description The customer membership type that makes up this segment
             * @enum {string}
             */
            customerMembership: "PRIME" | "NON_PRIME" | "DEFAULT";
            segmentDetails: components["schemas"]["productPricing_2022-05-01_SegmentDetails"];
        };
        /**
         * @description Indicates whether the item is fulfilled by Amazon or by the seller (merchant).
         * @enum {string}
         */
        "productPricing_2022-05-01_FulfillmentType": "AFN" | "MFN";
        /** @description The request body for the `getFeaturedOfferExpectedPriceBatch` operation. */
        "productPricing_2022-05-01_GetFeaturedOfferExpectedPriceBatchRequest": {
            requests?: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceRequestList"];
        };
        /** @description The response schema for the `getFeaturedOfferExpectedPriceBatch` operation. */
        "productPricing_2022-05-01_GetFeaturedOfferExpectedPriceBatchResponse": {
            responses?: components["schemas"]["productPricing_2022-05-01_FeaturedOfferExpectedPriceResponseList"];
        };
        /** @description Additional HTTP body information that is associated with an individual request within a batch. */
        "productPricing_2022-05-01_HttpBody": {
            [key: string]: unknown;
        };
        /** @description A mapping of additional HTTP headers to send or receive for an individual request within a batch. */
        "productPricing_2022-05-01_HttpHeaders": {
            [key: string]: string;
        };
        /**
         * @description The HTTP method associated with an individual request within a batch.
         * @enum {string}
         */
        "productPricing_2022-05-01_HttpMethod": "GET" | "PUT" | "PATCH" | "DELETE" | "POST";
        /** @description The HTTP status line associated with the response for an individual request within a batch. For more information, refer to [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html). */
        "productPricing_2022-05-01_HttpStatusLine": {
            /** @description The HTTP response reason phrase. */
            reasonPhrase?: string;
            /** @description The HTTP response status code. */
            statusCode?: number;
        };
        /** @description The URI associated with the individual APIs that are called as part of the batch request. */
        "productPricing_2022-05-01_HttpUri": string;
        /** @description Describes the lowest priced offers for the specified item condition and offer type. */
        "productPricing_2022-05-01_LowestPricedOffer": {
            lowestPricedOffersInput: components["schemas"]["productPricing_2022-05-01_LowestPricedOffersInput"];
            /** @description A list of up to 20 lowest priced offers that match the criteria specified in `lowestPricedOffersInput`. */
            offers: components["schemas"]["productPricing_2022-05-01_Offer"][];
        };
        /** @description The input required for building `LowestPricedOffers` data in the response. */
        "productPricing_2022-05-01_LowestPricedOffersInput": {
            itemCondition: components["schemas"]["productPricing_2022-05-01_Condition"];
            /**
             * @description The input parameter specifies the type of offers requested for `LowestPricedOffers`. This applies to `Consumer` and `Business` offers. `Consumer` is the default `offerType`.
             * @enum {string}
             */
            offerType: "Consumer";
        };
        /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
        "productPricing_2022-05-01_MarketplaceId": string;
        /** @description Currency type and monetary value schema to demonstrate pricing information. */
        "productPricing_2022-05-01_MoneyType": {
            /** @description The monetary value. */
            amount?: number;
            /** @description The currency code in ISO 4217 format. */
            currencyCode?: string;
        };
        /** @description The offer data of a product. */
        "productPricing_2022-05-01_Offer": {
            condition: components["schemas"]["productPricing_2022-05-01_Condition"];
            fulfillmentType: components["schemas"]["productPricing_2022-05-01_FulfillmentType"];
            listingPrice: components["schemas"]["productPricing_2022-05-01_MoneyType"];
            points?: components["schemas"]["productPricing_2022-05-01_Points"];
            primeDetails?: components["schemas"]["productPricing_2022-05-01_PrimeDetails"];
            /** @description The seller identifier for the offer. */
            sellerId: string;
            /** @description A list of shipping options associated with this offer */
            shippingOptions?: components["schemas"]["productPricing_2022-05-01_ShippingOption"][];
            /**
             * @description The item subcondition of the offer.
             * @enum {string}
             */
            subCondition?: "New" | "Mint" | "VeryGood" | "Good" | "Acceptable" | "Poor" | "Club" | "OEM" | "Warranty" | "RefurbishedWarranty" | "Refurbished" | "OpenBox" | "Other";
        };
        /** @description Identifies an offer from a particular seller for a specified ASIN. */
        "productPricing_2022-05-01_OfferIdentifier": {
            asin: components["schemas"]["productPricing_2022-05-01_Asin"];
            fulfillmentType?: components["schemas"]["productPricing_2022-05-01_FulfillmentType"];
            marketplaceId: components["schemas"]["productPricing_2022-05-01_MarketplaceId"];
            /** @description The seller identifier for the offer. */
            sellerId?: string;
            /** @description The seller SKU of the item. This will only be present for the target offer, which belongs to the requesting seller. */
            sku?: string;
        };
        /** @description The number of Amazon Points that are offered with the purchase of an item and the monetary value of these points. */
        "productPricing_2022-05-01_Points": {
            pointsMonetaryValue?: components["schemas"]["productPricing_2022-05-01_MoneyType"];
            /**
             * Format: int32
             * @description The number of Amazon Points.
             */
            pointsNumber?: number;
        };
        /** @description Postal code value with country code */
        "productPricing_2022-05-01_PostalCode": {
            /** @description Country code value */
            countryCode?: string;
            /** @description Postal code value  */
            value?: string;
        };
        /** @description The schema for item's price information, including listing price, shipping price, and Amazon Points. */
        "productPricing_2022-05-01_Price": {
            listingPrice: components["schemas"]["productPricing_2022-05-01_MoneyType"];
            points?: components["schemas"]["productPricing_2022-05-01_Points"];
            shippingPrice?: components["schemas"]["productPricing_2022-05-01_MoneyType"];
        };
        /** @description Amazon Prime details. */
        "productPricing_2022-05-01_PrimeDetails": {
            /**
             * @description Indicates whether the offer is an Amazon Prime offer.
             * @enum {string}
             */
            eligibility: "NATIONAL" | "REGIONAL" | "NONE";
        };
        /** @description The reference price for the specified ASIN `marketplaceId` combination. */
        "productPricing_2022-05-01_ReferencePrice": {
            /** @description Reference price type (e.g., `CompetitivePriceThreshold`, `WasPrice`, `CompetitivePrice`). For definitions, see the [Product Pricing API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide). */
            name: string;
            price: components["schemas"]["productPricing_2022-05-01_MoneyType"];
        };
        /** @description Information about a location. It uses a postal code to identify the location. */
        "productPricing_2022-05-01_SampleLocation": {
            postalCode?: components["schemas"]["productPricing_2022-05-01_PostalCode"];
        };
        /** @description Input segment for featured offer expected price. The segment contains the location information for which featured offer expected price is requested. */
        "productPricing_2022-05-01_Segment": {
            segmentDetails?: components["schemas"]["productPricing_2022-05-01_SegmentDetails"];
        };
        /** @description The details about the segment. The FeaturedOfferExpectedPrice API uses only the sampleLocation portion as input. */
        "productPricing_2022-05-01_SegmentDetails": {
            /** @description The glance view weighted percentage for this segment, which is the glance views for this segment as a percentage of total glance views across all segments for the ASIN. A higher percentage indicates that more Amazon customers receive this offer as the Featured Offer. */
            glanceViewWeightPercentage?: number;
            sampleLocation?: components["schemas"]["productPricing_2022-05-01_SampleLocation"];
        };
        /** @description A product offer with segment information indicating where it's featured. */
        "productPricing_2022-05-01_SegmentedFeaturedOffer": components["schemas"]["productPricing_2022-05-01_Offer"] & {
            /** @description The list of segment information in which the offer is featured. */
            featuredOfferSegments: components["schemas"]["productPricing_2022-05-01_FeaturedOfferSegment"][];
        };
        /** @description The shipping option available for the offer. */
        "productPricing_2022-05-01_ShippingOption": {
            price: components["schemas"]["productPricing_2022-05-01_MoneyType"];
            /**
             * @description The type of shipping option.
             * @enum {unknown}
             */
            shippingOptionType: "DEFAULT";
        };
        /** @description The seller SKU of the item. */
        "productPricing_2022-05-01_Sku": string;
        /** @description The Amazon Standard Identification Number (ASIN) of the item. */
        productPricingV0_Asin: string;
        /** @description Schema to identify an item by MarketPlaceId and ASIN. */
        productPricingV0_ASINIdentifier: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN: string;
            /** @description A marketplace identifier. */
            MarketplaceId: string;
        };
        /** @description A list of product attributes if they are applicable to the product that is returned. */
        productPricingV0_AttributeSetList: Record<string, unknown>[];
        /** @description Common request parameters that can be accepted by `ItemOffersRequest` and `ListingOffersRequest` */
        productPricingV0_BatchOffersRequestParams: {
            CustomerType?: components["schemas"]["productPricingV0_CustomerType"];
            ItemCondition: components["schemas"]["productPricingV0_ItemCondition"];
            MarketplaceId: components["schemas"]["productPricingV0_MarketplaceId"];
        };
        /** @description Common schema that present in `ItemOffersResponse` and `ListingOffersResponse` */
        productPricingV0_BatchOffersResponse: {
            body: components["schemas"]["productPricingV0_GetOffersResponse"];
            headers?: components["schemas"]["productPricingV0_HttpResponseHeaders"];
            status?: components["schemas"]["productPricingV0_GetOffersHttpStatusLine"];
        };
        /** @description Common properties of batch requests against individual APIs. */
        productPricingV0_BatchRequest: {
            headers?: components["schemas"]["productPricingV0_HttpRequestHeaders"];
            method: components["schemas"]["productPricingV0_HttpMethod"];
            /** @description The resource path of the operation you are calling in batch without any query parameters.
             *
             *     If you are calling `getItemOffersBatch`, supply the path of `getItemOffers`.
             *
             *     **Example:** `/products/pricing/v0/items/B000P6Q7MY/offers`
             *
             *     If you are calling `getListingOffersBatch`, supply the path of `getListingOffers`.
             *
             *     **Example:** `/products/pricing/v0/listings/B000P6Q7MY/offers` */
            uri: string;
        };
        /** @description A list that contains the total number of offers that are eligible for the Buy Box for the given conditions and fulfillment channels. */
        productPricingV0_BuyBoxEligibleOffers: components["schemas"]["productPricingV0_OfferCountType"][];
        /** @description A list of the Buy Box prices. */
        productPricingV0_BuyBoxPrices: components["schemas"]["productPricingV0_BuyBoxPriceType"][];
        /** @description Schema for an individual buybox price. */
        productPricingV0_BuyBoxPriceType: {
            /** @description Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club. */
            condition: string;
            LandedPrice: components["schemas"]["productPricingV0_MoneyType"];
            ListingPrice: components["schemas"]["productPricingV0_MoneyType"];
            offerType?: components["schemas"]["productPricingV0_OfferCustomerType"];
            Points?: components["schemas"]["productPricingV0_Points"];
            quantityDiscountType?: components["schemas"]["productPricingV0_QuantityDiscountType"];
            /**
             * Format: int32
             * @description Indicates at what quantity this price becomes active.
             */
            quantityTier?: number;
            /** @description The seller identifier for the offer. */
            sellerId?: string;
            Shipping: components["schemas"]["productPricingV0_MoneyType"];
        };
        /** @description A list of competitive pricing information. */
        productPricingV0_CompetitivePriceList: components["schemas"]["productPricingV0_CompetitivePriceType"][];
        /** @description Schema for competitive pricing information */
        productPricingV0_CompetitivePriceType: {
            /** @description  Indicates whether or not the pricing information is for an offer listing that belongs to the requester. The requester is the seller associated with the SellerId that was submitted with the request. Possible values are: true and false. */
            belongsToRequester?: boolean;
            /** @description The pricing model for each price that is returned.
             *
             *     Possible values:
             *
             *     * 1 - New Buy Box Price.
             *     * 2 - Used Buy Box Price. */
            CompetitivePriceId: string;
            /** @description Indicates the condition of the item whose pricing information is returned. Possible values are: New, Used, Collectible, Refurbished, or Club. */
            condition?: string;
            offerType?: components["schemas"]["productPricingV0_OfferCustomerType"];
            Price: components["schemas"]["productPricingV0_PriceType"];
            quantityDiscountType?: components["schemas"]["productPricingV0_QuantityDiscountType"];
            /**
             * Format: int32
             * @description Indicates at what quantity this price becomes active.
             */
            quantityTier?: number;
            /** @description The seller identifier for the offer. */
            sellerId?: string;
            /** @description Indicates the subcondition of the item whose pricing information is returned. Possible values are: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other. */
            subcondition?: string;
        };
        /** @description Competitive pricing information for the item. */
        productPricingV0_CompetitivePricingType: {
            CompetitivePrices: components["schemas"]["productPricingV0_CompetitivePriceList"];
            NumberOfOfferListings: components["schemas"]["productPricingV0_NumberOfOfferListingsList"];
            TradeInValue?: components["schemas"]["productPricingV0_MoneyType"];
        };
        /**
         * @description Indicates the condition of the item. Possible values: New, Used, Collectible, Refurbished, Club.
         * @enum {string}
         */
        productPricingV0_ConditionType: "New" | "Used" | "Collectible" | "Refurbished" | "Club";
        /**
         * @description Indicates whether to request Consumer or Business offers. Default is Consumer.
         * @enum {string}
         */
        productPricingV0_CustomerType: "Consumer" | "Business";
        /** @description The time range in which an item will likely be shipped once an order has been placed. */
        productPricingV0_DetailedShippingTimeType: {
            /**
             * @description Indicates whether the item is available for shipping now, or on a known or an unknown date in the future. If known, the availableDate property indicates the date that the item will be available for shipping. Possible values: NOW, FUTURE_WITHOUT_DATE, FUTURE_WITH_DATE.
             * @enum {string}
             */
            availabilityType?: "NOW" | "FUTURE_WITHOUT_DATE" | "FUTURE_WITH_DATE";
            /** @description The date when the item will be available for shipping. Only displayed for items that are not currently available for shipping. */
            availableDate?: string;
            /**
             * Format: int64
             * @description The maximum time, in hours, that the item will likely be shipped after the order has been placed.
             */
            maximumHours?: number;
            /**
             * Format: int64
             * @description The minimum time, in hours, that the item will likely be shipped after the order has been placed.
             */
            minimumHours?: number;
        };
        /** @description Error response returned when the request is unsuccessful. */
        productPricingV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        productPricingV0_ErrorList: components["schemas"]["productPricingV0_Error"][];
        /** @description A list of error responses returned when a request is unsuccessful. */
        productPricingV0_Errors: {
            errors: components["schemas"]["productPricingV0_ErrorList"];
        };
        /**
         * @description Indicates whether the item is fulfilled by Amazon or by the seller (merchant).
         * @enum {string}
         */
        productPricingV0_FulfillmentChannelType: "Amazon" | "Merchant";
        /** @description The request associated with the `getItemOffersBatch` API call. */
        productPricingV0_GetItemOffersBatchRequest: {
            requests?: components["schemas"]["productPricingV0_ItemOffersRequestList"];
        };
        /** @description The response associated with the `getItemOffersBatch` API call. */
        productPricingV0_GetItemOffersBatchResponse: {
            responses?: components["schemas"]["productPricingV0_ItemOffersResponseList"];
        };
        /** @description The request associated with the `getListingOffersBatch` API call. */
        productPricingV0_GetListingOffersBatchRequest: {
            requests?: components["schemas"]["productPricingV0_ListingOffersRequestList"];
        };
        /** @description The response associated with the `getListingOffersBatch` API call. */
        productPricingV0_GetListingOffersBatchResponse: {
            responses?: components["schemas"]["productPricingV0_ListingOffersResponseList"];
        };
        /** @description The HTTP status line associated with the response.  For more information, consult [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html). */
        productPricingV0_GetOffersHttpStatusLine: {
            /** @description The HTTP response Reason-Phase. */
            reasonPhrase?: string;
            /** @description The HTTP response Status Code. */
            statusCode?: number;
        };
        /** @description The response schema for the `getListingOffers` and `getItemOffers` operations. */
        productPricingV0_GetOffersResponse: {
            errors?: components["schemas"]["productPricingV0_ErrorList"];
            payload?: components["schemas"]["productPricingV0_GetOffersResult"];
        };
        /** @description The payload for the getListingOffers and getItemOffers operations. */
        productPricingV0_GetOffersResult: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            Identifier: components["schemas"]["productPricingV0_ItemIdentifier"];
            ItemCondition: components["schemas"]["productPricingV0_ConditionType"];
            /** @description A marketplace identifier. */
            MarketplaceID: string;
            Offers: components["schemas"]["productPricingV0_OfferDetailList"];
            /** @description The stock keeping unit (SKU) of the item. */
            SKU?: string;
            /** @description The status of the operation. */
            status: string;
            Summary: components["schemas"]["productPricingV0_Summary"];
        };
        /** @description The response schema for the `getPricing` and `getCompetitivePricing` operations. */
        productPricingV0_GetPricingResponse: {
            errors?: components["schemas"]["productPricingV0_ErrorList"];
            payload?: components["schemas"]["productPricingV0_PriceList"];
        };
        /**
         * @description The HTTP method associated with the individual APIs being called as part of the batch request.
         * @enum {string}
         */
        productPricingV0_HttpMethod: "GET" | "PUT" | "PATCH" | "DELETE" | "POST";
        /** @description A mapping of additional HTTP headers to send/receive for the individual batch request. */
        productPricingV0_HttpRequestHeaders: {
            [key: string]: string;
        };
        /** @description A mapping of additional HTTP headers to send/receive for the individual batch request. */
        productPricingV0_HttpResponseHeaders: {
            /** @description The timestamp that the API request was received.  For more information, consult [RFC 2616 Section 14](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). */
            Date?: string;
            /** @description Unique request reference identifier. */
            "x-amzn-RequestId"?: string;
        } & {
            [key: string]: string;
        };
        /** @description The URI associated with the individual APIs being called as part of the batch request. */
        productPricingV0_HttpUri: string;
        /** @description Specifies the identifiers used to uniquely identify an item. */
        productPricingV0_IdentifierType: {
            MarketplaceASIN: components["schemas"]["productPricingV0_ASINIdentifier"];
            SKUIdentifier?: components["schemas"]["productPricingV0_SellerSKUIdentifier"];
        };
        /**
         * @description Filters the offer listings to be considered based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
         * @enum {string}
         */
        productPricingV0_ItemCondition: "New" | "Used" | "Collectible" | "Refurbished" | "Club";
        /** @description Information that identifies an item. */
        productPricingV0_ItemIdentifier: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            ItemCondition: components["schemas"]["productPricingV0_ConditionType"];
            /** @description A marketplace identifier. Specifies the marketplace from which prices are returned. */
            MarketplaceId: string;
            /** @description The seller stock keeping unit (SKU) of the item. */
            SellerSKU?: string;
        };
        /** @description List of request parameters can be accepted by `ItemOffersRequests` operation */
        productPricingV0_ItemOffersRequest: components["schemas"]["productPricingV0_BatchRequest"] & components["schemas"]["productPricingV0_BatchOffersRequestParams"];
        /** @description A list of `getListingOffers` batched requests to run. */
        productPricingV0_ItemOffersRequestList: components["schemas"]["productPricingV0_ItemOffersRequest"][];
        /** @description List of request parameters that can be accepted by `ItemOffersRequest` */
        productPricingV0_ItemOffersRequestParams: components["schemas"]["productPricingV0_BatchOffersRequestParams"] & {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. This is the same Asin passed as a request parameter. */
            Asin?: string;
        };
        /** @description Schema for an individual `ItemOffersResponse` */
        productPricingV0_ItemOffersResponse: components["schemas"]["productPricingV0_BatchOffersResponse"] & {
            request: components["schemas"]["productPricingV0_ItemOffersRequestParams"];
        };
        /** @description A list of `getItemOffers` batched responses. */
        productPricingV0_ItemOffersResponseList: components["schemas"]["productPricingV0_ItemOffersResponse"][];
        /** @description List of request parameters that can be accepted by `ListingOffersRequest` operation */
        productPricingV0_ListingOffersRequest: components["schemas"]["productPricingV0_BatchRequest"] & components["schemas"]["productPricingV0_BatchOffersRequestParams"];
        /** @description A list of `getListingOffers` batched requests to run. */
        productPricingV0_ListingOffersRequestList: components["schemas"]["productPricingV0_ListingOffersRequest"][];
        /** @description List of request parameters that can be accepted by `ListingOffersRequest` */
        productPricingV0_ListingOffersRequestParams: components["schemas"]["productPricingV0_BatchOffersRequestParams"] & {
            /** @description The seller stock keeping unit (SKU) of the item. This is the same SKU passed as a path parameter. */
            SellerSKU: string;
        };
        /** @description Schema for an individual `ListingOffersResponse` */
        productPricingV0_ListingOffersResponse: components["schemas"]["productPricingV0_BatchOffersResponse"] & {
            request?: components["schemas"]["productPricingV0_ListingOffersRequestParams"];
        };
        /** @description A list of `getListingOffers` batched responses. */
        productPricingV0_ListingOffersResponseList: components["schemas"]["productPricingV0_ListingOffersResponse"][];
        /** @description A list of the lowest prices. */
        productPricingV0_LowestPrices: components["schemas"]["productPricingV0_LowestPriceType"][];
        /** @description Schema for an individual lowest price. */
        productPricingV0_LowestPriceType: {
            /** @description Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club. */
            condition: string;
            /** @description Indicates whether the item is fulfilled by Amazon or by the seller. */
            fulfillmentChannel: string;
            LandedPrice?: components["schemas"]["productPricingV0_MoneyType"];
            ListingPrice: components["schemas"]["productPricingV0_MoneyType"];
            offerType?: components["schemas"]["productPricingV0_OfferCustomerType"];
            Points?: components["schemas"]["productPricingV0_Points"];
            quantityDiscountType?: components["schemas"]["productPricingV0_QuantityDiscountType"];
            /**
             * Format: int32
             * @description Indicates at what quantity this price becomes active.
             */
            quantityTier?: number;
            Shipping?: components["schemas"]["productPricingV0_MoneyType"];
        };
        /** @description A marketplace identifier. Specifies the marketplace for which prices are returned. */
        productPricingV0_MarketplaceId: string;
        /** @description Currency type and monetary value. Schema for demonstrating pricing info. */
        productPricingV0_MoneyType: {
            /** @description The monetary value. */
            Amount?: number;
            /** @description The currency code in ISO 4217 format. */
            CurrencyCode?: string;
        };
        /** @description The number of active offer listings for the item that was submitted. The listing count is returned by condition, one for each listing condition value that is returned. */
        productPricingV0_NumberOfOfferListingsList: components["schemas"]["productPricingV0_OfferListingCountType"][];
        /** @description A list that contains the total number of offers information for given conditions and fulfillment channels. */
        productPricingV0_NumberOfOffers: components["schemas"]["productPricingV0_OfferCountType"][];
        /** @description The total number of offers for the specified condition and fulfillment channel. */
        productPricingV0_OfferCountType: {
            /** @description Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club. */
            condition?: string;
            fulfillmentChannel?: components["schemas"]["productPricingV0_FulfillmentChannelType"];
            /**
             * Format: int32
             * @description The number of offers in a fulfillment channel that meet a specific condition.
             */
            OfferCount?: number;
        };
        /**
         * @description Indicates whether the offer is a B2B or B2C offer
         * @enum {string}
         */
        productPricingV0_OfferCustomerType: "B2C" | "B2B";
        /** @description Schema for an individual offer. Object in `OfferDetailList`. */
        productPricingV0_OfferDetail: {
            /** @description Information about the condition of the item. */
            ConditionNotes?: string;
            /** @description When true, the offer is currently in the Buy Box. There can be up to two Buy Box winners at any time per ASIN, one that is eligible for Prime and one that is not eligible for Prime. */
            IsBuyBoxWinner?: boolean;
            /** @description When true, the seller of the item is eligible to win the Buy Box. */
            IsFeaturedMerchant?: boolean;
            /** @description When true, the offer is fulfilled by Amazon. */
            IsFulfilledByAmazon: boolean;
            ListingPrice: components["schemas"]["productPricingV0_MoneyType"];
            /** @description When true, this is the seller's offer. */
            MyOffer?: boolean;
            offerType?: components["schemas"]["productPricingV0_OfferCustomerType"];
            Points?: components["schemas"]["productPricingV0_Points"];
            PrimeInformation?: components["schemas"]["productPricingV0_PrimeInformationType"];
            /** @description List of `QuantityDiscountPrice` that contains item's pricing information when buy in bulk. */
            quantityDiscountPrices?: components["schemas"]["productPricingV0_QuantityDiscountPriceType"][];
            SellerFeedbackRating?: components["schemas"]["productPricingV0_SellerFeedbackType"];
            /** @description The seller identifier for the offer. */
            SellerId?: string;
            Shipping: components["schemas"]["productPricingV0_MoneyType"];
            ShippingTime: components["schemas"]["productPricingV0_DetailedShippingTimeType"];
            ShipsFrom?: components["schemas"]["productPricingV0_ShipsFromType"];
            /** @description The subcondition of the item. Subcondition values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other. */
            SubCondition: string;
        };
        /** @description A list of offer details. The list is the same length as the TotalOfferCount in the Summary or 20, whichever is less. */
        productPricingV0_OfferDetailList: components["schemas"]["productPricingV0_OfferDetail"][];
        /** @description The number of offer listings with the specified condition. */
        productPricingV0_OfferListingCountType: {
            /** @description The condition of the item. */
            condition: string;
            /**
             * Format: int32
             * @description The number of offer listings.
             */
            Count: number;
        };
        /** @description A list of offers. */
        productPricingV0_OffersList: components["schemas"]["productPricingV0_OfferType"][];
        /** @description Schema for an individual offer. */
        productPricingV0_OfferType: {
            businessPrice?: components["schemas"]["productPricingV0_MoneyType"];
            BuyingPrice: components["schemas"]["productPricingV0_PriceType"];
            /** @description The fulfillment channel for the offer listing. Possible values:
             *
             *     * Amazon - Fulfilled by Amazon.
             *     * Merchant - Fulfilled by the seller. */
            FulfillmentChannel: string;
            /** @description The item condition for the offer listing. Possible values: New, Used, Collectible, Refurbished, or Club. */
            ItemCondition: string;
            /** @description The item subcondition for the offer listing. Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other. */
            ItemSubCondition: string;
            offerType?: components["schemas"]["productPricingV0_OfferCustomerType"];
            /** @description List of `QuantityDiscountPrice` that contains item's pricing information when buy in bulk. */
            quantityDiscountPrices?: components["schemas"]["productPricingV0_QuantityDiscountPriceType"][];
            RegularPrice: components["schemas"]["productPricingV0_MoneyType"];
            /** @description The seller stock keeping unit (SKU) of the item. */
            SellerSKU: string;
        };
        /** @description The number of Amazon Points offered with the purchase of an item, and their monetary value. */
        productPricingV0_Points: {
            PointsMonetaryValue?: components["schemas"]["productPricingV0_MoneyType"];
            /**
             * Format: int32
             * @description The number of points.
             */
            PointsNumber?: number;
        };
        /** @description Schema for price info in `getPricing` response */
        productPricingV0_Price: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            Product?: components["schemas"]["productPricingV0_Product"];
            /** @description The seller stock keeping unit (SKU) of the item. */
            SellerSKU?: string;
            /** @description The status of the operation. */
            status: string;
        };
        /** @description The payload for the `getPricing` and `getCompetitivePricing` operations. */
        productPricingV0_PriceList: components["schemas"]["productPricingV0_Price"][];
        /** @description Schema for item's price information, including listing price, shipping price, and Amazon points. */
        productPricingV0_PriceType: {
            LandedPrice?: components["schemas"]["productPricingV0_MoneyType"];
            ListingPrice: components["schemas"]["productPricingV0_MoneyType"];
            Points?: components["schemas"]["productPricingV0_Points"];
            Shipping?: components["schemas"]["productPricingV0_MoneyType"];
        };
        /** @description Amazon Prime information. */
        productPricingV0_PrimeInformationType: {
            /** @description Indicates whether the offer is an Amazon Prime offer throughout the entire marketplace where it is listed. */
            IsNationalPrime: boolean;
            /** @description Indicates whether the offer is an Amazon Prime offer. */
            IsPrime: boolean;
        };
        /** @description An item. */
        productPricingV0_Product: {
            AttributeSets?: components["schemas"]["productPricingV0_AttributeSetList"];
            CompetitivePricing?: components["schemas"]["productPricingV0_CompetitivePricingType"];
            Identifiers: components["schemas"]["productPricingV0_IdentifierType"];
            Offers?: components["schemas"]["productPricingV0_OffersList"];
            Relationships?: components["schemas"]["productPricingV0_RelationshipList"];
            SalesRankings?: components["schemas"]["productPricingV0_SalesRankList"];
        };
        /** @description Contains pricing information that includes special pricing when buying in bulk. */
        productPricingV0_QuantityDiscountPriceType: {
            listingPrice: components["schemas"]["productPricingV0_MoneyType"];
            quantityDiscountType: components["schemas"]["productPricingV0_QuantityDiscountType"];
            /**
             * Format: int32
             * @description Indicates at what quantity this price becomes active.
             */
            quantityTier: number;
        };
        /**
         * @description Indicates the type of quantity discount this price applies to.
         * @enum {string}
         */
        productPricingV0_QuantityDiscountType: "QUANTITY_DISCOUNT";
        /** @description A list that contains product variation information, if applicable. */
        productPricingV0_RelationshipList: Record<string, unknown>[];
        /** @description A list of sales rank information for the item, by category. */
        productPricingV0_SalesRankList: components["schemas"]["productPricingV0_SalesRankType"][];
        /** @description Sales rank information for the item, by category */
        productPricingV0_SalesRankType: {
            /** @description  Identifies the item category from which the sales rank is taken. */
            ProductCategoryId: string;
            /**
             * Format: int32
             * @description The sales rank of the item within the item category.
             */
            Rank: number;
        };
        /** @description Information about the seller's feedback, including the percentage of positive feedback, and the total number of ratings received. */
        productPricingV0_SellerFeedbackType: {
            /**
             * Format: int64
             * @description The number of ratings received about the seller.
             */
            FeedbackCount: number;
            /**
             * Format: double
             * @description The percentage of positive feedback for the seller in the past 365 days.
             */
            SellerPositiveFeedbackRating?: number;
        };
        /** @description Schema to identify an item by MarketPlaceId, SellerId, and SellerSKU. */
        productPricingV0_SellerSKUIdentifier: {
            /** @description A marketplace identifier. */
            MarketplaceId: string;
            /** @description The seller identifier submitted for the operation. */
            SellerId: string;
            /** @description The seller stock keeping unit (SKU) of the item. */
            SellerSKU: string;
        };
        /** @description The state and country from where the item is shipped. */
        productPricingV0_ShipsFromType: {
            /** @description The country from where the item is shipped. */
            Country?: string;
            /** @description The state from where the item is shipped. */
            State?: string;
        };
        /** @description Contains price information about the product, including the LowestPrices and BuyBoxPrices, the ListPrice, the SuggestedLowerPricePlusShipping, and NumberOfOffers and NumberOfBuyBoxEligibleOffers. */
        productPricingV0_Summary: {
            BuyBoxEligibleOffers?: components["schemas"]["productPricingV0_BuyBoxEligibleOffers"];
            BuyBoxPrices?: components["schemas"]["productPricingV0_BuyBoxPrices"];
            CompetitivePriceThreshold?: components["schemas"]["productPricingV0_MoneyType"];
            ListPrice?: components["schemas"]["productPricingV0_MoneyType"];
            LowestPrices?: components["schemas"]["productPricingV0_LowestPrices"];
            NumberOfOffers?: components["schemas"]["productPricingV0_NumberOfOffers"];
            /**
             * Format: date-time
             * @description When the status is ActiveButTooSoonForProcessing, this is the time when the offers will be available for processing.
             */
            OffersAvailableTime?: string;
            SalesRankings?: components["schemas"]["productPricingV0_SalesRankList"];
            SuggestedLowerPricePlusShipping?: components["schemas"]["productPricingV0_MoneyType"];
            /**
             * Format: int32
             * @description The number of unique offers contained in NumberOfOffers.
             */
            TotalOfferCount: number;
        };
        /**
         * @description The time period used to group data in the response. Note that this is only valid for the `PERFORMANCE` time period type.
         * @enum {string}
         */
        "replenishment-2022-11-07_AggregationFrequency": "WEEK" | "MONTH" | "QUARTER" | "YEAR";
        /**
         * @description The auto-enrollment preference indicates whether the offer is opted-in to or opted-out of Amazon's auto-enrollment feature.
         * @enum {string}
         */
        "replenishment-2022-11-07_AutoEnrollmentPreference": "OPTED_IN" | "OPTED_OUT";
        /** @description The discount funding on the offer. */
        "replenishment-2022-11-07_DiscountFunding": {
            /** @description Filters the results to only include offers with the percentage specified. */
            percentage?: number[];
        };
        /**
         * @description The current eligibility status of an offer.
         * @enum {string}
         */
        "replenishment-2022-11-07_EligibilityStatus": "ELIGIBLE" | "INELIGIBLE" | "SUSPENDED" | "REPLENISHMENT_ONLY_ORDERING";
        /**
         * @description The enrollment method used to enroll the offer into the program.
         * @enum {string}
         */
        "replenishment-2022-11-07_EnrollmentMethod": "MANUAL" | "AUTOMATIC";
        /** @description Error response returned when the request is unsuccessful. */
        "replenishment-2022-11-07_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "replenishment-2022-11-07_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["replenishment-2022-11-07_Error"][];
        };
        /** @description The request body for the `getSellingPartnerMetrics` operation. */
        "replenishment-2022-11-07_GetSellingPartnerMetricsRequest": {
            aggregationFrequency?: components["schemas"]["replenishment-2022-11-07_AggregationFrequency"];
            marketplaceId: components["schemas"]["replenishment-2022-11-07_MarketplaceId"];
            /** @description The list of metrics requested. If no metric value is provided, data for all of the metrics will be returned. */
            metrics?: components["schemas"]["replenishment-2022-11-07_Metric"][];
            programTypes: components["schemas"]["replenishment-2022-11-07_ProgramTypes"];
            timeInterval: components["schemas"]["replenishment-2022-11-07_TimeInterval"];
            timePeriodType: components["schemas"]["replenishment-2022-11-07_TimePeriodType"];
        };
        /** @description The response schema for the `getSellingPartnerMetrics` operation. */
        "replenishment-2022-11-07_GetSellingPartnerMetricsResponse": {
            /** @description A list of metrics data for the selling partner. */
            metrics?: components["schemas"]["replenishment-2022-11-07_GetSellingPartnerMetricsResponseMetric"][];
        };
        /** @description An object which contains metric data for a selling partner. */
        "replenishment-2022-11-07_GetSellingPartnerMetricsResponseMetric": {
            /**
             * Format: int64
             * @description The number of active subscriptions present at the end of the period. Applicable to PERFORMANCE timePeriodType.
             */
            activeSubscriptions?: number;
            /**
             * Format: double
             * @description The percentage of revenue from ASINs with coupons out of total revenue from all ASINs. Applicable to PERFORMANCE timePeriodType.
             */
            couponsRevenuePenetration?: number;
            /** @description The currency code in ISO 4217 format. */
            currencyCode?: string;
            /**
             * Format: double
             * @description The revenue that would have been generated had there not been out of stock. Applicable to PERFORMANCE timePeriodType.
             */
            lostRevenueDueToOOS?: number;
            /**
             * Format: double
             * @description The average reorders per non-subscriber of the program over a period of past 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            nonSubscriberAverageReorders?: number;
            /**
             * Format: double
             * @description The average revenue per non-subscriber of the program over a period of past 12 months for sellers and 6 months for vendors. Applicable to PERFORMANCE timePeriodType.
             */
            nonSubscriberAverageRevenue?: number;
            /**
             * Format: double
             * @description The percentage of items that were not shipped out of the total shipped units over a period of time due to being out of stock. Applicable to PERFORMANCE timePeriodType.
             */
            notDeliveredDueToOOS?: number;
            /**
             * Format: double
             * @description The subscription revenue generated from active subscriptions with one delivery over the past 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenueFromActiveSubscriptionsWithSingleDelivery?: number;
            /**
             * Format: double
             * @description The subscription revenue generated from subscriptions which are cancelled after one delivery over the past 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenueFromCancelledSubscriptionsAfterSingleDelivery?: number;
            /**
             * Format: double
             * @description The subscription revenue generated from subscriptions with over two deliveries over the past 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenueFromSubscriptionsWithMultipleDeliveries?: number;
            /**
             * Format: double
             * @description The percentage of subscription revenue generated by offers with 0% seller-funded discount over the last 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenuePenetrationFor0PercentSellerFunding?: number;
            /**
             * Format: double
             * @description [Applicable only for Sellers] The percentage of subscription revenue generated by offers with 5% seller-funded discount over the last 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenuePenetrationFor5PercentSellerFunding?: number;
            /**
             * Format: double
             * @description [Applicable only for vendors] The percentage of subscription revenue generated by offers with 5% or above seller-funded discount over the last 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenuePenetrationFor5PlusPercentSellerFunding?: number;
            /**
             * Format: double
             * @description [Applicable only for Sellers] The percentage of subscription revenue generated by offers with 10% seller-funded discount over the last 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            revenuePenetrationFor10PercentSellerFunding?: number;
            /**
             * Format: double
             * @description The percentage of new subscriptions acquired through coupons. Applicable to PERFORMANCE timePeriodType.
             */
            shareOfCouponSubscriptions?: number;
            /**
             * Format: int64
             * @description The number of units shipped to the subscribers over a period of time. Applicable for both the PERFORMANCE and FORECAST timePeriodType.
             */
            shippedSubscriptionUnits?: number;
            /**
             * Format: double
             * @description The average reorders per subscriber of the program over a period of 12 months. Applicable to PERFORMANCE timePeriodType.
             */
            subscriberAverageReorders?: number;
            /**
             * Format: double
             * @description The average revenue per subscriber of the program over a period of past 12 months for sellers and 6 months for vendors. Applicable to PERFORMANCE timePeriodType.
             */
            subscriberAverageRevenue?: number;
            /**
             * Format: double
             * @description The percentage of subscriptions retained after 30 days of subscription creation. Applicable to PERFORMANCE timePeriodType.
             */
            subscriberRetentionFor30Days?: number;
            /**
             * Format: double
             * @description The percentage of subscriptions retained after 90 days of subscription creation. Applicable to PERFORMANCE timePeriodType.
             */
            subscriberRetentionFor90Days?: number;
            timeInterval?: components["schemas"]["replenishment-2022-11-07_TimeInterval"];
            /**
             * Format: double
             * @description The revenue generated from subscriptions over a period of time. Applicable for both the PERFORMANCE and FORECAST timePeriodType.
             */
            totalSubscriptionsRevenue?: number;
        };
        /** @description The request body for the `listOfferMetrics` operation. */
        "replenishment-2022-11-07_ListOfferMetricsRequest": {
            filters: components["schemas"]["replenishment-2022-11-07_ListOfferMetricsRequestFilters"];
            pagination: components["schemas"]["replenishment-2022-11-07_ListOfferMetricsRequestPagination"];
            sort?: components["schemas"]["replenishment-2022-11-07_ListOfferMetricsRequestSort"];
        };
        /** @description Use these parameters to filter results. Any result must match all provided parameters. For any parameter that is an array, the result must match at least one element in the provided array. */
        "replenishment-2022-11-07_ListOfferMetricsRequestFilters": {
            aggregationFrequency?: components["schemas"]["replenishment-2022-11-07_AggregationFrequency"];
            /** @description A list of Amazon Standard Identification Numbers (ASINs). */
            asins?: string[];
            marketplaceId: components["schemas"]["replenishment-2022-11-07_MarketplaceId"];
            programTypes: components["schemas"]["replenishment-2022-11-07_ProgramTypes"];
            timeInterval: components["schemas"]["replenishment-2022-11-07_TimeInterval"];
            timePeriodType: components["schemas"]["replenishment-2022-11-07_TimePeriodType"];
        };
        /** @description Use these parameters to paginate through the response. */
        "replenishment-2022-11-07_ListOfferMetricsRequestPagination": {
            /**
             * Format: int64
             * @description The maximum number of results to return in the response.
             */
            limit: number;
            /**
             * Format: int64
             * @description The offset from which to retrieve the number of results specified by the `limit` value. The first result is at offset 0.
             */
            offset: number;
        };
        /** @description Use these parameters to sort the response. */
        "replenishment-2022-11-07_ListOfferMetricsRequestSort": {
            key: components["schemas"]["replenishment-2022-11-07_ListOfferMetricsSortKey"];
            order: components["schemas"]["replenishment-2022-11-07_SortOrder"];
        };
        /** @description The response schema for the `listOfferMetrics` operation. */
        "replenishment-2022-11-07_ListOfferMetricsResponse": {
            /** @description A list of offers and associated metrics. */
            offers?: components["schemas"]["replenishment-2022-11-07_ListOfferMetricsResponseOffer"][];
            pagination?: components["schemas"]["replenishment-2022-11-07_PaginationResponse"];
        };
        /** @description An object which contains offer metrics. */
        "replenishment-2022-11-07_ListOfferMetricsResponseOffer": {
            /**
             * Format: int64
             * @description The number of active subscriptions present at the end of the period. Applicable to PERFORMANCE timePeriodType.
             */
            activeSubscriptions?: number;
            /** @description The Amazon Standard Identification Number (ASIN). */
            asin?: string;
            /**
             * Format: double
             * @description The percentage of revenue from ASINs with coupons out of total revenue from all ASINs. Applicable to PERFORMANCE timePeriodType.
             */
            couponsRevenuePenetration?: number;
            /** @description The currency code in ISO 4217 format. */
            currencyCode?: string;
            /**
             * Format: double
             * @description The revenue that would have been generated had there not been out of stock. Applicable to PERFORMANCE timePeriodType.
             */
            lostRevenueDueToOOS?: number;
            /**
             * Format: int64
             * @description The forecasted shipped subscription units for the next 30 days. Applicable to FORECAST timePeriodType.
             */
            next30DayShippedSubscriptionUnits?: number;
            /**
             * Format: double
             * @description The forecasted total subscription revenue for the next 30 days. Applicable to FORECAST timePeriodType.
             */
            next30DayTotalSubscriptionsRevenue?: number;
            /**
             * Format: int64
             * @description The forecasted shipped subscription units for the next 60 days. Applicable to FORECAST timePeriodType.
             */
            next60DayShippedSubscriptionUnits?: number;
            /**
             * Format: double
             * @description The forecasted total subscription revenue for the next 60 days. Applicable to FORECAST timePeriodType.
             */
            next60DayTotalSubscriptionsRevenue?: number;
            /**
             * Format: int64
             * @description The forecasted shipped subscription units for the next 90 days. Applicable to FORECAST timePeriodType.
             */
            next90DayShippedSubscriptionUnits?: number;
            /**
             * Format: double
             * @description The forecasted total subscription revenue for the next 90 days. Applicable to FORECAST timePeriodType.
             */
            next90DayTotalSubscriptionsRevenue?: number;
            /**
             * Format: double
             * @description The percentage of items that were not shipped out of the total shipped units over a period of time due to being out of stock. Applicable to PERFORMANCE timePeriodType.
             */
            notDeliveredDueToOOS?: number;
            /**
             * Format: double
             * @description The percentage of total program revenue out of total product revenue. Applicable to PERFORMANCE timePeriodType.
             */
            revenuePenetration?: number;
            /**
             * Format: double
             * @description The percentage of new subscriptions acquired through coupons. Applicable to PERFORMANCE timePeriodType.
             */
            shareOfCouponSubscriptions?: number;
            /**
             * Format: int64
             * @description The number of units shipped to the subscribers over a period of time. Applicable to PERFORMANCE timePeriodType.
             */
            shippedSubscriptionUnits?: number;
            timeInterval?: components["schemas"]["replenishment-2022-11-07_TimeInterval"];
            /**
             * Format: double
             * @description The revenue generated from subscriptions over a period of time. Applicable to PERFORMANCE timePeriodType.
             */
            totalSubscriptionsRevenue?: number;
        };
        /**
         * @description The attribute to use to sort the results.
         * @enum {string}
         */
        "replenishment-2022-11-07_ListOfferMetricsSortKey": "SHIPPED_SUBSCRIPTION_UNITS" | "TOTAL_SUBSCRIPTIONS_REVENUE" | "ACTIVE_SUBSCRIPTIONS" | "NEXT_90DAYS_SHIPPED_SUBSCRIPTION_UNITS" | "NEXT_60DAYS_SHIPPED_SUBSCRIPTION_UNITS" | "NEXT_30DAYS_SHIPPED_SUBSCRIPTION_UNITS" | "NEXT_90DAYS_TOTAL_SUBSCRIPTIONS_REVENUE" | "NEXT_60DAYS_TOTAL_SUBSCRIPTIONS_REVENUE" | "NEXT_30DAYS_TOTAL_SUBSCRIPTIONS_REVENUE";
        /** @description The request body for the `listOffers` operation. */
        "replenishment-2022-11-07_ListOffersRequest": {
            filters: components["schemas"]["replenishment-2022-11-07_ListOffersRequestFilters"];
            pagination: components["schemas"]["replenishment-2022-11-07_ListOffersRequestPagination"];
            sort?: components["schemas"]["replenishment-2022-11-07_ListOffersRequestSort"];
        };
        /** @description Use these parameters to filter results. Any result must match all of the provided parameters. For any parameter that is an array, the result must match at least one element in the provided array. */
        "replenishment-2022-11-07_ListOffersRequestFilters": {
            /** @description A list of Amazon Standard Identification Numbers (ASINs). */
            asins?: string[];
            /** @description A list of eligibilities associated with an offer. */
            eligibilities?: components["schemas"]["replenishment-2022-11-07_EligibilityStatus"][];
            marketplaceId: components["schemas"]["replenishment-2022-11-07_MarketplaceId"];
            preferences?: components["schemas"]["replenishment-2022-11-07_Preference"];
            programTypes: components["schemas"]["replenishment-2022-11-07_ProgramTypes"];
            promotions?: components["schemas"]["replenishment-2022-11-07_Promotion"];
            /** @description A list of SKUs to filter. This filter is only supported for sellers and not for vendors. */
            skus?: string[];
        };
        /** @description Use these parameters to paginate through the response. */
        "replenishment-2022-11-07_ListOffersRequestPagination": {
            /**
             * Format: int64
             * @description The maximum number of results to return in the response.
             */
            limit: number;
            /**
             * Format: int64
             * @description The offset from which to retrieve the number of results specified by the `limit` value. The first result is at offset 0.
             */
            offset: number;
        };
        /** @description Use these parameters to sort the response. */
        "replenishment-2022-11-07_ListOffersRequestSort": {
            key: components["schemas"]["replenishment-2022-11-07_ListOffersSortKey"];
            order: components["schemas"]["replenishment-2022-11-07_SortOrder"];
        };
        /** @description The response schema for the `listOffers` operation. */
        "replenishment-2022-11-07_ListOffersResponse": {
            /** @description A list of offers. */
            offers?: components["schemas"]["replenishment-2022-11-07_ListOffersResponseOffer"][];
            pagination?: components["schemas"]["replenishment-2022-11-07_PaginationResponse"];
        };
        /** @description An object which contains details about an offer. */
        "replenishment-2022-11-07_ListOffersResponseOffer": {
            /** @description The Amazon Standard Identification Number (ASIN). */
            asin?: string;
            eligibility?: components["schemas"]["replenishment-2022-11-07_EligibilityStatus"];
            marketplaceId?: components["schemas"]["replenishment-2022-11-07_MarketplaceId"];
            offerProgramConfiguration?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfiguration"];
            programType?: components["schemas"]["replenishment-2022-11-07_ProgramType"];
            /** @description The SKU. This property is only supported for sellers and not for vendors. */
            sku?: string;
            /** @description A list of vendor codes associated with the offer. */
            vendorCodes?: string[];
        };
        /**
         * @description The attribute to use to sort the results.
         * @enum {string}
         */
        "replenishment-2022-11-07_ListOffersSortKey": "ASIN" | "SELLING_PARTNER_FUNDED_BASE_DISCOUNT_PERCENTAGE" | "SELLING_PARTNER_FUNDED_TIERED_DISCOUNT_PERCENTAGE" | "AMAZON_FUNDED_BASE_DISCOUNT_PERCENTAGE" | "AMAZON_FUNDED_TIERED_DISCOUNT_PERCENTAGE";
        /** @description The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace. */
        "replenishment-2022-11-07_MarketplaceId": string;
        /**
         * @description The metric name and description.
         * @enum {string}
         */
        "replenishment-2022-11-07_Metric": "SHIPPED_SUBSCRIPTION_UNITS" | "TOTAL_SUBSCRIPTIONS_REVENUE" | "ACTIVE_SUBSCRIPTIONS" | "NOT_DELIVERED_DUE_TO_OOS" | "SUBSCRIBER_NON_SUBSCRIBER_AVERAGE_REVENUE" | "LOST_REVENUE_DUE_TO_OOS" | "SUBSCRIBER_NON_SUBSCRIBER_AVERAGE_REORDERS" | "COUPONS_REVENUE_PENETRATION" | "REVENUE_BY_DELIVERIES" | "SUBSCRIBER_RETENTION" | "REVENUE_PENETRATION_BY_SELLER_FUNDING" | "SHARE_OF_COUPON_SUBSCRIPTIONS";
        /** @description The offer program configuration contains a set of program properties for an offer. */
        "replenishment-2022-11-07_OfferProgramConfiguration": {
            enrollmentMethod?: components["schemas"]["replenishment-2022-11-07_EnrollmentMethod"];
            preferences?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPreferences"];
            promotions?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPromotions"];
        };
        /** @description An object which contains the preferences applied to the offer. */
        "replenishment-2022-11-07_OfferProgramConfigurationPreferences": {
            autoEnrollment?: components["schemas"]["replenishment-2022-11-07_AutoEnrollmentPreference"];
        };
        /** @description An object which represents all promotions applied to an offer. */
        "replenishment-2022-11-07_OfferProgramConfigurationPromotions": {
            amazonFundedBaseDiscount?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPromotionsDiscountFunding"];
            amazonFundedTieredDiscount?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPromotionsDiscountFunding"];
            sellingPartnerFundedBaseDiscount?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPromotionsDiscountFunding"];
            sellingPartnerFundedTieredDiscount?: components["schemas"]["replenishment-2022-11-07_OfferProgramConfigurationPromotionsDiscountFunding"];
        };
        /** @description A promotional percentage discount applied to the offer. */
        "replenishment-2022-11-07_OfferProgramConfigurationPromotionsDiscountFunding": {
            /**
             * Format: int64
             * @description The percentage discount on the offer.
             */
            percentage?: number;
        };
        /** @description Use these parameters to paginate through the response. */
        "replenishment-2022-11-07_PaginationResponse": {
            /**
             * Format: int64
             * @description Total number of results matching the given filter criteria.
             */
            totalResults?: number;
        };
        /** @description Offer preferences that you can include in the result filter criteria. */
        "replenishment-2022-11-07_Preference": {
            /** @description Filters the results to only include offers with the auto-enrollment preference specified. */
            autoEnrollment?: components["schemas"]["replenishment-2022-11-07_AutoEnrollmentPreference"][];
        };
        /**
         * @description The replenishment program type.
         * @enum {string}
         */
        "replenishment-2022-11-07_ProgramType": "SUBSCRIBE_AND_SAVE";
        /** @description A list of replenishment program types. */
        "replenishment-2022-11-07_ProgramTypes": components["schemas"]["replenishment-2022-11-07_ProgramType"][];
        /** @description Offer promotions to include in the result filter criteria. */
        "replenishment-2022-11-07_Promotion": {
            amazonFundedBaseDiscount?: components["schemas"]["replenishment-2022-11-07_DiscountFunding"];
            amazonFundedTieredDiscount?: components["schemas"]["replenishment-2022-11-07_DiscountFunding"];
            sellingPartnerFundedBaseDiscount?: components["schemas"]["replenishment-2022-11-07_DiscountFunding"];
            sellingPartnerFundedTieredDiscount?: components["schemas"]["replenishment-2022-11-07_DiscountFunding"];
        };
        /**
         * @description The sort order.
         * @enum {string}
         */
        "replenishment-2022-11-07_SortOrder": "ASC" | "DESC";
        /** @description A date-time interval in ISO 8601 format which is used to compute metrics. Only the date is required, but you must pass the complete date and time value. For example, November 11, 2022 should be passed as "2022-11-07T00:00:00Z". Note that only data for the trailing 2 years is supported.
         *
         *      **Note**: The `listOfferMetrics` operation only supports a time interval which covers a single unit of the aggregation frequency. For example, for a MONTH aggregation frequency, the duration of the interval between the startDate and endDate can not be more than 1 month. */
        "replenishment-2022-11-07_TimeInterval": {
            /**
             * Format: date-time
             * @description When this object is used as a request parameter, the specified `endDate` is adjusted based on the aggregation frequency.
             *
             *     * For `WEEK` the metric is computed up to the last day of the week (Sunday, based on ISO 8601) that contains the `endDate`.
             *     * For `MONTH`, the metric is computed up to the last day that contains the `endDate`.
             *     * For `QUARTER` the metric is computed up to the last day of the quarter that contains the `endDate`.
             *     * For `YEAR` the metric is computed up to the last day of the year that contains the `endDate`.
             *      Note: The end date may be adjusted to a lower value based on the data available in our system.
             */
            endDate: string;
            /**
             * Format: date-time
             * @description When this object is used as a request parameter, the specified `startDate` is adjusted based on the aggregation frequency.
             *
             *     * For `WEEK` the metric is computed from the first day of the week (Sunday, based on ISO 8601) that contains the `startDate`.
             *     * For `MONTH` the metric is computed from the first day of the month that contains the `startDate`.
             *     * For `QUARTER` the metric is computed from the first day of the quarter that contains the `startDate`.
             *     * For `YEAR` the metric is computed from the first day of the year that contains the `startDate`.
             */
            startDate: string;
        };
        /**
         * @description The time period type that determines whether the metrics requested are backward-looking (performance) or forward-looking (forecast).
         * @enum {string}
         */
        "replenishment-2022-11-07_TimePeriodType": "PERFORMANCE" | "FORECAST";
        /** @description The response schema. */
        "reports_2021-06-30_CreateReportResponse": {
            /** @description The identifier for the report. This identifier is unique only in combination with a seller ID. */
            reportId: string;
        };
        /** @description Response schema. */
        "reports_2021-06-30_CreateReportScheduleResponse": {
            /** @description The identifier for the report schedule. This identifier is unique only in combination with a seller ID. */
            reportScheduleId: string;
        };
        /** @description Information required to create the report schedule. */
        "reports_2021-06-30_CreateReportScheduleSpecification": {
            /** @description A list of marketplace identifiers for the report schedule. */
            marketplaceIds: string[];
            /**
             * Format: date-time
             * @description The date and time when the schedule will create its next report, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.
             */
            nextReportCreationTime?: string;
            /**
             * @description One of a set of predefined <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> periods that specifies how often a report should be created.
             * @enum {string}
             */
            period: "PT5M" | "PT15M" | "PT30M" | "PT1H" | "PT2H" | "PT4H" | "PT8H" | "PT12H" | "P1D" | "P2D" | "P3D" | "PT84H" | "P7D" | "P14D" | "P15D" | "P18D" | "P30D" | "P1M";
            reportOptions?: components["schemas"]["reports_2021-06-30_ReportOptions"];
            /** @description The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. */
            reportType: string;
        };
        /** @description Information required to create the report. */
        "reports_2021-06-30_CreateReportSpecification": {
            /**
             * Format: date-time
             * @description The end of a date and time range, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.
             */
            dataEndTime?: string;
            /**
             * Format: date-time
             * @description The start of a date and time range, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format, used for selecting the data to report. The default is now. The value must be prior to or equal to the current date and time. Not all report types make use of this.
             */
            dataStartTime?: string;
            /** @description A list of marketplace identifiers. The report document's contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise. */
            marketplaceIds: string[];
            reportOptions?: components["schemas"]["reports_2021-06-30_ReportOptions"];
            /** @description The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. */
            reportType: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "reports_2021-06-30_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "reports_2021-06-30_ErrorList": {
            /** @description Error response returned when the request is unsuccessful. */
            errors: components["schemas"]["reports_2021-06-30_Error"][];
        };
        /** @description The response for the `getReports` operation. */
        "reports_2021-06-30_GetReportsResponse": {
            /** @description Returned when the number of results exceeds `pageSize`. To get the next page of results, call `getReports` with this token as the only parameter. */
            nextToken?: string;
            reports: components["schemas"]["reports_2021-06-30_ReportList"];
        };
        /** @description Detailed information about the report. */
        "reports_2021-06-30_Report": {
            /**
             * Format: date-time
             * @description The date and time when the report was created.
             */
            createdTime: string;
            /**
             * Format: date-time
             * @description The end of a date and time range used for selecting the data to report.
             */
            dataEndTime?: string;
            /**
             * Format: date-time
             * @description The start of a date and time range used for selecting the data to report.
             */
            dataStartTime?: string;
            /** @description A list of marketplace identifiers for the report. */
            marketplaceIds?: string[];
            /**
             * Format: date-time
             * @description The date and time when the report processing completed, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.
             */
            processingEndTime?: string;
            /**
             * Format: date-time
             * @description The date and time when the report processing started, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.
             */
            processingStartTime?: string;
            /**
             * @description The processing status of the report.
             * @enum {string}
             */
            processingStatus: "CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE";
            /** @description The identifier for the report document. Pass this into the `getReportDocument` operation to get the information you will need to retrieve the report document's contents. */
            reportDocumentId?: string;
            /** @description The identifier for the report. This identifier is unique only in combination with a seller ID. */
            reportId: string;
            /** @description The identifier of the report schedule that created this report (if any). This identifier is unique only in combination with a seller ID. */
            reportScheduleId?: string;
            /** @description The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. */
            reportType: string;
        };
        /** @description Information required for the report document. */
        "reports_2021-06-30_ReportDocument": {
            /**
             * @description If the report document contents have been compressed, the compression algorithm used is returned in this property and you must decompress the report when you download. Otherwise, you can download the report directly. Refer to [Step 2. Download the report](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-retrieve-a-report#step-2-download-the-report) in the use case guide, where sample code is provided.
             * @enum {string}
             */
            compressionAlgorithm?: "GZIP";
            /** @description The identifier for the report document. This identifier is unique only in combination with a seller ID. */
            reportDocumentId: string;
            /** @description A presigned URL for the report document. If `compressionAlgorithm` is not returned, you can download the report directly from this URL. This URL expires after 5 minutes. */
            url: string;
        };
        /** @description A list of reports. */
        "reports_2021-06-30_ReportList": components["schemas"]["reports_2021-06-30_Report"][];
        /** @description Additional information passed to reports. This varies by report type. */
        "reports_2021-06-30_ReportOptions": {
            [key: string]: string;
        };
        /** @description Detailed information about a report schedule. */
        "reports_2021-06-30_ReportSchedule": {
            /** @description A list of marketplace identifiers. The report document's contents will contain data for all of the specified marketplaces, unless the report type indicates otherwise. */
            marketplaceIds?: string[];
            /**
             * Format: date-time
             * @description The date and time when the schedule will create its next report, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format.
             */
            nextReportCreationTime?: string;
            /** @description An <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> period value that indicates how often a report should be created. */
            period: string;
            reportOptions?: components["schemas"]["reports_2021-06-30_ReportOptions"];
            /** @description The identifier for the report schedule. This identifier is unique only in combination with a seller ID. */
            reportScheduleId: string;
            /** @description The report type. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. */
            reportType: string;
        };
        /** @description A list of report schedules. */
        "reports_2021-06-30_ReportScheduleList": {
            /** @description Detailed information about a report schedule. */
            reportSchedules: components["schemas"]["reports_2021-06-30_ReportSchedule"][];
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unnaceptable, as with currencies. Follows RFC7159 for number representation. */
        sales_Decimal: string;
        /** @description Error response returned when the request is unsuccessful. */
        sales_Error: {
            /** @description An error code that identifies the type of error that occured. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        sales_ErrorList: components["schemas"]["sales_Error"][];
        /** @description The response schema for the getOrderMetrics operation. */
        sales_GetOrderMetricsResponse: {
            errors?: components["schemas"]["sales_ErrorList"];
            payload?: components["schemas"]["sales_OrderMetricsList"];
        };
        /** @description The currency type and the amount. */
        sales_Money: {
            amount: components["schemas"]["sales_Decimal"];
            /** @description Three-digit currency code. In ISO 4217 format. */
            currencyCode: string;
        };
        /** @description Contains order metrics. */
        sales_OrderMetricsInterval: {
            averageUnitPrice: components["schemas"]["sales_Money"];
            /** @description The interval of time based on requested granularity (ex. Hour, Day, etc.) If this is the first or the last interval from the list, it might contain incomplete data if the requested interval doesn't align with the requested granularity (ex. request interval 2018-09-01T02:00:00Z--2018-09-04T19:00:00Z and granularity day will result in Sept 1st UTC day and Sept 4th UTC days having partial data). */
            interval: string;
            /** @description The number of orders based on the specified filters. */
            orderCount: number;
            /** @description The number of order items based on the specified filters. */
            orderItemCount: number;
            totalSales: components["schemas"]["sales_Money"];
            /** @description The number of units in orders based on the specified filters. */
            unitCount: number;
        };
        /** @description A set of order metrics, each scoped to a particular time interval. */
        sales_OrderMetricsList: components["schemas"]["sales_OrderMetricsInterval"][];
        /** @description The response schema for the `getAccount` operation. */
        sellers_Account: {
            business?: components["schemas"]["sellers_Business"];
            /**
             * @description The type of business registered for the seller account.
             * @enum {string}
             */
            businessType: "CHARITY" | "CRAFTSMAN" | "NATURAL_PERSON_COMPANY" | "PUBLIC_LISTED" | "PRIVATE_LIMITED" | "SOLE_PROPRIETORSHIP" | "STATE_OWNED" | "INDIVIDUAL";
            marketplaceParticipationList: components["schemas"]["sellers_MarketplaceParticipationList"];
            primaryContact?: components["schemas"]["sellers_PrimaryContact"];
            /**
             * @description The selling plan details.
             * @enum {string}
             */
            sellingPlan: "PROFESSIONAL" | "INDIVIDUAL";
        };
        /** @description Represents an address */
        sellers_Address: {
            /** @description Street address information. */
            addressLine1: string;
            /** @description Additional street address information. */
            addressLine2?: string;
            /** @description The city. */
            city?: string;
            /** @description The country code in two-character ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The postal code. */
            postalCode?: string;
            /** @description The state or province code. */
            stateOrProvinceCode?: string;
        };
        /** @description Information about the seller's business. Certain fields may be omitted depending on the seller's `businessType`. */
        sellers_Business: {
            /** @description The seller's company registration number, if applicable. This field will be absent for individual sellers and sole proprietorships. */
            companyRegistrationNumber?: string;
            /** @description The seller's company tax identification number, if applicable. This field will be present for certain business types only, such as sole proprietorships. */
            companyTaxIdentificationNumber?: string;
            /** @description The registered business name. */
            name: string;
            /** @description The non-Latin script version of the registered business name, if applicable. */
            nonLatinName?: string;
            registeredBusinessAddress: components["schemas"]["sellers_Address"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        sellers_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help you understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        sellers_ErrorList: components["schemas"]["sellers_Error"][];
        /** @description The response schema for the `getAccount` operation. */
        sellers_GetAccountResponse: {
            errors?: components["schemas"]["sellers_ErrorList"];
            payload?: components["schemas"]["sellers_Account"];
        };
        /** @description The response schema for the `getMarketplaceParticipations` operation. */
        sellers_GetMarketplaceParticipationsResponse: {
            errors?: components["schemas"]["sellers_ErrorList"];
            payload?: components["schemas"]["sellers_MarketplaceParticipationList"];
        };
        /** @description Information about an Amazon marketplace where a seller can list items and customers can view and purchase items. */
        sellers_Marketplace: {
            /** @description The ISO 3166-1 alpha-2 format country code of the marketplace. */
            countryCode: string;
            /** @description The ISO 4217 format currency code of the marketplace. */
            defaultCurrencyCode: string;
            /** @description The ISO 639-1 format language code of the marketplace. */
            defaultLanguageCode: string;
            /** @description The domain name of the marketplace. */
            domainName: string;
            /** @description The encrypted marketplace value. */
            id: string;
            /** @description The marketplace name. */
            name: string;
        };
        sellers_MarketplaceParticipation: {
            marketplace: components["schemas"]["sellers_Marketplace"];
            participation: components["schemas"]["sellers_Participation"];
            /** @description The name of the seller's store as displayed in the marketplace. */
            storeName: string;
        };
        /** @description List of marketplace participations. */
        sellers_MarketplaceParticipationList: components["schemas"]["sellers_MarketplaceParticipation"][];
        /** @description Information that is specific to a seller in a marketplace. */
        sellers_Participation: {
            /** @description Specifies if the seller has suspended listings. `true` if the seller Listing Status is set to Inactive, otherwise `false`. */
            hasSuspendedListings: boolean;
            /** @description If `true`, the seller participates in the marketplace. Otherwise `false`. */
            isParticipating: boolean;
        };
        /** @description Information about the seller's primary contact. */
        sellers_PrimaryContact: {
            address: components["schemas"]["sellers_Address"];
            /** @description The full name of the seller's primary contact. */
            name: string;
            /** @description The non-Latin script version of the primary contact's name, if applicable. */
            nonLatinName?: string;
        };
        /**
         * @description Address for bank account verification of the Payee. For example, this can be a person or business mailing address
         *
         * @example {
         *       "addressLine1": "678 JFK Street",
         *       "city": "Seattle",
         *       "state": "WA",
         *       "postalCode": "98109",
         *       "countryCode": "US"
         *     }
         */
        "sellerWallet_2024-03-01_AccountHolderAddress": {
            /**
             * @description Address Line 1 of the public address
             *
             * @example 678 JFK Street
             */
            addressLine1: string;
            /**
             * @description Address Line 2 of the public address
             *
             * @example Unit 415
             */
            addressLine2?: string;
            /**
             * @description City name of the public address
             *
             * @example Seattle
             */
            city: string;
            /**
             * @description Country name of the public address
             *
             * @example United States
             */
            country?: string;
            /**
             * @description The two digit country code, in ISO 3166 format.
             *
             * @example US
             */
            countryCode: string;
            /**
             * @description Postal code of the public address
             *
             * @example 98109
             */
            postalCode: string;
            /**
             * @description State name of the public address. This is the state or region for China-based addresses.
             * @example WA
             */
            state: string;
        };
        /**
         * @description Specifies the balance amount in the Amazon SW bank account
         * @example {
         *       "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
         *       "balanceType": "AVAILABLE",
         *       "balanceAmount": 123.45,
         *       "balanceCurrency": "USD",
         *       "lastUpdateDate": "2024-03-01T10:30:00Z"
         *     }
         */
        "sellerWallet_2024-03-01_Balance": {
            /**
             * @description The unique identifier provided by Amazon to identify the account
             *
             * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
             */
            accountId: string;
            balanceAmount: components["schemas"]["sellerWallet_2024-03-01_BigDecimal"];
            /**
             * @description The Amazon SW bank account currency code in ISO 4217 format
             *
             * @example USD
             */
            balanceCurrency: string;
            balanceType?: components["schemas"]["sellerWallet_2024-03-01_BalanceType"];
            /**
             * Format: date-time
             * @description The last update date on the account balance
             *
             */
            lastUpdateDate: string;
        };
        /**
         * @description Struct that holds list of balances on the seller account.
         * @example {
         *       "balances": [
         *         {
         *           "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
         *           "balanceType": "AVAILABLE",
         *           "balanceAmount": 123.45,
         *           "balanceCurrency": "USD",
         *           "lastUpdateDate": "2024-03-01T10:30:00Z"
         *         },
         *         {
         *           "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
         *           "balanceType": "LOCKED_IN",
         *           "balanceAmount": 500,
         *           "balanceCurrency": "USD",
         *           "lastUpdateDate": "2024-03-01T10:30:00Z"
         *         },
         *         {
         *           "accountId": "amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ",
         *           "balanceType": "TOTAL",
         *           "balanceAmount": 623.45,
         *           "balanceCurrency": "USD",
         *           "lastUpdateDate": "2024-03-01T10:30:00Z"
         *         }
         *       ]
         *     }
         */
        "sellerWallet_2024-03-01_BalanceListing": {
            /** @description Collection that holds list of balances on the account
             *      */
            balances?: components["schemas"]["sellerWallet_2024-03-01_Balance"][];
        };
        /**
         * @description Represent a bank account balance type.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_BalanceType": "AVAILABLE" | "LOCKED_IN" | "LOCKED_OUT" | "TOTAL";
        /** @description Details of an Amazon SW bank account, used to hold money earned by a SW customer by selling items. NOTE: Not including account_links, short cut links to the account balance and transactions -> since not mandatory
         *      */
        "sellerWallet_2024-03-01_BankAccount": {
            /**
             * @description The two digit country code, in ISO 3166 format.
             *
             * @example US
             */
            accountCountryCode: string;
            /**
             * @description BankAccount currency code in ISO 4217 format
             *
             * @example USD
             */
            accountCurrency: string;
            /**
             * @description BankAccount holder's name (expected to be Amazon customer)
             *
             * @example John Doe
             */
            accountHolderName?: string;
            /**
             * @description The unique identifier provided by Amazon to identify the account
             *
             * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
             */
            accountId?: string;
            bankAccountHolderStatus?: components["schemas"]["sellerWallet_2024-03-01_BankAccountHolderStatus"];
            bankAccountNumberFormat: components["schemas"]["sellerWallet_2024-03-01_BankAccountNumberFormat"];
            /**
             * @description Last 3 digit of the bank account number, for all Amazon Seller Wallet account the value will be three consecutive 0's
             *
             * @example 666
             */
            bankAccountNumberTail: string;
            bankAccountOwnershipType: components["schemas"]["sellerWallet_2024-03-01_BankAccountOwnershipType"];
            /**
             * @description The name of the bank, for all Amazon Seller Wallet account the value will be Amazon Seller Wallet
             *
             * @example Bank Of America
             */
            bankName?: string;
            bankNumberFormat: components["schemas"]["sellerWallet_2024-03-01_BankNumberFormat"];
            /**
             * @description Routing number for automated clearing house transfers, for all Amazon Seller Wallet account the value will be denoted by nine cosecutive 0's,
             *
             * @example 026009593
             */
            routingNumber: string;
        };
        /**
         * @description Represents status of the Amazon Seller Wallet accountholder
         * @enum {string}
         */
        "sellerWallet_2024-03-01_BankAccountHolderStatus": "ACTIVE" | "INACTIVE" | "UNDER_REVIEW" | "VERIFICATION_FAILED";
        /** @description Struct that holds collection of accounts. */
        "sellerWallet_2024-03-01_BankAccountListing": {
            /** @description Collection that holds BankAccount
             *      */
            accounts: components["schemas"]["sellerWallet_2024-03-01_BankAccount"][];
        };
        /**
         * @description The format of the bank account number.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_BankAccountNumberFormat": "IBAN" | "BBAN";
        /**
         * @description Represents destination bank account's ownership type.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_BankAccountOwnershipType": "THIRD_PARTY" | "SELF" | "GOVERNMENT";
        /**
         * @description Represents a format of a bank number also called routing number type
         * @enum {string}
         */
        "sellerWallet_2024-03-01_BankNumberFormat": "BIC" | "BASIC";
        /** @description A decimal number such as amount or FX rate. */
        "sellerWallet_2024-03-01_BigDecimal": number;
        /** @description The transaction response and historical details related to it. */
        "sellerWallet_2024-03-01_CreateTransactionResponse": {
            /**
             * @description The callback URL for the transaction which the user have to click to approve/consent the transaction
             * @example https://www.example.com/callback/transaction_id/
             */
            callBackURL: string;
            transaction: components["schemas"]["sellerWallet_2024-03-01_Transaction"];
        };
        /** @description A currency type and amount. */
        "sellerWallet_2024-03-01_Currency": {
            currencyAmount?: components["schemas"]["sellerWallet_2024-03-01_BigDecimal"];
            /** @description The three-digit currency code in ISO 4217 format. */
            currencyCode?: string;
        };
        /** @description Response returned when the schedule transfer's delete request is successful. */
        "sellerWallet_2024-03-01_DeleteTransferSchedule": {
            /** @description A success code that specifies the delete operation was successful. eg:HTTP 200. */
            code: string;
            /** @description Additional details that can help the caller understand the operation execution. */
            details?: string;
            /** @description A message that describes the success condition of the delete schedule transaction. */
            message: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "sellerWallet_2024-03-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "sellerWallet_2024-03-01_ErrorList": {
            /** @description List of errors
             *      */
            errors: components["schemas"]["sellerWallet_2024-03-01_Error"][];
        };
        /** @description If the fees is in baseAmount (sourceAccount) currency, effectiveRate =  (baseAmount - sum(fees.feeAmount.currencyAmount)) * baseRate) / baseAmount. If the fees is in transferAmount (destinationAccount) currency, effectiveRate =  (( baseAmount * baseRate ) -  sum(fees.feeAmount.currencyAmount )) / baseAmount
         *      */
        "sellerWallet_2024-03-01_Fee": {
            feeAmount: components["schemas"]["sellerWallet_2024-03-01_Currency"];
            /** @description Unique identifier assigned to the Fee.
             *      */
            feeId: string;
            /** @description The value of the fee in percentage format. */
            feeRateValue: string;
            feeType: components["schemas"]["sellerWallet_2024-03-01_FeeType"];
        };
        /**
         * @description Represents different types of fees that can be applied on a transaction.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_FeeType": "MISCELLANEOUS_FEE" | "TAX" | "TRANSACTION_FEE";
        /**
         * @description Foreign exchange rate details displayed when transfer preview is requested.
         *
         * @example {
         *       "fxRateId": "UNIQUE_FX_RATE_ID_1",
         *       "baseRate": 7.2,
         *       "effectiveFxRate": 7.25,
         *       "rateDirection": "BUY"
         *     }
         */
        "sellerWallet_2024-03-01_FxRateDetails": {
            baseRate: components["schemas"]["sellerWallet_2024-03-01_BigDecimal"];
            effectiveFxRate: components["schemas"]["sellerWallet_2024-03-01_BigDecimal"];
            /** @description Unique identifier assigned to the fees/foreign exchange Rate of a transaction.
             *      */
            fxRateId: string;
            rateDirection: components["schemas"]["sellerWallet_2024-03-01_RateDirection"];
        };
        /** @description Payment preference type in which transfer is being scheduled
         *      */
        "sellerWallet_2024-03-01_PaymentPreference": {
            paymentPreferencePaymentType: components["schemas"]["sellerWallet_2024-03-01_PaymentPreferencePaymentType"];
            value: components["schemas"]["sellerWallet_2024-03-01_BigDecimal"];
        };
        /**
         * @description Represent a type of payment preference.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_PaymentPreferencePaymentType": "PERCENTAGE" | "AMOUNT";
        /**
         * @description Represents the rate direction at which the transaction is performed.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_RateDirection": "BUY" | "SELL";
        /**
         * @description Represent parameters to specify recurrence of the scheduled transfer.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_RecurringFrequency": "DAILY" | "WEEKLY" | "BIWEEKLY" | "MONTHLY";
        /** @description Parameters containing information of the expression that defines when the schedule runs. The following formats are supported.
         *      */
        "sellerWallet_2024-03-01_ScheduleExpression": {
            recurringFrequency?: components["schemas"]["sellerWallet_2024-03-01_RecurringFrequency"];
            scheduleExpressionType: components["schemas"]["sellerWallet_2024-03-01_ScheduleExpressionType"];
        };
        /**
         * @description Represent a type of schedule transfer expression.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_ScheduleExpressionType": "RECURRING" | "ONE_TIME";
        /**
         * @description Defines the type of schedule trigger used for executing transfers. Schedule based on time patterns using EventBridge.
         *
         * @enum {string}
         */
        "sellerWallet_2024-03-01_ScheduleTransferType": "TIME_BASED";
        /** @description The current transaction status and related historical details. */
        "sellerWallet_2024-03-01_Transaction": {
            /**
             * Format: date-time
             * @description Expected completion date of a transaction, for existing active Payees (Trusted Beneficiaries) it will be 24 hours but for new destination bank accounts the value could go up to 5 days
             *
             * @example 2023-09-26T02:32:59.787Z
             */
            expectedCompletionDate?: string;
            /**
             * Format: date-time
             * @description The last update date on the transaction
             *
             */
            lastUpdateDate: string;
            /**
             * @description Amazon SW customer who requested the transaction
             *
             * @example TPPOrgId
             */
            requesterName?: string;
            /**
             * Format: date-time
             * @description Transaction completion date
             *
             */
            transactionActualCompletionDate?: string;
            /** @description A description of the transaction that the requester provides when they initiate the transaction. */
            transactionDescription: string;
            transactionDestinationAccount: components["schemas"]["sellerWallet_2024-03-01_TransactionAccount"];
            /**
             * @description Description in case the transaction fails before completion
             *
             * @example Insufficient Balance
             */
            transactionFailureReason?: string;
            transactionFinalAmount?: components["schemas"]["sellerWallet_2024-03-01_Currency"];
            /** @description The unique identifier provided by Amazon to the transaction
             *      */
            transactionId: string;
            transactionRequestAmount: components["schemas"]["sellerWallet_2024-03-01_Currency"];
            /**
             * Format: date-time
             * @description The date when the transaction was initiated.
             */
            transactionRequestDate: string;
            /** @description The transaction initiation source. This value is either the Amazon portal or PISP name that the customer used to start the transaction. */
            transactionRequesterSource: string;
            transactionSourceAccount: components["schemas"]["sellerWallet_2024-03-01_TransactionAccount"];
            transactionStatus: components["schemas"]["sellerWallet_2024-03-01_TransactionStatus"];
            transactionType: components["schemas"]["sellerWallet_2024-03-01_TransactionType"];
            transferRateDetails: components["schemas"]["sellerWallet_2024-03-01_TransferRatePreview"];
        };
        /** @description Details of the bank account involved in the transaction. */
        "sellerWallet_2024-03-01_TransactionAccount": {
            /** @description The unique identifier provided by Amazon to identify the account
             *      */
            accountId?: string;
            /** @description The two digit country code, in ISO 3166 format. This field is OPTIONAL for transactionSourceAccount object but is MANDATORY field for transactionDestinationAccount
             *      */
            bankAccountCountryCode?: string;
            /** @description The currency code in ISO 4217 format
             *      */
            bankAccountCurrency: string;
            /** @description BankAccount holder's name
             *      */
            bankAccountHolderName?: string;
            bankAccountNumberFormat: components["schemas"]["sellerWallet_2024-03-01_BankAccountNumberFormat"];
            /** @description Last 3 digit of the bank account number
             *      */
            bankAccountNumberTail?: string;
            /** @description The name of the bank
             *      */
            bankName: string;
        };
        /**
         * @description Request body to initiate a transaction from a SW bank account to another customer defined bank account
         *
         * @example {
         *       "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
         *       "sourceAmount": {
         *         "amount": 100,
         *         "currency": "USD"
         *       },
         *       "destinationTransactionInstrument": {
         *         "bankAccount": {
         *           "bankAccountNumberFormat": "BBAN",
         *           "bankAccountOwnershipType": "SELF",
         *           "routingNumber": "HBUKGB4B",
         *           "bankNumberFormat": "BASIC",
         *           "accountCountryCode": "CN",
         *           "accountCurrency": "CNY",
         *           "bankAccountNumberTail": "819"
         *         },
         *         "accountHolderName": "John Doe",
         *         "bankAccountNumber": "GB29RBOS60161331926819"
         *       },
         *       "transactionDescription": "This is transaction to partner",
         *       "customerPaymentReference": "BG999999999",
         *       "destinationAccountHolderAddress": {
         *         "addressLine1": "333 Boren Ave N",
         *         "city": "Seattle",
         *         "state": "WA",
         *         "postalCode": "98109",
         *         "countryCode": "US"
         *       },
         *       "transferRateDetails": {
         *         "baseAmount": {
         *           "currencyCode": "EUR",
         *           "currencyAmount": 500
         *         },
         *         "fxRateDetails": {
         *           "fxRateId": "UNIQUE_FX_RATE_ID_1",
         *           "baseRate": 7.6915,
         *           "effectiveFxRate": 7.6084,
         *           "rateDirection": "BUY"
         *         },
         *         "transferAmount": {
         *           "currencyCode": "CNY",
         *           "currencyAmount": 3804.2
         *         },
         *         "fees": [
         *           {
         *             "feeId": "Unique_FeeId_001",
         *             "feeType": "TRANSACTION_FEE",
         *             "feeRateValue": "0.9",
         *             "feeAmount": {
         *               "currencyCode": "EUR",
         *               "currencyAmount": 4.5
         *             }
         *           },
         *           {
         *             "feeId": "Unique_FeeId_002",
         *             "feeType": "TAX",
         *             "feeRateValue": "20.0",
         *             "feeAmount": {
         *               "currencyCode": "EUR",
         *               "currencyAmount": 0.9
         *             }
         *           }
         *         ]
         *       },
         *       "requestTime": "2024-03-26T02:32:59.787Z"
         *     }
         */
        "sellerWallet_2024-03-01_TransactionInitiationRequest": {
            /**
             * @description If the payment is for VAT (Value-Added-Tax) then enter VAT identification number in this field which will be mandatory. The length constraint is 140 characters and do not allow user to enter any sensitive information other than VAT-ID.
             * @example BG999999999
             */
            customerPaymentReference?: string;
            destinationAccountHolderAddress?: components["schemas"]["sellerWallet_2024-03-01_AccountHolderAddress"];
            /**
             * @description Optional field to specify the unique identifier of the destination bank account where the money needs to be deposited
             *
             * @example amzn1.account.AJKBFWEJFBNH2KCJPII5FBN
             */
            destinationAccountId?: string;
            destinationTransactionInstrument: components["schemas"]["sellerWallet_2024-03-01_TransactionInstrumentDetails"];
            /**
             * Format: date-time
             * @description The transaction initiation request time in date-time format
             *
             * @example 2024-03-26T02:32:59.787Z
             */
            requestTime: string;
            /**
             * @description The unique identifier of the source Amazon SW bank account from where the money needs to be debited
             *
             * @example amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI
             */
            sourceAccountId: string;
            sourceAmount: components["schemas"]["sellerWallet_2024-03-01_Currency"];
            /** @description A description of the transaction. */
            transactionDescription?: string;
            transferRateDetails?: components["schemas"]["sellerWallet_2024-03-01_TransferRatePreview"];
        };
        /**
         * @description Request body to create transaction instrument, Amazon performs validation and screening (anti-money laundering measuers) on all the transaction instruments before executing a transaction thus it requires transaction instrument holder's contact details as well
         *
         * @example {
         *       "bankAccount": {
         *         "bankAccountNumberFormat": "IBAN",
         *         "bankAccountOwnershipType": "SELF",
         *         "routingNumber": "HBUKGB4B",
         *         "bankNumberFormat": "BASIC",
         *         "accountCountryCode": "EU",
         *         "accountCurrency": "EUR",
         *         "bankAccountNumberTail": "819"
         *       },
         *       "bankAccountNumber": "GB29RBOS60161331926819",
         *       "accountHolderName": "John Doe"
         *     }
         */
        "sellerWallet_2024-03-01_TransactionInstrumentDetails": {
            /**
             * @description The bank account holder's name (expected to be an Amazon customer).
             *
             *     **Note:** This field is encrypted before Amazon receives it, so should not be used to generate `destAccountDigitalSignature`, and should not be included in the request signature.
             * @example John Doe
             */
            accountHolderName: string;
            bankAccount: components["schemas"]["sellerWallet_2024-03-01_BankAccount"];
            /**
             * @description This field would be used to populate the bank account number of the destination payment method. The field is intentionally not included in any other Schemas since Amazon internal systems will never receive it in unencrypted format, so field won't be part of the request signature
             *
             * @example GB29RBOS60161331926819
             */
            bankAccountNumber: string;
        };
        /** @description Struct that holds collection of transactions. */
        "sellerWallet_2024-03-01_TransactionListing": {
            /**
             * @description If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will return same response. The field will only be provided when the list is greater than 100.
             * @example 3493805734095308457308475
             */
            nextPageToken?: string;
            /** @description Collection that holds Transaction
             *      */
            transactions: components["schemas"]["sellerWallet_2024-03-01_Transaction"][];
        };
        /**
         * @description Represents current status of the transaction.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_TransactionStatus": "EXPIRED" | "FAILED" | "FAILED_CREDITS_APPLIED" | "IN_PROGRESS" | "PENDING_USER_APPROVAL" | "SUCCESSFUL";
        /**
         * @description Represent type of transaction.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_TransactionType": "CREDIT" | "DEBIT";
        /** @description The fees and foreign exchange rates that apply to the transaction.
         *
         *     If the fees are in terms of the `baseAmount` (source account) currency, then the effective rate is equal to **1 - (fees * `baseRate` / `baseAmount`)**.
         *
         *     If the fees are in terms of the `transferAmount` (destination account) currency, then the effective rate is equal to **`baseRate` - (fees / `baseAmount`)**.
         *
         *     In the preceding expressions, **fees** is equal to the sum of all `feeAmount.currencyAmount` values in the `fees` array. */
        "sellerWallet_2024-03-01_TransferRatePreview": {
            baseAmount: components["schemas"]["sellerWallet_2024-03-01_Currency"];
            /** @description List of fees
             *      */
            fees: components["schemas"]["sellerWallet_2024-03-01_Fee"][];
            fxRateDetails: components["schemas"]["sellerWallet_2024-03-01_FxRateDetails"];
            transferAmount: components["schemas"]["sellerWallet_2024-03-01_Currency"];
        };
        /**
         * @description Transfer schedule details and related historical details.
         * @example {
         *       "transferScheduleId": "amzn1.transferschedule.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
         *       "transactionType": "DEBIT",
         *       "transactionSourceAccount": {
         *         "accountId": "sourceAccountIdCase200",
         *         "bankAccountHolderName": "John Doe",
         *         "bankName": "Amazon Seller Wallet",
         *         "bankAccountNumberFormat": "IBAN",
         *         "bankAccountNumberTail": "123",
         *         "bankAccountCurrency": "GBP"
         *       },
         *       "transactionDestinationAccount": {
         *         "bankAccountHolderName": "Dane Shipping",
         *         "bankName": "Royal Bank of Scotland",
         *         "bankAccountNumberFormat": "IBAN",
         *         "bankAccountNumberTail": "819",
         *         "bankAccountCurrency": "GBP",
         *         "bankAccountCountryCode": "EU"
         *       },
         *       "transferScheduleStatus": "ENABLED",
         *       "transferScheduleInformation": {
         *         "scheduleStartDate": "2024-03-01T00:00:00Z",
         *         "scheduleEndDate": "2027-03-01T00:00:00Z",
         *         "scheduleExpression": {
         *           "scheduleExpressionType": "RECURRING",
         *           "recurringFrequency": "WEEKLY"
         *         },
         *         "scheduleType": "TIME_BASED"
         *       },
         *       "paymentPreference": {
         *         "paymentPreferencePaymentType": "PERCENTAGE",
         *         "value": 25.5
         *       },
         *       "transferScheduleFailures": [
         *         {
         *           "transferScheduleFailureDate": "2024-04-01T10:30:00Z",
         *           "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
         *         }
         *       ]
         *     }
         */
        "sellerWallet_2024-03-01_TransferSchedule": {
            paymentPreference?: components["schemas"]["sellerWallet_2024-03-01_PaymentPreference"];
            transactionDestinationAccount: components["schemas"]["sellerWallet_2024-03-01_TransactionAccount"];
            transactionSourceAccount?: components["schemas"]["sellerWallet_2024-03-01_TransactionAccount"];
            transactionType: components["schemas"]["sellerWallet_2024-03-01_TransactionType"];
            /** @description Collection that holds Transfer Schedules that has been cancelled or failed due to certain reasons.
             *      */
            transferScheduleFailures: components["schemas"]["sellerWallet_2024-03-01_TransferScheduleFailures"][];
            /** @description The unique identifier provided by Amazon to the scheduled transfer
             *      */
            transferScheduleId: string;
            transferScheduleInformation: components["schemas"]["sellerWallet_2024-03-01_TransferScheduleInformation"];
            transferScheduleStatus: components["schemas"]["sellerWallet_2024-03-01_TransferScheduleStatus"];
        };
        /**
         * @description Specifies the balance amount in the Amazon SW bank account
         * @example {
         *       "transferScheduleFailureDate": "2024-03-01T10:30:00Z",
         *       "transferScheduleFailureReason": "INSUFFICIENT_BALANCE"
         *     }
         */
        "sellerWallet_2024-03-01_TransferScheduleFailures": {
            /**
             * Format: date-time
             * @description The transfer schedule cancellation date
             *
             */
            transferScheduleFailureDate: string;
            /**
             * @description The statement/reasoning listed for the cancellation of the transfer schedule
             *
             * @example INSUFFICIENT_BALANCE
             */
            transferScheduleFailureReason: string;
        };
        /**
         * @description Parameters containing information required for initiating a schedule transfer
         *
         * @example {
         *       "scheduleStartDate": "2024-03-01T00:00:00Z",
         *       "scheduleEndDate": "2027-03-01T00:00:00Z",
         *       "scheduleExpression": {
         *         "scheduleExpressionType": "RECURRING",
         *         "recurringFrequency": "WEEKLY"
         *       },
         *       "scheduleType": "TIME_BASED"
         *     }
         */
        "sellerWallet_2024-03-01_TransferScheduleInformation": {
            /**
             * Format: date-time
             * @description Field to specify end date of the scheduled transfer
             *
             * @example 2027-03-01T00:00:00Z
             */
            scheduleEndDate?: string;
            scheduleExpression?: components["schemas"]["sellerWallet_2024-03-01_ScheduleExpression"];
            /**
             * Format: date-time
             * @description Field to specify start date of the scheduled transfer
             *
             * @example 2024-03-01T00:00:00Z
             */
            scheduleStartDate?: string;
            scheduleType?: components["schemas"]["sellerWallet_2024-03-01_ScheduleTransferType"];
        };
        /** @description Struct that holds collection of transfer schedules. */
        "sellerWallet_2024-03-01_TransferScheduleListing": {
            /**
             * @description If present, use this pagination token to retrieve the next page of supply sources, if not provided the API will return same response. The field will only be provided when the list is greater than 100.
             * @example 3493805734095308457308475
             */
            nextPageToken?: string;
            /** @description Collection that holds list of Transfer Schedules
             *      */
            transferSchedules: components["schemas"]["sellerWallet_2024-03-01_TransferSchedule"][];
        };
        /**
         * @description Request body to initiate a scheduled transfer from a SW bank account to another customer defined bank account
         *
         * @example {
         *       "sourceAccountId": "amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI",
         *       "destinationAccountId": "amzn1.account.AJKBFWEJFBNH2KCJPII5FBN",
         *       "sourceCurrencyCode": "USD",
         *       "destinationTransactionInstrument": {
         *         "bankAccount": {
         *           "bankAccountNumberFormat": "BBAN",
         *           "bankAccountOwnershipType": "SELF",
         *           "routingNumber": "HBUKGB4B",
         *           "bankNumberFormat": "BASIC",
         *           "accountCountryCode": "CN",
         *           "accountCurrency": "CNY",
         *           "bankAccountNumberTail": "819"
         *         },
         *         "bankAccountNumber": "GB29RBOS60161331926819",
         *         "accountHolderName": "John Doe"
         *       },
         *       "transactionType": "DEBIT",
         *       "transferScheduleInformation": {
         *         "scheduleStartDate": "2024-03-01T00:00:00Z",
         *         "scheduleEndDate": "2027-03-01T00:00:00Z",
         *         "scheduleExpression": {
         *           "scheduleExpressionType": "RECURRING",
         *           "recurringFrequency": "WEEKLY"
         *         },
         *         "scheduleType": "TIME_BASED"
         *       },
         *       "paymentPreference": {
         *         "paymentPreferencePaymentType": "PERCENTAGE",
         *         "value": 25.5
         *       },
         *       "transferScheduleStatus": "ENABLED"
         *     }
         */
        "sellerWallet_2024-03-01_TransferScheduleRequest": {
            /**
             * @description Optional field to specify the unique identifier of the destination bank account where the money needs to be deposited
             *
             * @example amzn1.account.AJKBFWEJFBNH2KCJPII5FBN
             */
            destinationAccountId: string;
            destinationTransactionInstrument: components["schemas"]["sellerWallet_2024-03-01_TransactionInstrumentDetails"];
            paymentPreference: components["schemas"]["sellerWallet_2024-03-01_PaymentPreference"];
            /**
             * @description The unique identifier of the source Amazon SW bank account from where the money needs to be debited
             *
             * @example amzn1.account.SMUGN2EN3ZHWSRJKH2KCJPII5JEI
             */
            sourceAccountId: string;
            /**
             * @description Represents 3 letter currency code in ISO 4217 standard format of the source payment method country
             *
             * @example GBP
             */
            sourceCurrencyCode: string;
            transactionType: components["schemas"]["sellerWallet_2024-03-01_TransactionType"];
            transferScheduleInformation: components["schemas"]["sellerWallet_2024-03-01_TransferScheduleInformation"];
            transferScheduleStatus?: components["schemas"]["sellerWallet_2024-03-01_TransferScheduleStatus"];
        };
        /**
         * @description Represents the schedule status of the transfer.
         * @enum {string}
         */
        "sellerWallet_2024-03-01_TransferScheduleStatus": "ENABLED" | "DISABLED" | "EXPIRED" | "DELETED";
        /** @description Input for add appointment operation. */
        services_AddAppointmentRequest: {
            appointmentTime: components["schemas"]["services_AppointmentTimeInput"];
        };
        /** @description The shipping address for the service job. */
        services_Address: {
            /** @description The first line of the address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The city. */
            city?: string;
            /** @description The two digit country code, in ISO 3166-1 alpha-2 format. */
            countryCode?: string;
            /** @description The county. */
            county?: string;
            /** @description The district. */
            district?: string;
            /** @description The name of the person, business, or institution. */
            name: string;
            /** @description The phone number. */
            phone?: string;
            /** @description The postal code. This can contain letters, digits, spaces, and/or punctuation. */
            postalCode?: string;
            /** @description The state or region. */
            stateOrRegion?: string;
        };
        /** @description The details of an appointment. */
        services_Appointment: {
            appointmentId?: components["schemas"]["services_AppointmentId"];
            /**
             * @description The status of the appointment.
             * @enum {string}
             */
            appointmentStatus?: "ACTIVE" | "CANCELLED" | "COMPLETED";
            appointmentTime?: components["schemas"]["services_AppointmentTime"];
            /** @description A list of technicians assigned to the service job. */
            assignedTechnicians?: components["schemas"]["services_Technician"][];
            poa?: components["schemas"]["services_Poa"];
            rescheduledAppointmentId?: components["schemas"]["services_AppointmentId"];
        };
        /** @description The appointment identifier. */
        services_AppointmentId: string;
        /** @description The resource that performs or performed appointment fulfillment. */
        services_AppointmentResource: {
            /** @description The resource identifier. */
            resourceId?: string;
        };
        /** @description List of resources that performs or performed job appointment fulfillment. */
        services_AppointmentResources: components["schemas"]["services_AppointmentResource"][];
        /** @description A time window along with associated capacity in which the service can be performed. */
        services_AppointmentSlot: {
            /** @description Number of resources for which a slot can be reserved. */
            capacity?: number;
            /**
             * Format: date-time
             * @description Time window end time in ISO 8601 format.
             */
            endTime?: string;
            /**
             * Format: date-time
             * @description Time window start time in ISO 8601 format.
             */
            startTime?: string;
        };
        /** @description Availability information as per the service context queried. */
        services_AppointmentSlotReport: {
            /** @description A list of time windows along with associated capacity in which the service can be performed. */
            appointmentSlots?: components["schemas"]["services_AppointmentSlot"][];
            /**
             * Format: date-time
             * @description End Time up to which the appointment slots are generated in ISO 8601 format.
             */
            endTime?: string;
            /**
             * @description Defines the type of slots.
             * @enum {string}
             */
            schedulingType?: "REAL_TIME_SCHEDULING" | "NON_REAL_TIME_SCHEDULING";
            /**
             * Format: date-time
             * @description Start Time from which the appointment slots are generated in ISO 8601 format.
             */
            startTime?: string;
        };
        /** @description The time of the appointment window. */
        services_AppointmentTime: {
            /** @description The duration of the appointment window, in minutes. */
            durationInMinutes: number;
            /**
             * Format: date-time
             * @description The date and time of the start of the appointment window in ISO 8601 format.
             */
            startTime: string;
        };
        /** @description The input appointment time details. */
        services_AppointmentTimeInput: {
            /** @description The duration of an appointment in minutes. */
            durationInMinutes?: number;
            /**
             * Format: date-time
             * @description The date, time in UTC for the start time of an appointment in ISO 8601 format.
             */
            startTime: string;
        };
        /** @description Request schema for the `assignAppointmentResources` operation. */
        services_AssignAppointmentResourcesRequest: {
            resources: components["schemas"]["services_AppointmentResources"];
        };
        /** @description Response schema for the `assignAppointmentResources` operation. */
        services_AssignAppointmentResourcesResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            /** @description The payload for the `assignAppointmentResource` operation. */
            payload?: {
                warnings?: components["schemas"]["services_WarningList"];
            };
        };
        /** @description Information about an item associated with the service job. */
        services_AssociatedItem: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            asin?: string;
            /** @description The brand name of the item. */
            brandName?: string;
            itemDelivery?: components["schemas"]["services_ItemDelivery"];
            /**
             * @description The status of the item.
             * @enum {string}
             */
            itemStatus?: "ACTIVE" | "CANCELLED" | "SHIPPED" | "DELIVERED";
            orderId?: components["schemas"]["services_OrderId"];
            /** @description The total number of items included in the order. */
            quantity?: number;
            /** @description The title of the item. */
            title?: string;
        };
        /** @description `AvailabilityRecord` to represent the capacity of a resource over a time range. */
        services_AvailabilityRecord: {
            /** @description Signifies the capacity of a resource which is available. */
            capacity?: number;
            /**
             * Format: date-time
             * @description Denotes the time till when the resource is available in a day in ISO-8601 format.
             */
            endTime: string;
            recurrence?: components["schemas"]["services_Recurrence"];
            /**
             * Format: date-time
             * @description Denotes the time from when the resource is available in a day in ISO-8601 format.
             */
            startTime: string;
        };
        /** @description List of `AvailabilityRecord`s to represent the capacity of a resource over a time range. */
        services_AvailabilityRecords: components["schemas"]["services_AvailabilityRecord"][];
        /** @description Information about the buyer. */
        services_Buyer: {
            /** @description The identifier of the buyer. */
            buyerId?: string;
            /** @description When true, the service is for an Amazon Prime buyer. */
            isPrimeMember?: boolean;
            /** @description The name of the buyer. */
            name?: string;
            /** @description The phone number of the buyer. */
            phone?: string;
        };
        /** @description Response schema for the `cancelReservation` operation. */
        services_CancelReservationResponse: {
            errors?: components["schemas"]["services_ErrorList"];
        };
        /** @description Response schema for the `cancelServiceJobByServiceJobId` operation. */
        services_CancelServiceJobByServiceJobIdResponse: {
            errors?: components["schemas"]["services_ErrorList"];
        };
        /**
         * @description Type of capacity
         * @enum {string}
         */
        services_CapacityType: "SCHEDULED_CAPACITY" | "AVAILABLE_CAPACITY" | "ENCUMBERED_CAPACITY" | "RESERVED_CAPACITY";
        /** @description Response schema for the `completeServiceJobByServiceJobId` operation. */
        services_CompleteServiceJobByServiceJobIdResponse: {
            errors?: components["schemas"]["services_ErrorList"];
        };
        /** @description `CreateReservationRecord` entity contains the `Reservation` if there is an error/warning while performing the requested operation on it, otherwise it will contain the new `reservationId`. */
        services_CreateReservationRecord: {
            errors?: components["schemas"]["services_ErrorList"];
            reservation?: components["schemas"]["services_Reservation"];
            warnings?: components["schemas"]["services_WarningList"];
        };
        /** @description Request schema for the `createReservation` operation. */
        services_CreateReservationRequest: {
            reservation: components["schemas"]["services_Reservation"];
            /** @description Resource (store) identifier. */
            resourceId: string;
        };
        /** @description Response schema for the `createReservation` operation. */
        services_CreateReservationResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_CreateReservationRecord"];
        };
        /** @description The response schema for the `createServiceDocumentUploadDestination` operation. */
        services_CreateServiceDocumentUploadDestination: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_ServiceDocumentUploadDestination"];
        };
        /** @description A range of time. */
        services_DateTimeRange: {
            /**
             * Format: date-time
             * @description The end of the time range. Must be in UTC in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
             */
            endTime: string;
            /**
             * Format: date-time
             * @description The beginning of the time range. Must be in UTC in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
             */
            startTime: string;
        };
        /**
         * @description The day of the week.
         * @enum {string}
         */
        services_DayOfWeek: "MONDAY" | "TUESDAY" | "WEDNESDAY" | "THURSDAY" | "FRIDAY" | "SATURDAY" | "SUNDAY";
        /** @description Encryption details for required client-side encryption and decryption of document contents. */
        services_EncryptionDetails: {
            /** @description The vector to encrypt or decrypt the document contents using Cipher Block Chaining (CBC). */
            initializationVector: string;
            /** @description The encryption key used to encrypt or decrypt the document contents. */
            key: string;
            /**
             * @description The encryption standard required to encrypt or decrypt the document contents.
             * @enum {string}
             */
            standard: "AES";
        };
        /** @description Error response returned when the request is unsuccessful. */
        services_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /**
             * @description The type of error.
             * @enum {string}
             */
            errorLevel?: "ERROR" | "WARNING";
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        services_ErrorList: components["schemas"]["services_Error"][];
        /** @description In this slot format each slot only has the requested capacity types. This slot size is as specified by slot duration. */
        services_FixedSlot: {
            /**
             * Format: int32
             * @description Available capacity corresponding to the slot. This capacity represents the capacity available for allocation to reservations.
             */
            availableCapacity?: number;
            /**
             * Format: int32
             * @description Encumbered capacity corresponding to the slot. This capacity represents the capacity allocated for Amazon Jobs/Appointments/Orders.
             */
            encumberedCapacity?: number;
            /**
             * Format: int32
             * @description Reserved capacity corresponding to the slot. This capacity represents the capacity made unavailable due to events like Breaks/Leaves/Lunch.
             */
            reservedCapacity?: number;
            /**
             * Format: int32
             * @description Scheduled capacity corresponding to the slot. This capacity represents the originally allocated capacity as per resource schedule.
             */
            scheduledCapacity?: number;
            /**
             * Format: date-time
             * @description Start date time of slot in ISO 8601 format with precision of seconds.
             */
            startDateTime?: string;
        };
        /** @description Response schema for the `getFixedSlotCapacity` operation. */
        services_FixedSlotCapacity: {
            /** @description Array of capacity slots in fixed slot format. */
            capacities?: components["schemas"]["services_FixedSlot"][];
            /** @description Next page token, if there are more pages. */
            nextPageToken?: string;
            /** @description Resource Identifier. */
            resourceId?: string;
            /**
             * Format: int32
             * @description The duration of each slot which is returned. This value will be a multiple of 5 and fall in the following range: 5 <= `slotDuration` <= 360.
             */
            slotDuration?: number;
        };
        /** @description The error response schema for the `getFixedSlotCapacity` operation. */
        services_FixedSlotCapacityErrors: {
            errors?: components["schemas"]["services_ErrorList"];
        };
        /** @description Request schema for the `getFixedSlotCapacity` operation. This schema is used to define the time range, capacity types and slot duration which are being queried. */
        services_FixedSlotCapacityQuery: {
            /** @description An array of capacity types which are being requested. Default value is `[SCHEDULED_CAPACITY]`. */
            capacityTypes?: components["schemas"]["services_CapacityType"][];
            /**
             * Format: date-time
             * @description End date time up to which the capacity slots are being requested in ISO 8601 format.
             */
            endDateTime: string;
            /**
             * Format: int32
             * @description Size in which slots are being requested. This value should be a multiple of 5 and fall in the range: 5 <= `slotDuration` <= 360.
             */
            slotDuration?: number;
            /**
             * Format: date-time
             * @description Start date time from which the capacity slots are being requested in ISO 8601 format.
             */
            startDateTime: string;
        };
        /** @description Document that captured during service appointment fulfillment that portrays proof of completion */
        services_FulfillmentDocument: {
            /** @description Sha256 hash of the file content. This value is used to determine if the file has been corrupted or tampered with during transit. */
            contentSha256?: string;
            /** @description The identifier of the upload destination. Get this value by calling the `createServiceDocumentUploadDestination` operation of the Services API. */
            uploadDestinationId?: string;
        };
        /** @description List of documents captured during service appointment fulfillment. */
        services_FulfillmentDocuments: components["schemas"]["services_FulfillmentDocument"][];
        /** @description Input for fulfillment time details */
        services_FulfillmentTime: {
            /**
             * Format: date-time
             * @description The date, time in UTC of the fulfillment end time in ISO 8601 format.
             */
            endTime?: string;
            /**
             * Format: date-time
             * @description The date, time in UTC of the fulfillment start time in ISO 8601 format.
             */
            startTime?: string;
        };
        /** @description The response of fetching appointment slots based on service context. */
        services_GetAppointmentSlotsResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_AppointmentSlotReport"];
        };
        /** @description The response schema for the `getServiceJobByServiceJobId` operation. */
        services_GetServiceJobByServiceJobIdResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_ServiceJob"];
        };
        /** @description Response schema for the `getServiceJobs` operation. */
        services_GetServiceJobsResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_JobListing"];
        };
        /** @description Delivery information for the item. */
        services_ItemDelivery: {
            /**
             * Format: date-time
             * @description The date and time of the latest Estimated Delivery Date (EDD) of all the items with an EDD. In ISO 8601 format.
             */
            estimatedDeliveryDate?: string;
            itemDeliveryPromise?: components["schemas"]["services_ItemDeliveryPromise"];
        };
        /** @description Promised delivery information for the item. */
        services_ItemDeliveryPromise: {
            /**
             * Format: date-time
             * @description The date and time of the end of the promised delivery window in ISO 8601 format.
             */
            endTime?: string;
            /**
             * Format: date-time
             * @description The date and time of the start of the promised delivery window in ISO 8601 format.
             */
            startTime?: string;
        };
        /** @description The payload for the `getServiceJobs` operation. */
        services_JobListing: {
            /** @description List of job details for the given input. */
            jobs?: components["schemas"]["services_ServiceJob"][];
            /** @description A generated string used to pass information to your next request. If `nextPageToken` is returned, pass the value of `nextPageToken` to the `pageToken` to get next results. */
            nextPageToken?: string;
            /** @description A generated string used to pass information to your next request. If `previousPageToken` is returned, pass the value of `previousPageToken` to the `pageToken` to get previous page results. */
            previousPageToken?: string;
            /** @description Total result size of the query result. */
            totalResultSize?: number;
        };
        /** @description The Amazon-defined identifier for an order placed by the buyer, in 3-7-7 format. */
        services_OrderId: string;
        /** @description Proof of Appointment (POA) details. */
        services_Poa: {
            appointmentTime?: components["schemas"]["services_AppointmentTime"];
            /**
             * @description The type of POA uploaded.
             * @enum {string}
             */
            poaType?: "NO_SIGNATURE_DUMMY_POS" | "CUSTOMER_SIGNATURE" | "DUMMY_RECEIPT" | "POA_RECEIPT";
            /** @description A list of technicians. */
            technicians?: components["schemas"]["services_Technician"][];
            /** @description The identifier of the technician who uploaded the POA. */
            uploadingTechnician?: string;
            /**
             * Format: date-time
             * @description The date and time when the POA was uploaded in ISO 8601 format.
             */
            uploadTime?: string;
        };
        /** @description Range capacity entity where each entry has a capacity type and corresponding slots. */
        services_RangeCapacity: {
            capacityType?: components["schemas"]["services_CapacityType"];
            /** @description Array of capacity slots in range slot format. */
            slots?: components["schemas"]["services_RangeSlot"][];
        };
        /** @description Capacity slots represented in a format similar to availability rules. */
        services_RangeSlot: {
            /**
             * Format: int32
             * @description Capacity of the slot.
             */
            capacity?: number;
            /**
             * Format: date-time
             * @description End date time of slot in ISO 8601 format with precision of seconds.
             */
            endDateTime?: string;
            /**
             * Format: date-time
             * @description Start date time of slot in ISO 8601 format with precision of seconds.
             */
            startDateTime?: string;
        };
        /** @description Response schema for the `getRangeSlotCapacity` operation. */
        services_RangeSlotCapacity: {
            /** @description Array of range capacities where each entry is for a specific capacity type. */
            capacities?: components["schemas"]["services_RangeCapacity"][];
            /** @description Next page token, if there are more pages. */
            nextPageToken?: string;
            /** @description Resource Identifier. */
            resourceId?: string;
        };
        /** @description The error response schema for the `getRangeSlotCapacity` operation. */
        services_RangeSlotCapacityErrors: {
            errors?: components["schemas"]["services_ErrorList"];
        };
        /** @description Request schema for the `getRangeSlotCapacity` operation. This schema is used to define the time range and capacity types that are being queried. */
        services_RangeSlotCapacityQuery: {
            /** @description An array of capacity types which are being requested. Default value is `[SCHEDULED_CAPACITY]`. */
            capacityTypes?: components["schemas"]["services_CapacityType"][];
            /**
             * Format: date-time
             * @description End date time up to which the capacity slots are being requested in ISO 8601 format.
             */
            endDateTime: string;
            /**
             * Format: date-time
             * @description Start date time from which the capacity slots are being requested in ISO 8601 format.
             */
            startDateTime: string;
        };
        /** @description Repeated occurrence of an event in a time range. */
        services_Recurrence: {
            /** @description Days of the month when recurrence is valid. */
            daysOfMonth?: number[];
            /** @description Days of the week when recurrence is valid. If the schedule is valid every Monday, input will only contain `MONDAY` in the list. */
            daysOfWeek?: components["schemas"]["services_DayOfWeek"][];
            /**
             * Format: date-time
             * @description End time of the recurrence.
             */
            endTime: string;
        };
        /** @description Input for rescheduled appointment operation. */
        services_RescheduleAppointmentRequest: {
            appointmentTime: components["schemas"]["services_AppointmentTimeInput"];
            rescheduleReasonCode: components["schemas"]["services_RescheduleReasonCode"];
        };
        /** @description The appointment reschedule reason code. */
        services_RescheduleReasonCode: string;
        /** @description Reservation object reduces the capacity of a resource. */
        services_Reservation: {
            availability: components["schemas"]["services_AvailabilityRecord"];
            /** @description Unique identifier for a reservation. If present, it is treated as an update reservation request and will update the corresponding reservation. Otherwise, it is treated as a new create reservation request. */
            reservationId?: string;
            /**
             * @description Type of reservation.
             * @enum {string}
             */
            type: "APPOINTMENT" | "TRAVEL" | "VACATION" | "BREAK" | "TRAINING";
        };
        /** @description The scope of work for the order. */
        services_ScopeOfWork: {
            /** @description The Amazon Standard Identification Number (ASIN) of the service job. */
            asin?: string;
            /** @description The number of service jobs. */
            quantity?: number;
            /** @description A list of skills required to perform the job. */
            requiredSkills?: string[];
            /** @description The title of the service job. */
            title?: string;
        };
        /** @description Information about the seller of the service job. */
        services_Seller: {
            /** @description The identifier of the seller of the service job. */
            sellerId?: string;
        };
        /** @description Information about an upload destination. */
        services_ServiceDocumentUploadDestination: {
            encryptionDetails: components["schemas"]["services_EncryptionDetails"];
            /** @description The headers to include in the upload request. */
            headers?: Record<string, unknown>;
            /** @description The unique identifier to be used by APIs that reference the upload destination. */
            uploadDestinationId: string;
            /** @description The URL to which to upload the file. */
            url: string;
        };
        /** @description The job details of a service. */
        services_ServiceJob: {
            /** @description A list of appointments. */
            appointments?: components["schemas"]["services_Appointment"][];
            /** @description A list of items associated with the service job. */
            associatedItems?: components["schemas"]["services_AssociatedItem"][];
            buyer?: components["schemas"]["services_Buyer"];
            /**
             * Format: date-time
             * @description The date and time of the creation of the job in ISO 8601 format.
             */
            createTime?: string;
            /** @description The marketplace identifier. */
            marketplaceId?: string;
            /** @description A list of appointment windows preferred by the buyer. Included only if the buyer selected appointment windows when creating the order. */
            preferredAppointmentTimes?: components["schemas"]["services_AppointmentTime"][];
            scopeOfWork?: components["schemas"]["services_ScopeOfWork"];
            seller?: components["schemas"]["services_Seller"];
            serviceJobId?: components["schemas"]["services_ServiceJobId"];
            serviceJobProvider?: components["schemas"]["services_ServiceJobProvider"];
            /**
             * @description The status of the service job.
             * @enum {string}
             */
            serviceJobStatus?: "NOT_SERVICED" | "CANCELLED" | "COMPLETED" | "PENDING_SCHEDULE" | "NOT_FULFILLABLE" | "HOLD" | "PAYMENT_DECLINED";
            serviceLocation?: components["schemas"]["services_ServiceLocation"];
            serviceOrderId?: components["schemas"]["services_OrderId"];
            /** @description The Amazon-defined identifier for the region scope. */
            storeId?: string;
        };
        /** @description Amazon identifier for the service job. */
        services_ServiceJobId: string;
        /** @description Information about the service job provider. */
        services_ServiceJobProvider: {
            /** @description The identifier of the service job provider. */
            serviceJobProviderId?: string;
        };
        /** @description Information about the location of the service job. */
        services_ServiceLocation: {
            address?: components["schemas"]["services_Address"];
            /**
             * @description The location of the service job.
             * @enum {string}
             */
            serviceLocationType?: "IN_HOME" | "IN_STORE" | "ONLINE";
        };
        /** @description Input for to be uploaded document. */
        services_ServiceUploadDocument: {
            /**
             * Format: int64
             * @description The content length of the to-be-uploaded file
             */
            contentLength: number;
            /** @description An MD5 hash of the content to be submitted to the upload destination. This value is used to determine if the data has been corrupted or tampered with during transit. */
            contentMD5?: string;
            /**
             * @description The content type of the to-be-uploaded file
             * @enum {string}
             */
            contentType: "TIFF" | "JPG" | "PNG" | "JPEG" | "GIF" | "PDF";
        };
        /** @description Input for set appointment fulfillment data operation. */
        services_SetAppointmentFulfillmentDataRequest: {
            appointmentResources?: components["schemas"]["services_AppointmentResources"];
            estimatedArrivalTime?: components["schemas"]["services_DateTimeRange"];
            fulfillmentDocuments?: components["schemas"]["services_FulfillmentDocuments"];
            fulfillmentTime?: components["schemas"]["services_FulfillmentTime"];
        };
        /** @description Response schema for the `addAppointmentForServiceJobByServiceJobId` and `rescheduleAppointmentForServiceJobByServiceJobId` operations. */
        services_SetAppointmentResponse: {
            appointmentId?: components["schemas"]["services_AppointmentId"];
            errors?: components["schemas"]["services_ErrorList"];
            warnings?: components["schemas"]["services_WarningList"];
        };
        /** @description A technician who is assigned to perform the service job in part or in full. */
        services_Technician: {
            /** @description The name of the technician. */
            name?: string;
            /** @description The technician identifier. */
            technicianId?: string;
        };
        /** @description `UpdateReservationRecord` entity contains the `Reservation` if there is an error/warning while performing the requested operation on it, otherwise it will contain the new `reservationId`. */
        services_UpdateReservationRecord: {
            errors?: components["schemas"]["services_ErrorList"];
            reservation?: components["schemas"]["services_Reservation"];
            warnings?: components["schemas"]["services_WarningList"];
        };
        /** @description Request schema for the `updateReservation` operation. */
        services_UpdateReservationRequest: {
            reservation: components["schemas"]["services_Reservation"];
            /** @description Resource (store) identifier. */
            resourceId: string;
        };
        /** @description Response schema for the `updateReservation` operation. */
        services_UpdateReservationResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            payload?: components["schemas"]["services_UpdateReservationRecord"];
        };
        /** @description `UpdateScheduleRecord` entity contains the `AvailabilityRecord` if there is an error/warning while performing the requested operation on it. */
        services_UpdateScheduleRecord: {
            availability?: components["schemas"]["services_AvailabilityRecord"];
            errors?: components["schemas"]["services_ErrorList"];
            warnings?: components["schemas"]["services_WarningList"];
        };
        /** @description Request schema for the `updateSchedule` operation. */
        services_UpdateScheduleRequest: {
            schedules: components["schemas"]["services_AvailabilityRecords"];
        };
        /** @description Response schema for the `updateSchedule` operation. */
        services_UpdateScheduleResponse: {
            errors?: components["schemas"]["services_ErrorList"];
            /** @description Contains the `UpdateScheduleRecords` for which the error/warning has occurred. */
            payload?: components["schemas"]["services_UpdateScheduleRecord"][];
        };
        /** @description Warning returned when the request is successful, but there are important callouts based on which API clients should take defined actions. */
        services_Warning: {
            /** @description An warning code that identifies the type of warning that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or address the warning. */
            details?: string;
            /** @description A message that describes the warning condition in a human-readable form. */
            message: string;
        };
        /** @description A list of warnings returned in the sucessful execution response of an API request. */
        services_WarningList: components["schemas"]["services_Warning"][];
        /** @description The shipping address details of the shipment. */
        shipmentInvoicingV0_Address: {
            /** @description The street address. */
            AddressLine1?: string;
            /** @description Additional street address information, if required. */
            AddressLine2?: string;
            /** @description Additional street address information, if required. */
            AddressLine3?: string;
            AddressType?: components["schemas"]["shipmentInvoicingV0_AddressTypeEnum"];
            /** @description The city. */
            City?: string;
            /** @description The country code. */
            CountryCode?: string;
            /** @description The county. */
            County?: string;
            /** @description The district. */
            District?: string;
            /** @description The name. */
            Name?: string;
            /** @description The phone number. */
            Phone?: string;
            /** @description The postal code. */
            PostalCode?: string;
            /** @description The state or region. */
            StateOrRegion?: string;
        };
        /**
         * @description The shipping address type.
         * @enum {string}
         */
        shipmentInvoicingV0_AddressTypeEnum: "Residential" | "Commercial";
        /**
         * Format: byte
         * @description Shipment invoice document content.
         */
        shipmentInvoicingV0_Blob: string;
        /** @description Tax information about the buyer. */
        shipmentInvoicingV0_BuyerTaxInfo: {
            /** @description The legal name of the company. */
            CompanyLegalName?: string;
            TaxClassifications?: components["schemas"]["shipmentInvoicingV0_TaxClassificationList"];
            /** @description The country or region imposing the tax. */
            TaxingRegion?: string;
        };
        /** @description An error response returned when the request is unsuccessful. */
        shipmentInvoicingV0_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        shipmentInvoicingV0_ErrorList: components["schemas"]["shipmentInvoicingV0_Error"][];
        /** @description The response schema for the getInvoiceStatus operation. */
        shipmentInvoicingV0_GetInvoiceStatusResponse: {
            errors?: components["schemas"]["shipmentInvoicingV0_ErrorList"];
            payload?: components["schemas"]["shipmentInvoicingV0_ShipmentInvoiceStatusResponse"];
        };
        /** @description The response schema for the getShipmentDetails operation. */
        shipmentInvoicingV0_GetShipmentDetailsResponse: {
            errors?: components["schemas"]["shipmentInvoicingV0_ErrorList"];
            payload?: components["schemas"]["shipmentInvoicingV0_ShipmentDetail"];
        };
        /** @description Tax information about the marketplace. */
        shipmentInvoicingV0_MarketplaceTaxInfo: {
            /** @description The legal name of the company. */
            CompanyLegalName?: string;
            TaxClassifications?: components["schemas"]["shipmentInvoicingV0_TaxClassificationList"];
            /** @description The country or region imposing the tax. */
            TaxingRegion?: string;
        };
        /** @description The currency type and amount. */
        shipmentInvoicingV0_Money: {
            /** @description The currency amount. */
            Amount?: string;
            /** @description Three-digit currency code in ISO 4217 format. */
            CurrencyCode?: string;
        };
        /** @description Payment transaction information */
        shipmentInvoicingV0_PaymentInformation: {
            /** @description Government ID of acquirer */
            AcquirerId?: string;
            /** @description Authorization code for this payment */
            AuthorizationCode?: string;
            /** @description Credit card brand (if payment method is CreditCard) */
            CardBrand?: string;
            PaymentMethod?: components["schemas"]["shipmentInvoicingV0_PaymentMethodEnum"];
            PaymentValue?: components["schemas"]["shipmentInvoicingV0_Money"];
        };
        /** @description List of payment transactions */
        shipmentInvoicingV0_PaymentInformationList: components["schemas"]["shipmentInvoicingV0_PaymentInformation"][];
        /** @description The list of payment method details. */
        shipmentInvoicingV0_PaymentMethodDetailItemList: string[];
        /**
         * @description Payment methods
         * @enum {string}
         */
        shipmentInvoicingV0_PaymentMethodEnum: "CreditCard" | "DebitCard" | "Pix" | "BankSlip" | "GiftCard" | "Other";
        /** @description The list of serial numbers. */
        shipmentInvoicingV0_SerialNumbersList: string[];
        /** @description The information required by a selling partner to issue a shipment invoice. */
        shipmentInvoicingV0_ShipmentDetail: {
            /** @description The Amazon-defined identifier for the order. */
            AmazonOrderId?: string;
            /** @description The Amazon-defined identifier for the shipment. */
            AmazonShipmentId?: string;
            /** @description The county of the buyer. */
            BuyerCounty?: string;
            /** @description The name of the buyer. */
            BuyerName?: string;
            BuyerTaxInfo?: components["schemas"]["shipmentInvoicingV0_BuyerTaxInfo"];
            /** @description The identifier for the marketplace where the order was placed. */
            MarketplaceId?: string;
            MarketplaceTaxInfo?: components["schemas"]["shipmentInvoicingV0_MarketplaceTaxInfo"];
            PaymentMethodDetails?: components["schemas"]["shipmentInvoicingV0_PaymentMethodDetailItemList"];
            Payments?: components["schemas"]["shipmentInvoicingV0_PaymentInformationList"];
            /**
             * Format: date-time
             * @description The date and time when the order was created.
             */
            PurchaseDate?: string;
            /** @description The seller’s friendly name registered in the marketplace. */
            SellerDisplayName?: string;
            /** @description The seller identifier. */
            SellerId?: string;
            ShipmentItems?: components["schemas"]["shipmentInvoicingV0_ShipmentItems"];
            ShippingAddress?: components["schemas"]["shipmentInvoicingV0_Address"];
            /** @description The Amazon-defined identifier for the warehouse. */
            WarehouseId?: string;
        };
        /**
         * @description The shipment invoice status.
         * @enum {string}
         */
        shipmentInvoicingV0_ShipmentInvoiceStatus: "Processing" | "Accepted" | "Errored" | "NotFound";
        /** @description The shipment invoice status information. */
        shipmentInvoicingV0_ShipmentInvoiceStatusInfo: {
            /** @description The Amazon-defined shipment identifier. */
            AmazonShipmentId?: string;
            InvoiceStatus?: components["schemas"]["shipmentInvoicingV0_ShipmentInvoiceStatus"];
        };
        /** @description The shipment invoice status response. */
        shipmentInvoicingV0_ShipmentInvoiceStatusResponse: {
            Shipments?: components["schemas"]["shipmentInvoicingV0_ShipmentInvoiceStatusInfo"];
        };
        /** @description The shipment item information required by a seller to issue a shipment invoice. */
        shipmentInvoicingV0_ShipmentItem: {
            /** @description The Amazon Standard Identification Number (ASIN) of the item. */
            ASIN?: string;
            GiftWrapPrice?: components["schemas"]["shipmentInvoicingV0_Money"];
            ItemPrice?: components["schemas"]["shipmentInvoicingV0_Money"];
            /** @description The Amazon-defined identifier for the order item. */
            OrderItemId?: string;
            PromotionDiscount?: components["schemas"]["shipmentInvoicingV0_Money"];
            /** @description The number of items ordered. */
            QuantityOrdered?: number;
            /** @description The seller SKU of the item. */
            SellerSKU?: string;
            SerialNumbers?: components["schemas"]["shipmentInvoicingV0_SerialNumbersList"];
            ShippingDiscount?: components["schemas"]["shipmentInvoicingV0_Money"];
            ShippingPrice?: components["schemas"]["shipmentInvoicingV0_Money"];
            /** @description The name of the item. */
            Title?: string;
        };
        /** @description A list of shipment items. */
        shipmentInvoicingV0_ShipmentItems: components["schemas"]["shipmentInvoicingV0_ShipmentItem"][];
        /** @description The request schema for the submitInvoice operation. */
        shipmentInvoicingV0_SubmitInvoiceRequest: {
            /** @description MD5 sum for validating the invoice data. For more information about calculating this value, see [Working with Content-MD5 Checksums](https://docs.developer.amazonservices.com/en_US/dev_guide/DG_MD5.html). */
            ContentMD5Value: string;
            InvoiceContent: components["schemas"]["shipmentInvoicingV0_Blob"];
            /** @description An Amazon marketplace identifier. */
            MarketplaceId?: string;
        };
        /** @description The response schema for the submitInvoice operation. */
        shipmentInvoicingV0_SubmitInvoiceResponse: {
            errors?: components["schemas"]["shipmentInvoicingV0_ErrorList"];
        };
        /** @description The tax classification for the entity. */
        shipmentInvoicingV0_TaxClassification: {
            /** @description The type of tax. */
            Name?: string;
            /** @description The entity's tax identifier. */
            Value?: string;
        };
        /** @description The list of tax classifications. */
        shipmentInvoicingV0_TaxClassificationList: components["schemas"]["shipmentInvoicingV0_TaxClassification"][];
        /** @description The specific rate purchased for the shipment, or null if unpurchased. */
        shipping_AcceptedRate: {
            billedWeight?: components["schemas"]["shipping_Weight"];
            promise?: components["schemas"]["shipping_ShippingPromiseSet"];
            serviceType?: components["schemas"]["shipping_ServiceType"];
            totalCharge?: components["schemas"]["shipping_Currency"];
        };
        /** @description The account related data. */
        shipping_Account: {
            accountId: components["schemas"]["shipping_AccountId"];
        };
        /** @description This is the Amazon Shipping account id generated during the Amazon Shipping onboarding process. */
        shipping_AccountId: string;
        /** @description The address. */
        shipping_Address: {
            /** @description First line of that address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            city: components["schemas"]["shipping_City"];
            /** @description The email cc addresses of the contact associated with the address. */
            copyEmails?: string[];
            countryCode: components["schemas"]["shipping_CountryCode"];
            /** @description The email address of the contact associated with the address. */
            email?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phoneNumber?: string;
            postalCode: components["schemas"]["shipping_PostalCode"];
            stateOrRegion: components["schemas"]["shipping_StateOrRegion"];
        };
        /** @description The response schema for the cancelShipment operation. */
        shipping_CancelShipmentResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
        };
        /** @description The city where the person, business or institution is located. */
        shipping_City: string;
        /** @description Client reference id. */
        shipping_ClientReferenceId: string;
        /** @description Container in the shipment. */
        shipping_Container: {
            containerReferenceId: components["schemas"]["shipping_ContainerReferenceId"];
            /**
             * @description The type of physical container being used. (always 'PACKAGE')
             * @enum {string}
             */
            containerType?: "PACKAGE";
            dimensions: components["schemas"]["shipping_Dimensions"];
            /** @description A list of the items in the container. */
            items: components["schemas"]["shipping_ContainerItem"][];
            value: components["schemas"]["shipping_Currency"];
            weight: components["schemas"]["shipping_Weight"];
        };
        /** @description Item in the container. */
        shipping_ContainerItem: {
            /** @description The quantity of the items of this type in the container. */
            quantity: number;
            /** @description A descriptive title of the item. */
            title: string;
            unitPrice: components["schemas"]["shipping_Currency"];
            unitWeight: components["schemas"]["shipping_Weight"];
        };
        /** @description A list of container. */
        shipping_ContainerList: components["schemas"]["shipping_Container"][];
        /** @description An identifier for the container. This must be unique within all the containers in the same shipment. */
        shipping_ContainerReferenceId: string;
        /** @description Container specification for checking the service rate. */
        shipping_ContainerSpecification: {
            dimensions: components["schemas"]["shipping_Dimensions"];
            weight: components["schemas"]["shipping_Weight"];
        };
        /** @description A list of container specifications. */
        shipping_ContainerSpecificationList: components["schemas"]["shipping_ContainerSpecification"][];
        /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
        shipping_CountryCode: string;
        /** @description The request schema for the createShipment operation. */
        shipping_CreateShipmentRequest: {
            clientReferenceId: components["schemas"]["shipping_ClientReferenceId"];
            containers: components["schemas"]["shipping_ContainerList"];
            shipFrom: components["schemas"]["shipping_Address"];
            shipTo: components["schemas"]["shipping_Address"];
        };
        /** @description The response schema for the createShipment operation. */
        shipping_CreateShipmentResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_CreateShipmentResult"];
        };
        /** @description The payload schema for the createShipment operation. */
        shipping_CreateShipmentResult: {
            eligibleRates: components["schemas"]["shipping_RateList"];
            shipmentId: components["schemas"]["shipping_ShipmentId"];
        };
        /** @description The total value of all items in the container. */
        shipping_Currency: {
            /** @description A 3-character currency code. */
            unit: string;
            /** @description The amount of currency. */
            value: number;
        };
        /** @description A set of measurements for a three-dimensional object. */
        shipping_Dimensions: {
            /** @description The height of the container. */
            height: number;
            /** @description The length of the container. */
            length: number;
            /**
             * @description The unit of these measurements.
             * @enum {string}
             */
            unit: "IN" | "CM";
            /** @description The width of the container. */
            width: number;
        };
        /** @description Error response returned when the request is unsuccessful. */
        shipping_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        shipping_ErrorList: components["schemas"]["shipping_Error"][];
        /** @description An event of a shipment */
        shipping_Event: {
            eventCode: components["schemas"]["shipping_EventCode"];
            /**
             * Format: date-time
             * @description The date and time of an event for a shipment.
             */
            eventTime: string;
            location?: components["schemas"]["shipping_Location"];
        };
        /** @description The event code of a shipment, such as Departed, Received, and ReadyForReceive. */
        shipping_EventCode: string;
        /** @description A list of events of a shipment. */
        shipping_EventList: components["schemas"]["shipping_Event"][];
        /** @description The response schema for the getAccount operation. */
        shipping_GetAccountResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_Account"];
        };
        /** @description The payload schema for the getRates operation. */
        shipping_GetRatesRequest: {
            containerSpecifications: components["schemas"]["shipping_ContainerSpecificationList"];
            serviceTypes: components["schemas"]["shipping_ServiceTypeList"];
            /**
             * Format: date-time
             * @description The start date and time. This defaults to the current date and time.
             */
            shipDate?: string;
            shipFrom: components["schemas"]["shipping_Address"];
            shipTo: components["schemas"]["shipping_Address"];
        };
        /** @description The response schema for the getRates operation. */
        shipping_GetRatesResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_GetRatesResult"];
        };
        /** @description The payload schema for the getRates operation. */
        shipping_GetRatesResult: {
            serviceRates: components["schemas"]["shipping_ServiceRateList"];
        };
        /** @description The response schema for the getShipment operation. */
        shipping_GetShipmentResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_Shipment"];
        };
        /** @description The response schema for the getTrackingInformation operation. */
        shipping_GetTrackingInformationResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_TrackingInformation"];
        };
        /** @description The label details of the container. */
        shipping_Label: {
            labelSpecification?: components["schemas"]["shipping_LabelSpecification"];
            labelStream?: components["schemas"]["shipping_LabelStream"];
        };
        /** @description Label details including label stream, format, size. */
        shipping_LabelResult: {
            containerReferenceId?: components["schemas"]["shipping_ContainerReferenceId"];
            label?: components["schemas"]["shipping_Label"];
            /** @description The tracking identifier assigned to the container. */
            trackingId?: string;
        };
        /** @description A list of label results */
        shipping_LabelResultList: components["schemas"]["shipping_LabelResult"][];
        /** @description The label specification info. */
        shipping_LabelSpecification: {
            /**
             * @description The format of the label. Enum of PNG only for now.
             * @enum {string}
             */
            labelFormat: "PNG";
            /**
             * @description The label stock size specification in length and height. Enum of 4x6 only for now.
             * @enum {string}
             */
            labelStockSize: "4x6";
        };
        /** @description Contains binary image data encoded as a base-64 string. */
        shipping_LabelStream: string;
        /** @description The location where the person, business or institution is located. */
        shipping_Location: {
            city?: components["schemas"]["shipping_City"];
            countryCode?: components["schemas"]["shipping_CountryCode"];
            postalCode?: components["schemas"]["shipping_PostalCode"];
            stateOrRegion?: components["schemas"]["shipping_StateOrRegion"];
        };
        /** @description The account related with the shipment. */
        shipping_Party: {
            accountId?: components["schemas"]["shipping_AccountId"];
        };
        /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
        shipping_PostalCode: string;
        /**
         * Format: date-time
         * @description The promised delivery date and time of a shipment.
         */
        shipping_PromisedDeliveryDate: string;
        /** @description The request schema for the purchaseLabels operation. */
        shipping_PurchaseLabelsRequest: {
            labelSpecification: components["schemas"]["shipping_LabelSpecification"];
            rateId: components["schemas"]["shipping_RateId"];
        };
        /** @description The response schema for the purchaseLabels operation. */
        shipping_PurchaseLabelsResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_PurchaseLabelsResult"];
        };
        /** @description The payload schema for the purchaseLabels operation. */
        shipping_PurchaseLabelsResult: {
            acceptedRate: components["schemas"]["shipping_AcceptedRate"];
            clientReferenceId?: components["schemas"]["shipping_ClientReferenceId"];
            labelResults: components["schemas"]["shipping_LabelResultList"];
            shipmentId: components["schemas"]["shipping_ShipmentId"];
        };
        /** @description The payload schema for the purchaseShipment operation. */
        shipping_PurchaseShipmentRequest: {
            clientReferenceId: components["schemas"]["shipping_ClientReferenceId"];
            containers: components["schemas"]["shipping_ContainerList"];
            labelSpecification: components["schemas"]["shipping_LabelSpecification"];
            serviceType: components["schemas"]["shipping_ServiceType"];
            /**
             * Format: date-time
             * @description The start date and time. This defaults to the current date and time.
             */
            shipDate?: string;
            shipFrom: components["schemas"]["shipping_Address"];
            shipTo: components["schemas"]["shipping_Address"];
        };
        /** @description The response schema for the purchaseShipment operation. */
        shipping_PurchaseShipmentResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_PurchaseShipmentResult"];
        };
        /** @description The payload schema for the purchaseShipment operation. */
        shipping_PurchaseShipmentResult: {
            labelResults: components["schemas"]["shipping_LabelResultList"];
            serviceRate: components["schemas"]["shipping_ServiceRate"];
            shipmentId: components["schemas"]["shipping_ShipmentId"];
        };
        /** @description The available rate that can be used to send the shipment */
        shipping_Rate: {
            billedWeight?: components["schemas"]["shipping_Weight"];
            /**
             * Format: date-time
             * @description The time after which the offering will expire.
             */
            expirationTime?: string;
            promise?: components["schemas"]["shipping_ShippingPromiseSet"];
            /** @description An identifier for the rate. */
            rateId?: string;
            serviceType?: components["schemas"]["shipping_ServiceType"];
            totalCharge?: components["schemas"]["shipping_Currency"];
        };
        /** @description An identifier for the rating. */
        shipping_RateId: string;
        /** @description A list of all the available rates that can be used to send the shipment. */
        shipping_RateList: components["schemas"]["shipping_Rate"][];
        /** @description The request schema for the retrieveShippingLabel operation. */
        shipping_RetrieveShippingLabelRequest: {
            labelSpecification: components["schemas"]["shipping_LabelSpecification"];
        };
        /** @description The response schema for the retrieveShippingLabel operation. */
        shipping_RetrieveShippingLabelResponse: {
            errors?: components["schemas"]["shipping_ErrorList"];
            payload?: components["schemas"]["shipping_RetrieveShippingLabelResult"];
        };
        /** @description The payload schema for the retrieveShippingLabel operation. */
        shipping_RetrieveShippingLabelResult: {
            labelSpecification: components["schemas"]["shipping_LabelSpecification"];
            labelStream: components["schemas"]["shipping_LabelStream"];
        };
        /** @description The specific rate for a shipping service, or null if no service available. */
        shipping_ServiceRate: {
            billableWeight: components["schemas"]["shipping_Weight"];
            promise: components["schemas"]["shipping_ShippingPromiseSet"];
            serviceType: components["schemas"]["shipping_ServiceType"];
            totalCharge: components["schemas"]["shipping_Currency"];
        };
        /** @description A list of service rates. */
        shipping_ServiceRateList: components["schemas"]["shipping_ServiceRate"][];
        /**
         * @description The type of shipping service that will be used for the service offering.
         * @enum {string}
         */
        shipping_ServiceType: "Amazon Shipping Ground" | "Amazon Shipping Standard" | "Amazon Shipping Premium";
        /** @description A list of service types that can be used to send the shipment. */
        shipping_ServiceTypeList: components["schemas"]["shipping_ServiceType"][];
        /** @description The shipment related data. */
        shipping_Shipment: {
            acceptedRate?: components["schemas"]["shipping_AcceptedRate"];
            clientReferenceId: components["schemas"]["shipping_ClientReferenceId"];
            containers: components["schemas"]["shipping_ContainerList"];
            shipFrom: components["schemas"]["shipping_Address"];
            shipmentId: components["schemas"]["shipping_ShipmentId"];
            shipper?: components["schemas"]["shipping_Party"];
            shipTo: components["schemas"]["shipping_Address"];
        };
        /** @description The unique shipment identifier. */
        shipping_ShipmentId: string;
        /** @description The promised delivery time and pickup time. */
        shipping_ShippingPromiseSet: {
            deliveryWindow?: components["schemas"]["shipping_TimeRange"];
            receiveWindow?: components["schemas"]["shipping_TimeRange"];
        };
        /** @description The state or region where the person, business or institution is located. */
        shipping_StateOrRegion: string;
        /** @description The time range. */
        shipping_TimeRange: {
            /**
             * Format: date-time
             * @description The end date and time. This must come after the value of start. This defaults to the next business day from the start.
             */
            end?: string;
            /**
             * Format: date-time
             * @description The start date and time. This defaults to the current date and time.
             */
            start?: string;
        };
        /** @description The tracking id generated to each shipment. It contains a series of letters or digits or both. */
        shipping_TrackingId: string;
        /** @description The payload schema for the getTrackingInformation operation. */
        shipping_TrackingInformation: {
            eventHistory: components["schemas"]["shipping_EventList"];
            promisedDeliveryDate: components["schemas"]["shipping_PromisedDeliveryDate"];
            summary: components["schemas"]["shipping_TrackingSummary"];
            trackingId: components["schemas"]["shipping_TrackingId"];
        };
        /** @description The tracking summary. */
        shipping_TrackingSummary: {
            /** @description The derived status based on the events in the eventHistory. */
            status?: string;
        };
        /** @description The weight. */
        shipping_Weight: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unit: "g" | "kg" | "oz" | "lb";
            /** @description The measurement value. */
            value: number;
        };
        /** @description Defines the accessibility details of the access point. */
        shippingV2_AccessibilityAttributes: {
            /** @description The approximate distance of access point from input postalCode's centroid. */
            distance?: string;
            /** @description The approximate (static) drive time from input postal code's centroid. */
            driveTime?: number;
        };
        /** @description Access point details */
        shippingV2_AccessPoint: {
            accessibilityAttributes?: components["schemas"]["shippingV2_AccessibilityAttributes"];
            accessPointId?: components["schemas"]["shippingV2_AccessPointId"];
            address?: components["schemas"]["shippingV2_Address"];
            /**
             * @description Assistance type enum for Access point i.e. STAFF_ASSISTED or SELF_ASSISTED
             * @enum {string}
             */
            assistanceType?: "STAFF_ASSISTED" | "SELF_ASSISTED";
            /** @description Exception operating hours for Access Point */
            exceptionOperatingHours?: components["schemas"]["shippingV2_ExceptionOperatingHours"][];
            /** @description Name of entity (store/hub etc) where this access point is located */
            name?: string;
            /** @description The score of access point, based on proximity to postal code and sorting preference. This can be used to sort access point results on shipper's end. */
            score?: string;
            standardOperatingHours?: components["schemas"]["shippingV2_DayOfWeekTimeMap"];
            /** @description Timezone of access point */
            timezone?: string;
            type?: components["schemas"]["shippingV2_AccessPointType"];
        };
        /** @description AccessPointDetails object */
        shippingV2_AccessPointDetails: {
            accessPointId?: components["schemas"]["shippingV2_AccessPointId"];
        };
        /** @description Unique identifier for the access point */
        shippingV2_AccessPointId: string;
        /** @description List of relevant Access points requested by shipper. These access points are sorted by proximity to postal code, and are limited to 40. We have internally defined a radius value to render relevant results. */
        shippingV2_AccessPointList: components["schemas"]["shippingV2_AccessPoint"][];
        /** @description Map of type of access point to list of access points */
        shippingV2_AccessPointsMap: {
            [key: string]: components["schemas"]["shippingV2_AccessPointList"];
        };
        /**
         * @description The type of access point, like counter (HELIX), lockers, etc.
         * @enum {string}
         */
        shippingV2_AccessPointType: "HELIX" | "CAMPUS_LOCKER" | "OMNI_LOCKER" | "ODIN_LOCKER" | "DOBBY_LOCKER" | "CORE_LOCKER" | "3P" | "CAMPUS_ROOM";
        /** @description Identifier for the seller's carrier account. */
        shippingV2_AccountId: string;
        /**
         * @description Account Status.
         * @enum {string}
         */
        shippingV2_AccountStatus: "ACTIVE" | "INACTIVE" | "PENDING" | "SUSPENDED";
        /**
         * @description Shipper Account Type.
         * @enum {string}
         */
        shippingV2_AccountType: "SHIPPER_ACCOUNT" | "SHIPPER_ACCOUNT_WITH_INVOICE" | "AMAZON_ACCOUNT";
        /** @description Active Account Details */
        shippingV2_ActiveAccount: {
            accountId?: components["schemas"]["shippingV2_AccountId"];
            carrierId?: components["schemas"]["shippingV2_CarrierId"];
        };
        /** @description A list of ActiveAccount */
        shippingV2_ActiveAccounts: components["schemas"]["shippingV2_ActiveAccount"][];
        /** @description Address notes to re-attempt delivery with. */
        shippingV2_AdditionalAddressNotes: string;
        /** @description The address. */
        shippingV2_Address: {
            /** @description The first line of the address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            city: components["schemas"]["shippingV2_City"];
            /** @description The name of the business or institution associated with the address. */
            companyName?: string;
            countryCode: components["schemas"]["shippingV2_CountryCode"];
            /** @description The email address of the contact associated with the address. */
            email?: string;
            geocode?: components["schemas"]["shippingV2_Geocode"];
            /** @description The name of the person, business or institution at the address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address, including the country calling code. */
            phoneNumber?: string;
            postalCode: components["schemas"]["shippingV2_PostalCode"];
            stateOrRegion: components["schemas"]["shippingV2_StateOrRegion"];
        };
        /** @description The carrier generated reverse identifier for a returned package in a purchased shipment. */
        shippingV2_AlternateLegTrackingId: string;
        /** @description Amazon order information. This is required if the shipment source channel is Amazon. */
        shippingV2_AmazonOrderDetails: {
            /** @description The Amazon order ID associated with the Amazon order fulfilled by this shipment. */
            orderId: string;
        };
        /** @description Amazon shipment information. */
        shippingV2_AmazonShipmentDetails: {
            /** @description This attribute is required only for a Direct Fulfillment shipment. This is the encrypted shipment ID. */
            shipmentId: string;
        };
        /** @description The value-added services available for purchase with a shipping service offering. */
        shippingV2_AvailableValueAddedServiceGroup: {
            /** @description The name of the value-added service group. */
            groupDescription: string;
            /** @description The type of the value-added service group. */
            groupId: string;
            /** @description When true, one or more of the value-added services listed must be specified. */
            isRequired: boolean;
            /** @description A list of optional value-added services available for purchase with a shipping service offering. */
            valueAddedServices?: components["schemas"]["shippingV2_ValueAddedService"][];
        };
        /** @description A list of value-added services available for a shipping service offering. */
        shippingV2_AvailableValueAddedServiceGroupList: components["schemas"]["shippingV2_AvailableValueAddedServiceGroup"][];
        /** @description Benefits that are included and excluded for each shipping offer. Benefits represents services provided by Amazon (eg. CLAIMS_PROTECTED, etc.) when sellers purchase shipping through Amazon. Benefit details will be made available for any shipment placed on or after January 1st 2024 00:00 UTC. */
        shippingV2_Benefits: {
            excludedBenefits: components["schemas"]["shippingV2_ExcludedBenefits"];
            includedBenefits: components["schemas"]["shippingV2_IncludedBenefits"];
        };
        /** @description Response schema for the cancelShipment operation. */
        shippingV2_CancelShipmentResponse: {
            payload?: components["schemas"]["shippingV2_CancelShipmentResult"];
        };
        /** @description The payload for the cancelShipment operation. */
        shippingV2_CancelShipmentResult: {
            [key: string]: unknown;
        };
        /** @description Carrier Related Info */
        shippingV2_Carrier: {
            id: components["schemas"]["shippingV2_CarrierId"];
            name: components["schemas"]["shippingV2_CarrierName"];
        };
        /** @description Carrier Account details used to fetch rates. */
        shippingV2_CarrierAccount: {
            carrierAccountId: components["schemas"]["shippingV2_AccountId"];
            carrierId: components["schemas"]["shippingV2_CarrierId"];
        };
        /** @description Attribute Properties required by carrier */
        shippingV2_CarrierAccountAttribute: {
            /** @description Attribute Name . */
            attributeName?: string;
            /** @description Property Group. */
            propertyGroup?: string;
            /** @description Value . */
            value?: string;
        };
        /** @description A list of all attributes required by the carrier in order to successfully link the merchant's account */
        shippingV2_CarrierAccountAttributes: components["schemas"]["shippingV2_CarrierAccountAttribute"][];
        /** @description Info About CarrierAccountInput */
        shippingV2_CarrierAccountInput: {
            /** @description descriptionLocalizationKey value . */
            descriptionLocalizationKey?: string;
            /** @description groupName value . */
            groupName?: string;
            inputType?: components["schemas"]["shippingV2_InputType"];
            /** @description is value is Confidential . */
            isConfidential?: boolean;
            /** @description is value is hidden . */
            isHidden?: boolean;
            /** @description mandatory or not  value . */
            isMandatory?: boolean;
            /** @description name value . */
            name?: string;
            validationMetadata?: components["schemas"]["shippingV2_ValidationMetadataList"];
        };
        /** @description A list of CarrierAccountInput */
        shippingV2_CarrierAccountInputsList: components["schemas"]["shippingV2_CarrierAccountInput"][];
        /** @description A list of CarrierAccounts */
        shippingV2_CarrierAccounts: components["schemas"]["shippingV2_CarrierAccount"][];
        /** @description CarrierAccountType  associated with account. */
        shippingV2_CarrierAccountType: string;
        /** @description The carrier identifier for the offering, provided by the carrier. */
        shippingV2_CarrierId: string;
        /** @description The carrier name for the offering. */
        shippingV2_CarrierName: string;
        /** @description Shipment source channel related information. */
        shippingV2_ChannelDetails: {
            amazonOrderDetails?: components["schemas"]["shippingV2_AmazonOrderDetails"];
            amazonShipmentDetails?: components["schemas"]["shippingV2_AmazonShipmentDetails"];
            channelType: components["schemas"]["shippingV2_ChannelType"];
        };
        /**
         * @description The shipment source channel type.
         * @enum {string}
         */
        shippingV2_ChannelType: "AMAZON" | "EXTERNAL";
        /** @description The type and amount of a charge applied on a package. */
        shippingV2_ChargeComponent: {
            amount?: components["schemas"]["shippingV2_Currency"];
            /**
             * @description The type of charge.
             * @enum {string}
             */
            chargeType?: "TAX" | "DISCOUNT";
        };
        /** @description A list of charges based on the shipping service charges applied on a package. */
        shippingV2_ChargeList: components["schemas"]["shippingV2_ChargeComponent"][];
        /** @description The city or town where the person, business or institution is located. */
        shippingV2_City: string;
        /** @description The claim identifier originally returned by the createClaim operation. */
        shippingV2_ClaimId: string;
        /** @description A list of proof URLs for a claim. Basic URL validation will happen for each URLs present in the list */
        shippingV2_ClaimProofURLs: string[];
        /**
         * @description The reason for which shipper is filing the claim for a particular shipment.
         * @enum {string}
         */
        shippingV2_ClaimReason: "LOST_IN_TRANSIT" | "DAMAGED_IN_TRANSIT" | "DELIVERED_NOT_RECEIVED" | "ITEM_MISSING_SWITCHEROO" | "COD_ABUSE";
        /** @description Client Reference Details */
        shippingV2_ClientReferenceDetail: {
            /** @description The Client Reference Id. */
            clientReferenceId: string;
            /**
             * @description Client Reference type.
             * @enum {string}
             */
            clientReferenceType: "IntegratorShipperId" | "IntegratorMerchantId";
        };
        /** @description Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail */
        shippingV2_ClientReferenceDetails: components["schemas"]["shippingV2_ClientReferenceDetail"][];
        /** @description Collection Form Id for Reprint . */
        shippingV2_CollectionFormId: string;
        /** @description Active Account Details */
        shippingV2_CollectionFormsHistoryRecord: {
            carrierName?: components["schemas"]["shippingV2_CarrierName"];
            collectionFormId?: components["schemas"]["shippingV2_CollectionFormId"];
            /**
             * Format: dateTime
             * @description Creation Time for this account.
             */
            creationDate?: string;
            generationStatus?: components["schemas"]["shippingV2_GenerationStatus"];
            shipFromAddress?: components["schemas"]["shippingV2_Address"];
        };
        /** @description A list of CollectionFormsHistoryRecord */
        shippingV2_CollectionFormsHistoryRecordList: components["schemas"]["shippingV2_CollectionFormsHistoryRecord"][];
        /** @description Collection Form Document Details */
        shippingV2_CollectionsFormDocument: {
            /** @description Base64 document Value of Collection. */
            base64EncodedContent?: string;
            /**
             * Format: application/pdf
             * @description Collection Document format is PDF.
             */
            documentFormat?: string;
        };
        /** @description The amount to collect on delivery. */
        shippingV2_CollectOnDelivery: {
            amount: components["schemas"]["shippingV2_Currency"];
        };
        /** @description A Base64 encoded string of the file contents. */
        shippingV2_Contents: string;
        /** @description The two digit country code. Follows ISO 3166-1 alpha-2 format. */
        shippingV2_CountryCode: string;
        /** @description The request schema for the CreateClaim operation */
        shippingV2_CreateClaimRequest: {
            claimReason: components["schemas"]["shippingV2_ClaimReason"];
            declaredValue?: components["schemas"]["shippingV2_Currency"];
            /** @description Applicable for only On Amazon shipments to identify if replacement was sent */
            isReplacementPackageSent?: boolean;
            proofs?: components["schemas"]["shippingV2_ClaimProofURLs"];
            settlementType: components["schemas"]["shippingV2_SettlementType"];
            trackingId: components["schemas"]["shippingV2_TrackingId"];
        };
        /** @description The response schema for the createClaim operation. */
        shippingV2_CreateClaimResponse: {
            claimId?: components["schemas"]["shippingV2_ClaimId"];
        };
        /** @description The monetary value in the currency indicated, in ISO 4217 standard format. */
        shippingV2_Currency: {
            /** @description The ISO 4217 format 3-character currency code. */
            unit: string;
            /** @description The monetary value. */
            value: number;
        };
        /** @description Details related to any dangerous goods/items that are being shipped. */
        shippingV2_DangerousGoodsDetails: {
            /**
             * @description The specific packaging group of the item being shipped.
             * @enum {string}
             */
            packingGroup?: "I" | "II" | "III";
            /**
             * @description The specific packing instruction of the item being shipped.
             * @enum {string}
             */
            packingInstruction?: "PI965_SECTION_IA" | "PI965_SECTION_IB" | "PI965_SECTION_II" | "PI966_SECTION_I" | "PI966_SECTION_II" | "PI967_SECTION_I" | "PI967_SECTION_II" | "PI968_SECTION_IA" | "PI968_SECTION_IB" | "PI969_SECTION_I" | "PI969_SECTION_II" | "PI970_SECTION_I" | "PI970_SECTION_II";
            /** @description The specific regulatory class  of the item being shipped. */
            transportationRegulatoryClass?: string;
            /** @description The specific UNID of the item being shipped. */
            unitedNationsRegulatoryId?: string;
        };
        /** @description Date Range for query the results. */
        shippingV2_DateRange: {
            /**
             * Format: dateTime
             * @description end date for query.
             */
            endDate?: string;
            /**
             * Format: dateTime
             * @description Start Date for query .
             */
            startDate?: string;
        };
        /** @description Map of day of the week to operating hours of that day */
        shippingV2_DayOfWeekTimeMap: {
            [key: string]: components["schemas"]["shippingV2_OperatingHours"];
        };
        /**
         * @description A list of codes used to provide additional shipment information.
         * @enum {string}
         */
        shippingV2_DetailCodes: "BusinessClosed" | "CustomerUnavailable" | "PaymentNotReady" | "OtpNotAvailable" | "DeliveryAttempted" | "UnableToAccess" | "UnableToContactRecipient" | "DeliveredToBehindWheelieBin" | "DeliveredToPorch" | "DeliveredToGarage" | "DeliveredToGarden" | "DeliveredToGreenhouse" | "DeliveredToMailSlot" | "DeliveredToMailRoom" | "DeliveredToNeighbor" | "DeliveredToRearDoor" | "DeliveredToReceptionist" | "DeliveredToShed" | "DeliveredWithOTP" | "Signed" | "Damaged" | "IncorrectItems" | "NotRequired" | "Rejected" | "RejectedByRecipientWithVerification" | "CancelledByRecipient" | "AddressNotFound" | "HazmatShipment" | "Undeliverable" | "ArrivedAtLocalFacility";
        /** @description A set of measurements for a three-dimensional object. */
        shippingV2_Dimensions: {
            /** @description The height of the package. */
            height: number;
            /** @description The length of the package. */
            length: number;
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unit: "INCH" | "CENTIMETER";
            /** @description The width of the package. */
            width: number;
        };
        /** @description Item identifiers for an item in a direct fulfillment shipment. */
        shippingV2_DirectFulfillmentItemIdentifiers: {
            /** @description A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated for direct fulfillment multi-piece shipments. It is required if a vendor wants to change the configuration of the packages in which the purchase order is shipped. */
            lineItemID: string;
            /** @description A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated if a single line item has multiple pieces. Defaults to 1. */
            pieceNumber?: string;
        };
        /** @description The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored. */
        shippingV2_DirectPurchaseRequest: {
            channelDetails: components["schemas"]["shippingV2_ChannelDetails"];
            labelSpecifications?: components["schemas"]["shippingV2_RequestedDocumentSpecification"];
            packages?: components["schemas"]["shippingV2_PackageList"];
            returnTo?: components["schemas"]["shippingV2_Address"];
            shipFrom?: components["schemas"]["shippingV2_Address"];
            shipTo?: components["schemas"]["shippingV2_Address"];
        };
        /** @description The response schema for the directPurchaseShipment operation. */
        shippingV2_DirectPurchaseResponse: {
            payload?: components["schemas"]["shippingV2_DirectPurchaseResult"];
        };
        /** @description The payload for the directPurchaseShipment operation. */
        shippingV2_DirectPurchaseResult: {
            packageDocumentDetailList?: components["schemas"]["shippingV2_PackageDocumentDetailList"];
            shipmentId: components["schemas"]["shippingV2_ShipmentId"];
        };
        /**
         * @description The file format of the document.
         * @enum {string}
         */
        shippingV2_DocumentFormat: "PDF" | "PNG" | "ZPL";
        /** @description The size dimensions of the label. */
        shippingV2_DocumentSize: {
            /** @description The length of the document measured in the units specified. */
            length: number;
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unit: "INCH" | "CENTIMETER";
            /** @description The width of the document measured in the units specified. */
            width: number;
        };
        /**
         * @description The type of shipping document.
         * @enum {string}
         */
        shippingV2_DocumentType: "PACKSLIP" | "LABEL" | "RECEIPT" | "CUSTOM_FORM";
        /** @description The dots per inch (DPI) value used in printing. This value represents a measure of the resolution of the document. */
        shippingV2_Dpi: number;
        /** @description Error response returned when the request is unsuccessful. */
        shippingV2_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        shippingV2_ErrorList: {
            /** @description Array of Errors */
            errors: components["schemas"]["shippingV2_Error"][];
        };
        /** @description A tracking event. */
        shippingV2_Event: {
            eventCode: components["schemas"]["shippingV2_EventCode"];
            /**
             * Format: date-time
             * @description The ISO 8601 formatted timestamp of the event.
             */
            eventTime: string;
            location?: components["schemas"]["shippingV2_Location"];
            shipmentType?: components["schemas"]["shippingV2_ShipmentType"];
        };
        /**
         * @description The tracking event type.
         * @enum {string}
         */
        shippingV2_EventCode: "ReadyForReceive" | "PickupDone" | "Delivered" | "Departed" | "DeliveryAttempted" | "Lost" | "OutForDelivery" | "ArrivedAtCarrierFacility" | "Rejected" | "Undeliverable" | "PickupCancelled" | "ReturnInitiated" | "AvailableForPickup" | "RecipientRequestedAlternateDeliveryTiming";
        /** @description Defines exceptions to standard operating hours for certain date ranges. */
        shippingV2_ExceptionOperatingHours: {
            dateRange?: components["schemas"]["shippingV2_DateRange"];
            operatingHours?: components["schemas"]["shippingV2_OperatingHours"];
        };
        /** @description Object representing a benefit that is excluded for a shipping offer or rate. */
        shippingV2_ExcludedBenefit: {
            /** @description benefit */
            benefit: string;
            reasonCodes?: components["schemas"]["shippingV2_ExcludedBenefitReasonCodes"];
        };
        /** @description List of reasons (eg. LATE_DELIVERY_RISK, etc.) indicating why a benefit is excluded for a shipping offer. */
        shippingV2_ExcludedBenefitReasonCodes: string[];
        /** @description A list of excluded benefit. Refer to the ExcludeBenefit object for further documentation */
        shippingV2_ExcludedBenefits: components["schemas"]["shippingV2_ExcludedBenefit"][];
        /** @description The request schema Call to generate the collection form. */
        shippingV2_GenerateCollectionFormRequest: {
            carrierId: components["schemas"]["shippingV2_CarrierId"];
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
            shipFromAddress?: components["schemas"]["shippingV2_Address"];
        };
        /** @description The Response  for the GenerateCollectionFormResponse operation. */
        shippingV2_GenerateCollectionFormResponse: {
            collectionsFormDocument?: components["schemas"]["shippingV2_CollectionsFormDocument"];
        };
        /**
         * @description Generation Status.
         * @enum {string}
         */
        shippingV2_GenerationStatus: "Completed" | "InProgress";
        /** @description Defines the latitude and longitude of the access point. */
        shippingV2_Geocode: {
            /** @description The latitude of access point. */
            latitude?: string;
            /** @description The longitude of access point. */
            longitude?: string;
        };
        /** @description The response schema for the GetAccessPoints operation. */
        shippingV2_GetAccessPointsResponse: {
            payload?: components["schemas"]["shippingV2_GetAccessPointsResult"];
        };
        /** @description The payload for the GetAccessPoints API. */
        shippingV2_GetAccessPointsResult: {
            accessPointsMap: components["schemas"]["shippingV2_AccessPointsMap"];
        };
        /** @description The response schema for the getAdditionalInputs operation. */
        shippingV2_GetAdditionalInputsResponse: {
            payload?: components["schemas"]["shippingV2_GetAdditionalInputsResult"];
        };
        /** @description The JSON schema to use to provide additional inputs when required to purchase a shipping offering. */
        shippingV2_GetAdditionalInputsResult: {
            [key: string]: unknown;
        };
        /** @description The Response  for the GetCarrierAccountFormInputsResponse operation. */
        shippingV2_GetCarrierAccountFormInputsResponse: {
            linkableCarriersList?: components["schemas"]["shippingV2_LinkableCarriersList"];
        };
        /** @description The request schema for the GetCarrierAccounts operation. */
        shippingV2_GetCarrierAccountsRequest: {
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
        };
        /** @description The Response  for the GetCarrierAccountsResponse operation. */
        shippingV2_GetCarrierAccountsResponse: {
            activeAccounts: components["schemas"]["shippingV2_ActiveAccounts"];
        };
        /** @description The request schema to get query collections form history API . */
        shippingV2_GetCollectionFormHistoryRequest: {
            carrierId?: components["schemas"]["shippingV2_CarrierId"];
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
            dateRange?: components["schemas"]["shippingV2_DateRange"];
            /** @description max Number of Results for query . */
            maxResults?: number;
            shipFromAddress?: components["schemas"]["shippingV2_Address"];
        };
        /** @description The Response  for the GetCollectionFormHistoryResponse operation. */
        shippingV2_GetCollectionFormHistoryResponse: {
            collectionFormsHistoryRecordList?: components["schemas"]["shippingV2_CollectionFormsHistoryRecordList"];
            /** @description Last Refereshed Date of collection */
            lastRefreshedDate?: string;
        };
        /** @description The Response  for the GetCollectionFormResponse operation. */
        shippingV2_GetCollectionFormResponse: {
            collectionsFormDocument?: components["schemas"]["shippingV2_CollectionsFormDocument"];
        };
        /** @description The request schema for the getRates operation. When the channelType is Amazon, the shipTo address is not required and will be ignored. */
        shippingV2_GetRatesRequest: {
            carrierAccounts?: components["schemas"]["shippingV2_CarrierAccounts"];
            channelDetails: components["schemas"]["shippingV2_ChannelDetails"];
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
            destinationAccessPointDetails?: components["schemas"]["shippingV2_AccessPointDetails"];
            packages: components["schemas"]["shippingV2_PackageList"];
            returnTo?: components["schemas"]["shippingV2_Address"];
            /**
             * Format: date-time
             * @description The ship date and time (the requested pickup). This defaults to the current date and time.
             */
            shipDate?: string;
            shipFrom: components["schemas"]["shippingV2_Address"];
            shipmentType?: components["schemas"]["shippingV2_ShipmentType"];
            shipperInstruction?: components["schemas"]["shippingV2_ShipperInstruction"];
            shipTo?: components["schemas"]["shippingV2_Address"];
            taxDetails?: components["schemas"]["shippingV2_TaxDetailList"];
            valueAddedServices?: components["schemas"]["shippingV2_ValueAddedServiceDetails"];
        };
        /** @description The response schema for the getRates operation. */
        shippingV2_GetRatesResponse: {
            payload?: components["schemas"]["shippingV2_GetRatesResult"];
        };
        /** @description The payload for the getRates operation. */
        shippingV2_GetRatesResult: {
            ineligibleRates?: components["schemas"]["shippingV2_IneligibleRateList"];
            rates: components["schemas"]["shippingV2_RateList"];
            requestToken: components["schemas"]["shippingV2_RequestToken"];
        };
        /** @description The response schema for the the getShipmentDocuments operation. */
        shippingV2_GetShipmentDocumentsResponse: {
            payload?: components["schemas"]["shippingV2_GetShipmentDocumentsResult"];
        };
        /** @description The payload for the getShipmentDocuments operation. */
        shippingV2_GetShipmentDocumentsResult: {
            benefits?: components["schemas"]["shippingV2_Benefits"];
            packageDocumentDetail: components["schemas"]["shippingV2_PackageDocumentDetail"];
            shipmentId: components["schemas"]["shippingV2_ShipmentId"];
        };
        /** @description The response schema for the getTracking operation. */
        shippingV2_GetTrackingResponse: {
            payload?: components["schemas"]["shippingV2_GetTrackingResult"];
        };
        /** @description The payload for the getTracking operation. */
        shippingV2_GetTrackingResult: {
            alternateLegTrackingId: components["schemas"]["shippingV2_AlternateLegTrackingId"];
            /** @description A list of tracking events. */
            eventHistory: components["schemas"]["shippingV2_Event"][];
            /**
             * Format: date-time
             * @description The date and time by which the shipment is promised to be delivered.
             */
            promisedDeliveryDate: string;
            summary: components["schemas"]["shippingV2_TrackingSummary"];
            trackingId: components["schemas"]["shippingV2_TrackingId"];
        };
        /** @description The request schema for the GetUnmanifestedShipmentsRequest operation. */
        shippingV2_GetUnmanifestedShipmentsRequest: {
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
        };
        /** @description The Response  for the GetUnmanifestedShipmentsResponse operation. */
        shippingV2_GetUnmanifestedShipmentsResponse: {
            unmanifestedCarrierInformationList?: components["schemas"]["shippingV2_UnmanifestedCarrierInformationList"];
        };
        /** @description The seller owning the goods before handing them over to the carrier */
        shippingV2_GoodsOwner: {
            merchantId: components["schemas"]["shippingV2_MerchantId"];
        };
        /** @description A list of included benefits. */
        shippingV2_IncludedBenefits: string[];
        /** @description The reason why a shipping service offering is ineligible. */
        shippingV2_IneligibilityReason: {
            code: components["schemas"]["shippingV2_IneligibilityReasonCode"];
            /** @description The ineligibility reason. */
            message: string;
        };
        /**
         * @description Reasons that make a shipment service offering ineligible.
         * @enum {string}
         */
        shippingV2_IneligibilityReasonCode: "NO_COVERAGE" | "PICKUP_SLOT_RESTRICTION" | "UNSUPPORTED_VAS" | "VAS_COMBINATION_RESTRICTION" | "SIZE_RESTRICTIONS" | "WEIGHT_RESTRICTIONS" | "LATE_DELIVERY" | "PROGRAM_CONSTRAINTS" | "TERMS_AND_CONDITIONS_NOT_ACCEPTED" | "UNKNOWN";
        /** @description Detailed information for an ineligible shipping service offering. */
        shippingV2_IneligibleRate: {
            carrierId: components["schemas"]["shippingV2_CarrierId"];
            carrierName: components["schemas"]["shippingV2_CarrierName"];
            /** @description A list of reasons why a shipping service offering is ineligible. */
            ineligibilityReasons: components["schemas"]["shippingV2_IneligibilityReason"][];
            serviceId: components["schemas"]["shippingV2_ServiceId"];
            serviceName: components["schemas"]["shippingV2_ServiceName"];
        };
        /** @description A list of ineligible shipping service offerings. */
        shippingV2_IneligibleRateList: components["schemas"]["shippingV2_IneligibleRate"][];
        /**
         * @description Type of Input.
         * @enum {string}
         */
        shippingV2_InputType: "TEXTBOX" | "PASSWORD";
        /** @description The invoice details for charges associated with the goods in the package. Only applies to certain regions. */
        shippingV2_InvoiceDetails: {
            /**
             * Format: date-time
             * @description The invoice date of the item in ISO 8061 format.
             */
            invoiceDate?: string;
            /** @description The invoice number of the item. */
            invoiceNumber?: string;
        };
        /** @description An item in a package. */
        shippingV2_Item: {
            dangerousGoodsDetails?: components["schemas"]["shippingV2_DangerousGoodsDetails"];
            /** @description The product description of the item. */
            description?: string;
            directFulfillmentItemIdentifiers?: components["schemas"]["shippingV2_DirectFulfillmentItemIdentifiers"];
            invoiceDetails?: components["schemas"]["shippingV2_InvoiceDetails"];
            /** @description When true, the item qualifies as hazardous materials (hazmat). Defaults to false. */
            isHazmat?: boolean;
            /** @description A unique identifier for an item provided by the client. */
            itemIdentifier?: string;
            itemValue?: components["schemas"]["shippingV2_Currency"];
            liquidVolume?: components["schemas"]["shippingV2_LiquidVolume"];
            /** @description The product type of the item. */
            productType?: string;
            /** @description The number of units. This value is required. */
            quantity: number;
            /** @description A list of unique serial numbers in an Amazon package that can be used to guarantee non-fraudulent items. The number of serial numbers in the list must be less than or equal to the quantity of items being shipped. Only applicable when channel source is Amazon. */
            serialNumbers?: string[];
            weight?: components["schemas"]["shippingV2_Weight"];
        };
        /** @description A list of items. */
        shippingV2_ItemList: components["schemas"]["shippingV2_Item"][];
        /**
         * @description Enumerates the attributes supported to be printed on a shipping label. The values for these attributes are retrieved from GetRates/OneClickShipment request
         * @enum {string}
         */
        shippingV2_LabelAttribute: "PACKAGE_CLIENT_REFERENCE_ID" | "SELLER_DISPLAY_NAME" | "COLLECT_ON_DELIVERY_AMOUNT";
        /** @description Info About Linkable Account Type */
        shippingV2_LinkableAccountType: {
            accountType?: components["schemas"]["shippingV2_AccountType"];
            carrierAccountInputs?: components["schemas"]["shippingV2_CarrierAccountInputsList"];
        };
        /** @description A list of LinkableAccountType */
        shippingV2_LinkableAccountTypeList: components["schemas"]["shippingV2_LinkableAccountType"][];
        /** @description Info About Linkable Carrier */
        shippingV2_LinkableCarrier: {
            carrierId?: components["schemas"]["shippingV2_CarrierId"];
            linkableAccountTypes?: components["schemas"]["shippingV2_LinkableAccountTypeList"];
        };
        /** @description A list of LinkableCarrier */
        shippingV2_LinkableCarriersList: components["schemas"]["shippingV2_LinkableCarrier"][];
        /** @description The request schema for verify and add the merchant's account with a certain carrier. */
        shippingV2_LinkCarrierAccountRequest: {
            carrierAccountAttributes: components["schemas"]["shippingV2_CarrierAccountAttributes"];
            carrierAccountType: components["schemas"]["shippingV2_CarrierAccountType"];
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
            encryptedCarrierAccountAttributes?: components["schemas"]["shippingV2_CarrierAccountAttributes"];
        };
        /** @description The Response  for the LinkCarrierAccount operation. */
        shippingV2_LinkCarrierAccountResponse: {
            accountId?: components["schemas"]["shippingV2_AccountId"];
            registrationStatus?: components["schemas"]["shippingV2_AccountStatus"];
        };
        /** @description Liquid Volume. */
        shippingV2_LiquidVolume: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unit: "ML" | "L" | "FL_OZ" | "GAL" | "PT" | "QT" | "C";
            /** @description The measurement value. */
            value: number;
        };
        /** @description The location where the person, business or institution is located. */
        shippingV2_Location: {
            city?: components["schemas"]["shippingV2_City"];
            countryCode?: components["schemas"]["shippingV2_CountryCode"];
            postalCode?: components["schemas"]["shippingV2_PostalCode"];
            stateOrRegion?: components["schemas"]["shippingV2_StateOrRegion"];
        };
        /** @description merchant Id of provided merchant  */
        shippingV2_MerchantId: string;
        /**
         * @description The type of NDR action shipper wants to take for a particular shipment.
         * @enum {string}
         */
        shippingV2_NdrAction: "RESCHEDULE" | "REATTEMPT" | "RTO";
        /** @description Additional information required for the NDR action that has been filed. If the NDR Action is RESCHEDULE, rescheduleDate is a required field. Otherwise, if the NDR Action is REATTEMPT, additionalAddressNotes is a required field.  */
        shippingV2_NdrRequestData: {
            additionalAddressNotes?: components["schemas"]["shippingV2_AdditionalAddressNotes"];
            /**
             * Format: date-time
             * @description The date on which the Seller wants to reschedule shipment delivery, in ISO-8601 date/time format
             * @example 2023-12-12T05:24:00.00Z
             */
            rescheduleDate?: string;
        };
        /** @description When true, files should be stitched together. Otherwise, files should be returned separately. Defaults to false. */
        shippingV2_NeedFileJoining: boolean;
        /** @description The request schema for the OneClickShipment operation. When the channelType is not Amazon, shipTo is required and when channelType is Amazon shipTo is ignored. */
        shippingV2_OneClickShipmentRequest: {
            channelDetails: components["schemas"]["shippingV2_ChannelDetails"];
            destinationAccessPointDetails?: components["schemas"]["shippingV2_AccessPointDetails"];
            goodsOwner?: components["schemas"]["shippingV2_GoodsOwner"];
            labelSpecifications: components["schemas"]["shippingV2_RequestedDocumentSpecification"];
            packages: components["schemas"]["shippingV2_PackageList"];
            returnTo?: components["schemas"]["shippingV2_Address"];
            serviceSelection: components["schemas"]["shippingV2_ServiceSelection"];
            /**
             * Format: date-time
             * @description The ship date and time (the requested pickup). This defaults to the current date and time.
             */
            shipDate?: string;
            shipFrom: components["schemas"]["shippingV2_Address"];
            shipperInstruction?: components["schemas"]["shippingV2_ShipperInstruction"];
            shipTo?: components["schemas"]["shippingV2_Address"];
            taxDetails?: components["schemas"]["shippingV2_TaxDetailList"];
            valueAddedServicesDetails?: components["schemas"]["shippingV2_OneClickShipmentValueAddedServiceDetails"];
        };
        /** @description The response schema for the OneClickShipment operation. */
        shippingV2_OneClickShipmentResponse: {
            payload?: components["schemas"]["shippingV2_OneClickShipmentResult"];
        };
        /** @description The payload for the OneClickShipment API. */
        shippingV2_OneClickShipmentResult: {
            carrier: components["schemas"]["shippingV2_Carrier"];
            packageDocumentDetails: components["schemas"]["shippingV2_PackageDocumentDetailList"];
            promise: components["schemas"]["shippingV2_Promise"];
            service: components["schemas"]["shippingV2_Service"];
            shipmentId: components["schemas"]["shippingV2_ShipmentId"];
            totalCharge: components["schemas"]["shippingV2_Currency"];
        };
        /** @description A value-added service to be applied to a shipping service purchase. */
        shippingV2_OneClickShipmentValueAddedService: {
            amount?: components["schemas"]["shippingV2_Currency"];
            /** @description The identifier of the selected value-added service. */
            id: string;
        };
        /** @description The value-added services to be added to a shipping service purchase. */
        shippingV2_OneClickShipmentValueAddedServiceDetails: components["schemas"]["shippingV2_OneClickShipmentValueAddedService"][];
        /** @description The hours in which the access point shall remain operational */
        shippingV2_OperatingHours: {
            closingTime?: components["schemas"]["shippingV2_TimeOfDay"];
            /** @description midDayClosures operating hours array */
            midDayClosures?: components["schemas"]["shippingV2_TimeOfDay"][];
            openingTime?: components["schemas"]["shippingV2_TimeOfDay"];
        };
        /** @description A package to be shipped through a shipping service offering. */
        shippingV2_Package: {
            charges?: components["schemas"]["shippingV2_ChargeList"];
            dimensions: components["schemas"]["shippingV2_Dimensions"];
            insuredValue: components["schemas"]["shippingV2_Currency"];
            /** @description When true, the package contains hazardous materials. Defaults to false. */
            isHazmat?: boolean;
            items: components["schemas"]["shippingV2_ItemList"];
            packageClientReferenceId: components["schemas"]["shippingV2_PackageClientReferenceId"];
            /** @description The seller name displayed on the label. */
            sellerDisplayName?: string;
            weight: components["schemas"]["shippingV2_Weight"];
        };
        /** @description A client provided unique identifier for a package being shipped. This value should be saved by the client to pass as a parameter to the getShipmentDocuments operation. */
        shippingV2_PackageClientReferenceId: string;
        /** @description A document related to a package. */
        shippingV2_PackageDocument: {
            contents: components["schemas"]["shippingV2_Contents"];
            format: components["schemas"]["shippingV2_DocumentFormat"];
            type: components["schemas"]["shippingV2_DocumentType"];
        };
        /** @description The post-purchase details of a package that will be shipped using a shipping service. */
        shippingV2_PackageDocumentDetail: {
            packageClientReferenceId: components["schemas"]["shippingV2_PackageClientReferenceId"];
            packageDocuments: components["schemas"]["shippingV2_PackageDocumentList"];
            trackingId?: components["schemas"]["shippingV2_TrackingId"];
        };
        /** @description A list of post-purchase details about a package that will be shipped using a shipping service. */
        shippingV2_PackageDocumentDetailList: components["schemas"]["shippingV2_PackageDocumentDetail"][];
        /** @description A list of documents related to a package. */
        shippingV2_PackageDocumentList: components["schemas"]["shippingV2_PackageDocument"][];
        /** @description A list of packages to be shipped through a shipping service offering. */
        shippingV2_PackageList: components["schemas"]["shippingV2_Package"][];
        /** @description Indicates the position of the label on the paper. Should be the same value as returned in getRates response. */
        shippingV2_PageLayout: string;
        /**
         * @description Payment type of the purchase.
         * @enum {string}
         */
        shippingV2_PaymentType: "PAY_THROUGH_AMAZON" | "PAY_DIRECT_TO_CARRIER";
        /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
        shippingV2_PostalCode: string;
        /** @description The format options available for a label. */
        shippingV2_PrintOption: {
            /** @description A list of the supported documented details. */
            supportedDocumentDetails: components["schemas"]["shippingV2_SupportedDocumentDetail"][];
            /** @description A list of the supported DPI options for a document. */
            supportedDPIs?: components["schemas"]["shippingV2_Dpi"][];
            /** @description A list of the supported needFileJoining boolean values for a document. */
            supportedFileJoiningOptions: components["schemas"]["shippingV2_NeedFileJoining"][];
            /** @description A list of the supported page layout options for a document. */
            supportedPageLayouts: components["schemas"]["shippingV2_PageLayout"][];
        };
        /** @description A list of the format options for a label. */
        shippingV2_PrintOptionList: components["schemas"]["shippingV2_PrintOption"][];
        /** @description The time windows promised for pickup and delivery events. */
        shippingV2_Promise: {
            deliveryWindow?: components["schemas"]["shippingV2_TimeWindow"];
            pickupWindow?: components["schemas"]["shippingV2_TimeWindow"];
        };
        /** @description The request schema for the purchaseShipment operation. */
        shippingV2_PurchaseShipmentRequest: {
            /** @description The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.
             *
             *     Additional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation. */
            additionalInputs?: {
                [key: string]: unknown;
            };
            rateId: components["schemas"]["shippingV2_RateId"];
            requestedDocumentSpecification: components["schemas"]["shippingV2_RequestedDocumentSpecification"];
            requestedValueAddedServices?: components["schemas"]["shippingV2_RequestedValueAddedServiceList"];
            requestToken: components["schemas"]["shippingV2_RequestToken"];
        };
        /** @description The response schema for the purchaseShipment operation. */
        shippingV2_PurchaseShipmentResponse: {
            payload?: components["schemas"]["shippingV2_PurchaseShipmentResult"];
        };
        /** @description The payload for the purchaseShipment operation. */
        shippingV2_PurchaseShipmentResult: {
            benefits?: components["schemas"]["shippingV2_Benefits"];
            packageDocumentDetails: components["schemas"]["shippingV2_PackageDocumentDetailList"];
            promise: components["schemas"]["shippingV2_Promise"];
            shipmentId: components["schemas"]["shippingV2_ShipmentId"];
        };
        /** @description The details of a shipping service offering. */
        shippingV2_Rate: {
            availableValueAddedServiceGroups?: components["schemas"]["shippingV2_AvailableValueAddedServiceGroupList"];
            benefits?: components["schemas"]["shippingV2_Benefits"];
            billedWeight?: components["schemas"]["shippingV2_Weight"];
            carrierId: components["schemas"]["shippingV2_CarrierId"];
            carrierName: components["schemas"]["shippingV2_CarrierName"];
            paymentType?: components["schemas"]["shippingV2_PaymentType"];
            promise: components["schemas"]["shippingV2_Promise"];
            rateId: components["schemas"]["shippingV2_RateId"];
            rateItemList?: components["schemas"]["shippingV2_RateItemList"];
            /** @description When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation. */
            requiresAdditionalInputs: boolean;
            serviceId: components["schemas"]["shippingV2_ServiceId"];
            serviceName: components["schemas"]["shippingV2_ServiceName"];
            supportedDocumentSpecifications: components["schemas"]["shippingV2_SupportedDocumentSpecificationList"];
            totalCharge: components["schemas"]["shippingV2_Currency"];
        };
        /** @description An identifier for the rate (shipment offering) provided by a shipping service provider. */
        shippingV2_RateId: string;
        /** @description Rate Item for shipping (base cost, transaction fee, confirmation, insurance, etc.) Data source definition:  */
        shippingV2_RateItem: {
            rateItemCharge?: components["schemas"]["shippingV2_Currency"];
            rateItemID?: components["schemas"]["shippingV2_RateItemID"];
            /** @description Used for the localization. */
            rateItemNameLocalization?: string;
            rateItemType?: components["schemas"]["shippingV2_RateItemType"];
        };
        /**
         * @description Unique ID for the rateItem.
         * @enum {string}
         */
        shippingV2_RateItemID: "BASE_RATE" | "TRANSACTION_FEE" | "ADULT_SIGNATURE_CONFIRMATION" | "SIGNATURE_CONFIRMATION" | "NO_CONFIRMATION" | "WAIVE_SIGNATURE" | "IMPLIED_LIABILITY" | "HIDDEN_POSTAGE" | "DECLARED_VALUE" | "SUNDAY_HOLIDAY_DELIVERY" | "DELIVERY_CONFIRMATION" | "IMPORT_DUTY_CHARGE" | "VAT" | "NO_SATURDAY_DELIVERY" | "INSURANCE" | "COD" | "FUEL_SURCHARGE" | "INSPECTION_CHARGE" | "DELIVERY_AREA_SURCHARGE" | "WAYBILL_CHARGE" | "AMAZON_SPONSORED_DISCOUNT" | "INTEGRATOR_SPONSORED_DISCOUNT" | "OVERSIZE_SURCHARGE" | "CONGESTION_CHARGE" | "RESIDENTIAL_SURCHARGE" | "ADDITIONAL_SURCHARGE" | "SURCHARGE" | "REBATE" | "HIGH_CUBE_SURCHARGE" | "HIGH_LENGTH_SURCHARGE" | "HIGH_WIDTH_SURCHARGE" | "DEMAND_SURCHARGE" | "NONSTANDARD_FEE";
        /** @description A list of RateItem */
        shippingV2_RateItemList: components["schemas"]["shippingV2_RateItem"][];
        /**
         * @description Type of the rateItem.
         * @enum {string}
         */
        shippingV2_RateItemType: "MANDATORY" | "OPTIONAL" | "INCLUDED";
        /** @description A list of eligible shipping service offerings. */
        shippingV2_RateList: components["schemas"]["shippingV2_Rate"][];
        /** @description Specify the type of attributes to be added on a label. */
        shippingV2_RequestAttributes: components["schemas"]["shippingV2_LabelAttribute"][];
        /** @description The document specifications requested. For calls to the purchaseShipment operation, the shipment purchase fails if the specified document specifications are not among those returned in the response to the getRates operation. */
        shippingV2_RequestedDocumentSpecification: {
            dpi?: components["schemas"]["shippingV2_Dpi"];
            format: components["schemas"]["shippingV2_DocumentFormat"];
            needFileJoining: components["schemas"]["shippingV2_NeedFileJoining"];
            pageLayout?: components["schemas"]["shippingV2_PageLayout"];
            /** @description A list of the document types requested. */
            requestedDocumentTypes: components["schemas"]["shippingV2_DocumentType"][];
            requestedLabelCustomization?: components["schemas"]["shippingV2_RequestedLabelCustomization"];
            size: components["schemas"]["shippingV2_DocumentSize"];
        };
        /** @description Object contains customised data requested by a shipper to be printed on a shipping label. */
        shippingV2_RequestedLabelCustomization: {
            requestAttributes?: components["schemas"]["shippingV2_RequestAttributes"];
        };
        /** @description A value-added service to be applied to a shipping service purchase. */
        shippingV2_RequestedValueAddedService: {
            /** @description The identifier of the selected value-added service. Must be among those returned in the response to the getRates operation. */
            id: string;
        };
        /** @description The value-added services to be added to a shipping service purchase. */
        shippingV2_RequestedValueAddedServiceList: components["schemas"]["shippingV2_RequestedValueAddedService"][];
        /** @description A unique token generated to identify a getRates operation. */
        shippingV2_RequestToken: string;
        /** @description Service Related Info */
        shippingV2_Service: {
            id: components["schemas"]["shippingV2_ServiceId"];
            name: components["schemas"]["shippingV2_ServiceName"];
        };
        /** @description An identifier for the shipping service. */
        shippingV2_ServiceId: string;
        /** @description A list of ServiceId. */
        shippingV2_ServiceIds: string[];
        /** @description The name of the shipping service. */
        shippingV2_ServiceName: string;
        /** @description Service Selection Criteria. */
        shippingV2_ServiceSelection: {
            serviceId: components["schemas"]["shippingV2_ServiceIds"];
        };
        /**
         * @description Type of settlement the shipper wants to receive for a particular shipment.
         * @default REFUND
         * @enum {string}
         */
        shippingV2_SettlementType: "REFUND" | "CERTIFICATE_OF_FACT";
        /** @description The unique shipment identifier provided by a shipping service. */
        shippingV2_ShipmentId: string;
        /**
         * @description Shipment type.
         * @enum {string}
         */
        shippingV2_ShipmentType: "FORWARD" | "RETURNS";
        /** @description The shipper instruction. */
        shippingV2_ShipperInstruction: {
            /** @description The delivery notes for the shipment */
            deliveryNotes?: string;
        };
        /** @description The state, county or region where the person, business or institution is located. */
        shippingV2_StateOrRegion: string;
        /**
         * @description The status of the package being shipped.
         * @enum {string}
         */
        shippingV2_Status: "PreTransit" | "InTransit" | "Delivered" | "Lost" | "OutForDelivery" | "Rejected" | "Undeliverable" | "DeliveryAttempted" | "PickupCancelled" | "AwaitingCustomerPickup";
        /** @description The request schema for the NdrFeedback operation */
        shippingV2_SubmitNdrFeedbackRequest: {
            ndrAction: components["schemas"]["shippingV2_NdrAction"];
            ndrRequestData?: components["schemas"]["shippingV2_NdrRequestData"];
            trackingId: components["schemas"]["shippingV2_TrackingId"];
        };
        /** @description The supported document types for a service offering. */
        shippingV2_SupportedDocumentDetail: {
            /** @description When true, the supported document type is required. */
            isMandatory: boolean;
            name: components["schemas"]["shippingV2_DocumentType"];
        };
        /** @description Document specification that is supported for a service offering. */
        shippingV2_SupportedDocumentSpecification: {
            format: components["schemas"]["shippingV2_DocumentFormat"];
            printOptions: components["schemas"]["shippingV2_PrintOptionList"];
            size: components["schemas"]["shippingV2_DocumentSize"];
        };
        /** @description A list of the document specifications supported for a shipment service offering. */
        shippingV2_SupportedDocumentSpecificationList: components["schemas"]["shippingV2_SupportedDocumentSpecification"][];
        /** @description Indicates the tax specifications associated with the shipment for customs compliance purposes in certain regions. */
        shippingV2_TaxDetail: {
            /** @description The shipper's tax registration number associated with the shipment for customs compliance purposes in certain regions. */
            taxRegistrationNumber: string;
            taxType: components["schemas"]["shippingV2_TaxType"];
        };
        /** @description A list of tax detail information. */
        shippingV2_TaxDetailList: components["schemas"]["shippingV2_TaxDetail"][];
        /**
         * @description Indicates the type of tax.
         * @enum {string}
         */
        shippingV2_TaxType: "GST";
        /** @description Denotes time of the day, used for defining opening or closing time of access points */
        shippingV2_TimeOfDay: {
            /** @description Denotes hour of the day, used for defining opening or closing time of access points */
            hourOfDay?: number;
            /** @description Denotes minute of the hour, used for defining opening or closing time of access points */
            minuteOfHour?: number;
            /** @description Denotes second of the minute, used for defining opening or closing time of access points */
            secondOfMinute?: number;
        };
        /** @description The start and end time that specifies the time interval of an event. */
        shippingV2_TimeWindow: {
            /**
             * Format: date-time
             * @description The end time of the time window.
             */
            end?: string;
            /**
             * Format: date-time
             * @description The start time of the time window.
             */
            start?: string;
        };
        /** @description Contains detail codes that provide additional details related to the forward and return leg of the shipment. */
        shippingV2_TrackingDetailCodes: {
            /** @description Contains detail codes that provide additional details related to the forward leg of the shipment. */
            forward: components["schemas"]["shippingV2_DetailCodes"][];
            /** @description Contains detail codes that provide additional details related to the return leg of the shipment. */
            returns: components["schemas"]["shippingV2_DetailCodes"][];
        };
        /** @description The carrier generated identifier for a package in a purchased shipment. */
        shippingV2_TrackingId: string;
        /** @description A package status summary. */
        shippingV2_TrackingSummary: {
            status?: components["schemas"]["shippingV2_Status"];
            trackingDetailCodes?: components["schemas"]["shippingV2_TrackingDetailCodes"];
        };
        /** @description The request schema for remove the Carrier Account associated with the provided merchant. */
        shippingV2_UnlinkCarrierAccountRequest: {
            accountId?: components["schemas"]["shippingV2_AccountId"];
            clientReferenceDetails?: components["schemas"]["shippingV2_ClientReferenceDetails"];
        };
        /** @description The Response  for the UnlinkCarrierAccountResponse operation. */
        shippingV2_UnlinkCarrierAccountResponse: {
            /** @description Is Carrier unlinked from Merchant */
            isUnlinked?: boolean;
        };
        /** @description UnmanifestedCarrierInformation like carrierId CarrierName and Location */
        shippingV2_UnmanifestedCarrierInformation: {
            carrierId?: components["schemas"]["shippingV2_CarrierId"];
            carrierName?: components["schemas"]["shippingV2_CarrierName"];
            unmanifestedShipmentLocationList?: components["schemas"]["shippingV2_UnmanifestedShipmentLocationList"];
        };
        /** @description A list of UnmanifestedCarrierInformation */
        shippingV2_UnmanifestedCarrierInformationList: components["schemas"]["shippingV2_UnmanifestedCarrierInformation"][];
        /** @description UnmanifestedShipmentLocation info  */
        shippingV2_UnmanifestedShipmentLocation: {
            address?: components["schemas"]["shippingV2_Address"];
            /**
             * Format: dateTime
             * @description Its Last Manifest Date.
             */
            lastManifestDate?: string;
        };
        /** @description A list of UnmanifestedShipmentLocation */
        shippingV2_UnmanifestedShipmentLocationList: components["schemas"]["shippingV2_UnmanifestedShipmentLocation"][];
        /** @description ValidationMetadata Details */
        shippingV2_ValidationMetadata: {
            /** @description errorMessage for the error. */
            errorMessage?: string;
            /** @description validationStrategy for the error. */
            validationStrategy?: string;
            /** @description Value. */
            value?: string;
        };
        /** @description A list of ValidationMetadata */
        shippingV2_ValidationMetadataList: components["schemas"]["shippingV2_ValidationMetadata"][];
        /** @description A value-added service available for purchase with a shipment service offering. */
        shippingV2_ValueAddedService: {
            cost: components["schemas"]["shippingV2_Currency"];
            /** @description The identifier for the value-added service. */
            id: string;
            /** @description The name of the value-added service. */
            name: string;
        };
        /** @description A collection of supported value-added services. */
        shippingV2_ValueAddedServiceDetails: {
            collectOnDelivery?: components["schemas"]["shippingV2_CollectOnDelivery"];
        };
        /** @description The weight in the units indicated. */
        shippingV2_Weight: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unit: "GRAM" | "KILOGRAM" | "OUNCE" | "POUND";
            /** @description The measurement value. */
            value: number;
        };
        /** @description The response schema for the createProductReviewAndSellerFeedbackSolicitation operation. */
        solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse: {
            errors?: components["schemas"]["solicitations_ErrorList"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        solicitations_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        solicitations_ErrorList: components["schemas"]["solicitations_Error"][];
        solicitations_GetSchemaResponse: {
            _links?: {
                self: components["schemas"]["solicitations_LinkObject"];
            };
            errors?: components["schemas"]["solicitations_ErrorList"];
            payload?: components["schemas"]["solicitations_Schema"];
        };
        /** @description Describes a solicitation action that can be taken for an order. Provides a JSON Hypertext Application Language (HAL) link to the JSON schema document that describes the expected input. */
        solicitations_GetSolicitationActionResponse: {
            _embedded?: {
                schema?: components["schemas"]["solicitations_GetSchemaResponse"];
            };
            _links?: {
                schema: components["schemas"]["solicitations_LinkObject"];
                self: components["schemas"]["solicitations_LinkObject"];
            };
            errors?: components["schemas"]["solicitations_ErrorList"];
            payload?: components["schemas"]["solicitations_SolicitationsAction"];
        };
        /** @description The response schema for the getSolicitationActionsForOrder operation. */
        solicitations_GetSolicitationActionsForOrderResponse: {
            _embedded?: {
                actions: components["schemas"]["solicitations_GetSolicitationActionResponse"][];
            };
            _links?: {
                /** @description Eligible actions for the specified amazonOrderId. */
                actions: components["schemas"]["solicitations_LinkObject"][];
                self: components["schemas"]["solicitations_LinkObject"];
            };
            errors?: components["schemas"]["solicitations_ErrorList"];
        };
        /** @description A Link object. */
        solicitations_LinkObject: {
            /** @description A URI for this object. */
            href: string;
            /** @description An identifier for this object. */
            name?: string;
        };
        /** @description A JSON schema document describing the expected payload of the action. This object can be validated against <a href=http://json-schema.org/draft-04/schema>http://json-schema.org/draft-04/schema</a>. */
        solicitations_Schema: {
            [key: string]: unknown;
        };
        /** @description A simple object containing the name of the template. */
        solicitations_SolicitationsAction: {
            name: string;
        };
        /** @description A physical address. */
        "supplySources_2020-07-01_Address": {
            /** @description The first line of the address. */
            addressLine1: string;
            /** @description The additional address information, if required. */
            addressLine2?: string;
            /** @description The additional address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion: string;
        };
        /** @description The address and contact details. */
        "supplySources_2020-07-01_AddressWithContact": {
            address?: components["schemas"]["supplySources_2020-07-01_Address"];
            contactDetails?: components["schemas"]["supplySources_2020-07-01_ContactDetails"];
        };
        /** @description The contact details */
        "supplySources_2020-07-01_ContactDetails": {
            primary?: {
                email?: components["schemas"]["supplySources_2020-07-01_EmailAddress"];
                /** @description The phone number of the person, business or institution. */
                phone?: string;
            };
        };
        /** @description A request to create a supply source. */
        "supplySources_2020-07-01_CreateSupplySourceRequest": {
            address: components["schemas"]["supplySources_2020-07-01_Address"];
            alias: components["schemas"]["supplySources_2020-07-01_SupplySourceAlias"];
            supplySourceCode: components["schemas"]["supplySources_2020-07-01_SupplySourceCode"];
        };
        /** @description The result of creating a new supply source. */
        "supplySources_2020-07-01_CreateSupplySourceResponse": {
            supplySourceCode: components["schemas"]["supplySources_2020-07-01_SupplySourceCode"];
            supplySourceId: components["schemas"]["supplySources_2020-07-01_SupplySourceId"];
        };
        /** @description The curbside pickup configuration of a supply source. */
        "supplySources_2020-07-01_CurbsidePickupConfiguration": {
            /** @description When true, curbside pickup is supported by the supply source. */
            isSupported?: boolean;
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
            parkingWithAddressConfiguration?: components["schemas"]["supplySources_2020-07-01_ParkingWithAddressConfiguration"];
        };
        /** @description A date and time in the rfc3339 format. */
        "supplySources_2020-07-01_DateTime": string;
        /** @description The delivery channel of a supply source. */
        "supplySources_2020-07-01_DeliveryChannel": {
            isSupported?: boolean;
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
        };
        /** @description The duration of time. */
        "supplySources_2020-07-01_Duration": {
            timeUnit?: components["schemas"]["supplySources_2020-07-01_TimeUnit"];
            value?: components["schemas"]["supplySources_2020-07-01_NonNegativeInteger"];
        };
        /** @description The email address to which email messages are delivered. */
        "supplySources_2020-07-01_EmailAddress": string;
        /** @description An error response returned when the request is unsuccessful. */
        "supplySources_2020-07-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "supplySources_2020-07-01_ErrorList": {
            /** @description A list of error responses returned when a request is unsuccessful. */
            errors: components["schemas"]["supplySources_2020-07-01_Error"][];
        };
        /** @description The paginated list of supply sources. */
        "supplySources_2020-07-01_GetSupplySourcesResponse": {
            /** @description If present, use this pagination token to retrieve the next page of supply sources. */
            nextPageToken?: string;
            supplySources?: components["schemas"]["supplySources_2020-07-01_SupplySourceList"];
        };
        /** @description The in-store pickup configuration of a supply source. */
        "supplySources_2020-07-01_InStorePickupConfiguration": {
            /** @description When true, in-store pickup is supported by the supply source (default: `isSupported` value in `PickupChannel`). */
            isSupported?: boolean;
            parkingConfiguration?: components["schemas"]["supplySources_2020-07-01_ParkingConfiguration"];
        };
        /** @description An unsigned integer that can be only positive or zero. */
        "supplySources_2020-07-01_NonNegativeInteger": number;
        /** @description The operating hour schema */
        "supplySources_2020-07-01_OperatingHour": {
            /** @description The closing time, ISO 8601 formatted timestamp without date, HH:mm. */
            endTime?: string;
            /** @description The opening time, ISO 8601 formatted timestamp without date, HH:mm. */
            startTime?: string;
        };
        /** @description A list of Operating Hours. */
        "supplySources_2020-07-01_OperatingHours": components["schemas"]["supplySources_2020-07-01_OperatingHour"][];
        /** @description The operating hours per day */
        "supplySources_2020-07-01_OperatingHoursByDay": {
            friday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            monday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            saturday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            sunday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            thursday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            tuesday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
            wednesday?: components["schemas"]["supplySources_2020-07-01_OperatingHours"];
        };
        /** @description The operational configuration of `supplySources`. */
        "supplySources_2020-07-01_OperationalConfiguration": {
            contactDetails?: components["schemas"]["supplySources_2020-07-01_ContactDetails"];
            handlingTime?: components["schemas"]["supplySources_2020-07-01_Duration"];
            operatingHoursByDay?: components["schemas"]["supplySources_2020-07-01_OperatingHoursByDay"];
            throughputConfig?: components["schemas"]["supplySources_2020-07-01_ThroughputConfig"];
        };
        /** @description The outbound capability of a supply source. */
        "supplySources_2020-07-01_OutboundCapability": {
            deliveryChannel?: components["schemas"]["supplySources_2020-07-01_DeliveryChannel"];
            isSupported?: boolean;
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
            pickupChannel?: components["schemas"]["supplySources_2020-07-01_PickupChannel"];
            returnLocation?: components["schemas"]["supplySources_2020-07-01_ReturnLocation"];
        };
        /** @description The parking configuration. */
        "supplySources_2020-07-01_ParkingConfiguration": {
            numberOfParkingSpots?: components["schemas"]["supplySources_2020-07-01_NonNegativeInteger"];
            parkingCostType?: components["schemas"]["supplySources_2020-07-01_ParkingCostType"];
            parkingSpotIdentificationType?: components["schemas"]["supplySources_2020-07-01_ParkingSpotIdentificationType"];
        };
        /**
         * @description The parking cost type.
         * @enum {string}
         */
        "supplySources_2020-07-01_ParkingCostType": "Free" | "Other";
        /**
         * @description The type of parking spot identification.
         * @enum {string}
         */
        "supplySources_2020-07-01_ParkingSpotIdentificationType": "Numbered" | "Other";
        /** @description The parking configuration with the address. */
        "supplySources_2020-07-01_ParkingWithAddressConfiguration": components["schemas"]["supplySources_2020-07-01_ParkingConfiguration"] & {
            address?: components["schemas"]["supplySources_2020-07-01_Address"];
        };
        /** @description The pick up channel of a supply source. */
        "supplySources_2020-07-01_PickupChannel": {
            curbsidePickupConfiguration?: components["schemas"]["supplySources_2020-07-01_CurbsidePickupConfiguration"];
            inStorePickupConfiguration?: components["schemas"]["supplySources_2020-07-01_InStorePickupConfiguration"];
            inventoryHoldPeriod?: components["schemas"]["supplySources_2020-07-01_Duration"];
            isSupported?: boolean;
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
        };
        /** @description The address or reference to another `supplySourceId` to act as a return location. */
        "supplySources_2020-07-01_ReturnLocation": {
            addressWithContact?: components["schemas"]["supplySources_2020-07-01_AddressWithContact"];
            /** @description The Amazon provided `supplySourceId` where orders can be returned to. */
            supplySourceId?: string;
        };
        /** @description The services capability of a supply source. */
        "supplySources_2020-07-01_ServicesCapability": {
            /** @description When true, `SupplySource` supports the Service capability. */
            isSupported?: boolean;
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
        };
        /** @description The supply source details, including configurations and capabilities. */
        "supplySources_2020-07-01_SupplySource": {
            address?: components["schemas"]["supplySources_2020-07-01_Address"];
            alias?: components["schemas"]["supplySources_2020-07-01_SupplySourceAlias"];
            capabilities?: components["schemas"]["supplySources_2020-07-01_SupplySourceCapabilities"];
            configuration?: components["schemas"]["supplySources_2020-07-01_SupplySourceConfiguration"];
            createdAt?: components["schemas"]["supplySources_2020-07-01_DateTime"];
            status?: components["schemas"]["supplySources_2020-07-01_SupplySourceStatusReadOnly"];
            supplySourceCode?: components["schemas"]["supplySources_2020-07-01_SupplySourceCode"];
            supplySourceId?: components["schemas"]["supplySources_2020-07-01_SupplySourceId"];
            updatedAt?: components["schemas"]["supplySources_2020-07-01_DateTime"];
        };
        /** @description The custom alias for this supply source */
        "supplySources_2020-07-01_SupplySourceAlias": string;
        /** @description The capabilities of a supply source. */
        "supplySources_2020-07-01_SupplySourceCapabilities": {
            outbound?: components["schemas"]["supplySources_2020-07-01_OutboundCapability"];
            services?: components["schemas"]["supplySources_2020-07-01_ServicesCapability"];
        };
        /** @description The seller-provided unique supply source code. */
        "supplySources_2020-07-01_SupplySourceCode": string;
        /** @description Includes configuration and timezone of a supply source. */
        "supplySources_2020-07-01_SupplySourceConfiguration": {
            operationalConfiguration?: components["schemas"]["supplySources_2020-07-01_OperationalConfiguration"];
            /** @description Please see RFC 6557, should be a canonical time zone ID as listed here: https://www.joda.org/joda-time/timezones.html. */
            timezone?: string;
        };
        /** @description An Amazon generated unique supply source ID. */
        "supplySources_2020-07-01_SupplySourceId": string;
        /** @description The list of `SupplySource`s. */
        "supplySources_2020-07-01_SupplySourceList": {
            address?: components["schemas"]["supplySources_2020-07-01_Address"];
            alias?: components["schemas"]["supplySources_2020-07-01_SupplySourceAlias"];
            supplySourceCode?: components["schemas"]["supplySources_2020-07-01_SupplySourceCode"];
            supplySourceId?: components["schemas"]["supplySources_2020-07-01_SupplySourceId"];
        }[];
        /**
         * @description The `SupplySource` status
         * @enum {string}
         */
        "supplySources_2020-07-01_SupplySourceStatus": "Active" | "Inactive";
        /**
         * @description The `SupplySource` status.
         * @enum {string}
         */
        "supplySources_2020-07-01_SupplySourceStatusReadOnly": "Active" | "Inactive" | "Archived";
        /** @description The throughput capacity */
        "supplySources_2020-07-01_ThroughputCap": {
            timeUnit?: components["schemas"]["supplySources_2020-07-01_TimeUnit"];
            value?: components["schemas"]["supplySources_2020-07-01_NonNegativeInteger"];
        };
        /** @description The throughput configuration. */
        "supplySources_2020-07-01_ThroughputConfig": {
            throughputCap?: components["schemas"]["supplySources_2020-07-01_ThroughputCap"];
            throughputUnit: components["schemas"]["supplySources_2020-07-01_ThroughputUnit"];
        };
        /**
         * @description The throughput unit
         * @enum {string}
         */
        "supplySources_2020-07-01_ThroughputUnit": "Order";
        /**
         * @description The time unit
         * @enum {string}
         */
        "supplySources_2020-07-01_TimeUnit": "Hours" | "Minutes" | "Days";
        /** @description A request to update the configuration and capabilities of a supply source. */
        "supplySources_2020-07-01_UpdateSupplySourceRequest": {
            alias?: components["schemas"]["supplySources_2020-07-01_SupplySourceAlias"];
            capabilities?: components["schemas"]["supplySources_2020-07-01_SupplySourceCapabilities"];
            configuration?: components["schemas"]["supplySources_2020-07-01_SupplySourceConfiguration"];
        };
        /** @description A request to update the status of a supply source. */
        "supplySources_2020-07-01_UpdateSupplySourceStatusRequest": {
            status?: components["schemas"]["supplySources_2020-07-01_SupplySourceStatus"];
        };
        /** @description The request schema for the createRestrictedDataToken operation. */
        "tokens_2021-03-01_CreateRestrictedDataTokenRequest": {
            /** @description A list of restricted resources.
             *     Maximum: 50 */
            restrictedResources: components["schemas"]["tokens_2021-03-01_RestrictedResource"][];
            /** @description The application ID for the target application to which access is being delegated. */
            targetApplication?: string;
        };
        /** @description The response schema for the createRestrictedDataToken operation. */
        "tokens_2021-03-01_CreateRestrictedDataTokenResponse": {
            /** @description The lifetime of the Restricted Data Token, in seconds. */
            expiresIn?: number;
            /** @description A Restricted Data Token (RDT). This is a short-lived access token that authorizes calls to restricted operations. Pass this value with the x-amz-access-token header when making subsequent calls to these restricted resources. */
            restrictedDataToken?: string;
        };
        /** @description An error response returned when the request is unsuccessful. */
        "tokens_2021-03-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "tokens_2021-03-01_ErrorList": {
            errors?: components["schemas"]["tokens_2021-03-01_Error"][];
        };
        /** @description Model of a restricted resource. */
        "tokens_2021-03-01_RestrictedResource": {
            /** @description Indicates the type of Personally Identifiable Information requested. This parameter is required only when getting an RDT for use with the getOrder, getOrders, or getOrderItems operation of the Orders API. For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide). Possible values include:
             *     - **buyerInfo**. On the order level this includes general identifying information about the buyer and tax-related information. On the order item level this includes gift wrap information and custom order information, if available.
             *     - **shippingAddress**. This includes information for fulfilling orders.
             *     - **buyerTaxInformation**. This includes information for issuing tax invoices. */
            dataElements?: string[];
            /**
             * @description The HTTP method in the restricted resource.
             * @enum {string}
             */
            method: "GET" | "PUT" | "POST" | "DELETE";
            /** @description The path in the restricted resource. Here are some path examples:
             *     - ```/orders/v0/orders```. For getting an RDT for the getOrders operation of the Orders API. For bulk orders.
             *     - ```/orders/v0/orders/123-1234567-1234567```. For getting an RDT for the getOrder operation of the Orders API. For a specific order.
             *     - ```/orders/v0/orders/123-1234567-1234567/orderItems```. For getting an RDT for the getOrderItems operation of the Orders API. For the order items in a specific order.
             *     - ```/mfn/v0/shipments/FBA1234ABC5D```. For getting an RDT for the getShipment operation of the Shipping API. For a specific shipment.
             *     - ```/mfn/v0/shipments/{shipmentId}```. For getting an RDT for the getShipment operation of the Shipping API. For any of a selling partner's shipments that you specify when you call the getShipment operation. */
            path: string;
        };
        /**
         * @description The default payment method type.
         * @enum {string}
         */
        "transfers_2024-06-01_AssignmentType": "DEFAULT_DEPOSIT_METHOD";
        /**
         * @description Error response returned when the request is unsuccessful.
         * @example {
         *       "code": "InvalidInput",
         *       "message": "The input request had one or more invalid input parameters."
         *     }
         */
        "transfers_2024-06-01_Error": {
            /**
             * @description An error code that identifies the type of error that occurred.
             * @example InvalidInput
             */
            code: string;
            /**
             * @description Additional details that can help the caller understand or fix the issue.
             * @example The following input parameters are invalid : [ marketplaceId ].
             */
            details?: string;
            /**
             * @description A message that describes the error condition.
             * @example The input request had one or more invalid input parameters.
             */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "transfers_2024-06-01_ErrorList": {
            /**
             * @description array of errors
             * @example [
             *       {
             *         "code": "InvalidInput",
             *         "message": "The input request had one or more invalid input parameters."
             *       }
             *     ]
             */
            errors: components["schemas"]["transfers_2024-06-01_Error"][];
        };
        /** @description The expiration date of the card used for payment. If the payment method is not `card`, the expiration date is `null`. */
        "transfers_2024-06-01_ExpiryDate": {
            /**
             * @description The month the card expires expressed as a number from `1` to `12`.
             * @example 3
             */
            month?: string;
            /**
             * @description Year
             * @example 2024
             */
            year?: string;
        };
        /**
         * @description The response schema for the `getPaymentMethods` operation.
         * @example {
         *       "paymentMethods": [
         *         {
         *           "accountHolderName": "John Doe",
         *           "paymentMethodId": "0h_TU_CUS_4058fe2a-da6b-4b82-8e48-b20ff2eb4f6d",
         *           "paymentMethodType": "BANK_ACCOUNT",
         *           "tail": "677",
         *           "assignmentType": "DEFAULT_DEPOSIT_METHOD"
         *         },
         *         {
         *           "countryCode": "US",
         *           "accountHolderName": "John Doe",
         *           "paymentMethodId": "0h_TU_CUS_4058fe2a-da6b-4b82-8e48-b20ff2eb4f6d",
         *           "paymentMethodType": "CARD",
         *           "expiryDate": {
         *             "month": "3",
         *             "year": "2029"
         *           },
         *           "tail": "677"
         *         }
         *       ]
         *     }
         */
        "transfers_2024-06-01_GetPaymentMethodsResponse": {
            paymentMethods?: components["schemas"]["transfers_2024-06-01_PaymentMethodList"];
        };
        /**
         * @description The request schema for the `initiatePayout` operation.
         * @example {
         *       "marketplaceId": "APJ6JRA9NG5V4",
         *       "accountType": "Standard Orders"
         *     }
         */
        "transfers_2024-06-01_InitiatePayoutRequest": {
            /** @description The account type in the selected marketplace for which a payout must be initiated. For supported EU marketplaces, the only account type is `Standard Orders`. */
            accountType: string;
            marketplaceId: components["schemas"]["transfers_2024-06-01_MarketplaceId"];
        };
        /**
         * @description The response schema for the `initiatePayout` operation.
         * @example {
         *       "payoutReferenceId": "3DM7DQi8DPAMOLOSaN5HxT0q2waNwH95fopx3AD2Lgc"
         *     }
         */
        "transfers_2024-06-01_InitiatePayoutResponse": {
            /** @description The financial event group ID for a successfully initiated payout. You can use this ID to track payout information. */
            payoutReferenceId: string;
        };
        /**
         * @description The identifier of the Amazon marketplace. For the list of all marketplace IDs, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
         * @example A1PA6795UKMFR9
         */
        "transfers_2024-06-01_MarketplaceId": string;
        /** @description The details of a payment method. */
        "transfers_2024-06-01_PaymentMethodDetails": {
            /** @description The name of the account holder who is registered for the payment method. */
            accountHolderName?: string;
            assignmentType?: components["schemas"]["transfers_2024-06-01_AssignmentType"];
            /**
             * @description The two-letter country code in ISO 3166-1 alpha-2 format. For payment methods in the `card` category, the code is for the country where the card was issued. For payment methods in the `bank account` category, the code is for the country where the account is located.
             * @example US
             */
            countryCode?: string;
            expiryDate?: components["schemas"]["transfers_2024-06-01_ExpiryDate"];
            /**
             * @description The payment method identifier.
             * @example 0h_TU_CUS_4058fe2a-da6b-4b82-8e48-b20ff2eb4f6d
             */
            paymentMethodId?: string;
            paymentMethodType?: components["schemas"]["transfers_2024-06-01_PaymentMethodType"];
            /**
             * @description The last three or four digits of the payment method.
             * @example 321
             */
            tail?: string;
        };
        /** @description The list of payment methods with payment method details. */
        "transfers_2024-06-01_PaymentMethodList": components["schemas"]["transfers_2024-06-01_PaymentMethodDetails"][];
        /**
         * @description The type of payment method.
         * @enum {string}
         */
        "transfers_2024-06-01_PaymentMethodType": "BANK_ACCOUNT" | "CARD" | "SELLER_WALLET";
        /**
         * @description The list of payment method types that are present.
         * @example [
         *       "BANK_ACCOUNT, CARD"
         *     ]
         */
        "transfers_2024-06-01_PaymentMethodTypeList": components["schemas"]["transfers_2024-06-01_PaymentMethodType"][];
        /** @description The response schema for the createUploadDestination operation. */
        "uploads_2020-11-01_CreateUploadDestinationResponse": {
            errors?: components["schemas"]["uploads_2020-11-01_ErrorList"];
            payload?: components["schemas"]["uploads_2020-11-01_UploadDestination"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "uploads_2020-11-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition in a human-readable form. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "uploads_2020-11-01_ErrorList": components["schemas"]["uploads_2020-11-01_Error"][];
        /** @description Information about an upload destination. */
        "uploads_2020-11-01_UploadDestination": {
            /** @description The headers to include in the upload request. */
            headers?: Record<string, unknown>;
            /** @description The unique identifier for the upload destination. */
            uploadDestinationId?: string;
            /** @description The URL for the upload destination. */
            url?: string;
        };
        /** @description Engine power output of vehicle. */
        "vehicles_2024-11-01_EngineOutput": {
            unit: components["schemas"]["vehicles_2024-11-01_EngineOutputUnit"];
            /** @description Engine power value in specified unit. */
            value: number;
        };
        /**
         * @description Unit for measuring engine power.
         * @enum {string}
         */
        "vehicles_2024-11-01_EngineOutputUnit": "KILOWATT" | "HORSEPOWER";
        /** @description Error response returned when the request is unsuccessful. */
        "vehicles_2024-11-01_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "vehicles_2024-11-01_ErrorList": {
            /** @description array of errors */
            errors: components["schemas"]["vehicles_2024-11-01_Error"][];
        };
        /**
         * @description Month in MM format
         * @example 11
         */
        "vehicles_2024-11-01_Month": number;
        /** @description Represents a month in a specific year. */
        "vehicles_2024-11-01_MonthAndYear": {
            month?: components["schemas"]["vehicles_2024-11-01_Month"];
            year?: components["schemas"]["vehicles_2024-11-01_Year"];
        };
        /** @description When a request produces a response that exceeds the `pageSize`, pagination occurs. This means the response is divided into individual pages. To retrieve the next page or the previous page, you must pass the `nextToken` value or the `previousToken` value as the `pageToken` parameter in the next request. When you receive the last page, there will be no `nextToken` key in the pagination object. */
        "vehicles_2024-11-01_Pagination": {
            /** @description A token that can be used to fetch the next page. */
            nextToken?: string;
            /** @description A token that can be used to fetch the previous page. */
            previousToken?: string;
        };
        /** @description Combinations of attributes and unique identifier that represents a vehicle in vehicle list. */
        "vehicles_2024-11-01_Vehicle": {
            /** @description Body style of vehicle (example: Hatchback, Cabriolet). */
            bodyStyle?: string;
            /** @description Drive type of vehicle(example: Rear wheel drive). */
            driveType?: string;
            /** @description Energy Source for the vehicle(example: Petrol) */
            energy?: string;
            /** @description Engine output of vehicle. */
            engineOutput?: components["schemas"]["vehicles_2024-11-01_EngineOutput"][];
            /** @description Identifiers that can be used to identify the vehicle uniquely */
            identifiers: components["schemas"]["vehicles_2024-11-01_VehicleIdentifiers"][];
            /** @description The date on which the vehicle was last updated, in ISO-8601 date/time format. */
            lastProcessedDate?: string;
            /** @description Vehicle Brand. */
            make: string;
            manufacturingStartDate?: components["schemas"]["vehicles_2024-11-01_MonthAndYear"];
            manufacturingStopDate?: components["schemas"]["vehicles_2024-11-01_MonthAndYear"];
            /** @description Specific model of a vehicle. */
            model: string;
            status?: components["schemas"]["vehicles_2024-11-01_VehicleStatusInCatalog"];
            /** @description Name of the vehicle variant. */
            variantName?: string;
        };
        /** @description Combination of vehicle standard and id that can uniquely identify a vehicle from Amazon's catalog. */
        "vehicles_2024-11-01_VehicleIdentifiers": {
            standard: components["schemas"]["vehicles_2024-11-01_VehicleStandard"];
            /** @description Id that can uniquely identify a vehicle based the vehicle identification standard. */
            value: string;
        };
        /** @description Get paginated list of vehicle from Amazon's catalog */
        "vehicles_2024-11-01_VehiclesResponse": {
            pagination?: components["schemas"]["vehicles_2024-11-01_Pagination"];
            /** @description List of vehicles from Amazon's catalog. */
            vehicles: components["schemas"]["vehicles_2024-11-01_Vehicle"][];
        };
        /**
         * @description Standard followed to uniquely identify a vehicle.
         * @enum {string}
         */
        "vehicles_2024-11-01_VehicleStandard": "KTYPE" | "AMAZON_ID";
        /**
         * @description Status of vehicle in Amazon's catalog.
         * @enum {string}
         */
        "vehicles_2024-11-01_VehicleStatusInCatalog": "ACTIVE" | "DELETED";
        /**
         * @description Year in YYYY format
         * @example 2004
         */
        "vehicles_2024-11-01_Year": number;
        /** @description Error response returned when the request is unsuccessful. */
        vendorDirectFulfillmentInventoryV1_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorDirectFulfillmentInventoryV1_ErrorList: components["schemas"]["vendorDirectFulfillmentInventoryV1_Error"][];
        /** @description Inventory details required to update some or all items for the requested warehouse. */
        vendorDirectFulfillmentInventoryV1_InventoryUpdate: {
            /** @description When true, this request contains a full feed. Otherwise, this request contains a partial feed. When sending a full feed, you must send information about all items in the warehouse. Any items not in the full feed are updated as not available. When sending a partial feed, only include the items that need an update to inventory. The status of other items will remain unchanged. */
            isFullUpdate: boolean;
            /** @description A list of inventory items with updated details, including quantity available. */
            items: components["schemas"]["vendorDirectFulfillmentInventoryV1_ItemDetails"][];
            sellingParty: components["schemas"]["vendorDirectFulfillmentInventoryV1_PartyIdentification"];
        };
        /** @description Updated inventory details for an item. */
        vendorDirectFulfillmentInventoryV1_ItemDetails: {
            availableQuantity: components["schemas"]["vendorDirectFulfillmentInventoryV1_ItemQuantity"];
            /** @description The buyer selected product identification of the item. Either buyerProductIdentifier or vendorProductIdentifier should be submitted. */
            buyerProductIdentifier?: string;
            /** @description When true, the item is permanently unavailable. */
            isObsolete?: boolean;
            /** @description The vendor selected product identification of the item. Either buyerProductIdentifier or vendorProductIdentifier should be submitted. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of item quantity. */
        vendorDirectFulfillmentInventoryV1_ItemQuantity: {
            /** @description Quantity of units available for a specific item. */
            amount?: number;
            /** @description Unit of measure for the available quantity. */
            unitOfMeasure: string;
        };
        /** @description Name, address and tax details of a party. */
        vendorDirectFulfillmentInventoryV1_PartyIdentification: {
            /** @description Assigned identification for the party. */
            partyId: string;
        };
        /** @description The request body for the submitInventoryUpdate operation. */
        vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateRequest: {
            inventory?: components["schemas"]["vendorDirectFulfillmentInventoryV1_InventoryUpdate"];
        };
        /** @description The response schema for the submitInventoryUpdate operation. */
        vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentInventoryV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentInventoryV1_TransactionReference"];
        };
        /** @description Response containing the transaction ID. */
        vendorDirectFulfillmentInventoryV1_TransactionReference: {
            /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Status of acknowledgement. */
        "vendorDirectFulfillmentOrders_2021-12-28_AcknowledgementStatus": {
            /** @description Acknowledgement code is a unique two digit value which indicates the status of the acknowledgement. For a list of acknowledgement codes that Amazon supports, see the Vendor Direct Fulfillment APIs Use Case Guide. */
            code?: string;
            /** @description Reason for the acknowledgement code. */
            description?: string;
        };
        /** @description Address of the party. */
        "vendorDirectFulfillmentOrders_2021-12-28_Address": {
            /** @description First line of the address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine1: string;
            /** @description Additional address information, if required. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine2?: string;
            /** @description Additional address information, if required. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine3?: string;
            /** @description The attention name of the person at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            attention?: string;
            /** @description The city where the person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            county?: string;
            /** @description The district where person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            district?: string;
            /** @description The name of the person, business or institution at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            phone?: string;
            /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion: string;
        };
        /** @description The details of the products the vendor has configured as customizable. */
        "vendorDirectFulfillmentOrders_2021-12-28_buyerCustomizedInfoDetail": {
            /** @description A [Base 64](https://datatracker.ietf.org/doc/html/rfc4648#section-4) encoded URL using the UTF-8 character set. The URL provides the location of the zip file that specifies the types of customizations or configurations allowed by the vendor, along with types and ranges for the attributes of their products. */
            customizedUrl?: string;
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. */
        "vendorDirectFulfillmentOrders_2021-12-28_Decimal": string;
        /** @description Error response returned when the request is unsuccessful. */
        "vendorDirectFulfillmentOrders_2021-12-28_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "vendorDirectFulfillmentOrders_2021-12-28_ErrorList": {
            /** @description An array of Error objects representing individual errors encountered during the request. */
            errors: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Error"][];
        };
        /** @description Gift details for the item. */
        "vendorDirectFulfillmentOrders_2021-12-28_GiftDetails": {
            /** @description Gift message to be printed in shipment. */
            giftMessage?: string;
            /** @description Gift wrap identifier for the gift wrapping, if any. */
            giftWrapId?: string;
        };
        /** @description Details of quantity ordered. */
        "vendorDirectFulfillmentOrders_2021-12-28_ItemQuantity": {
            /** @description Acknowledged quantity. This value should not be zero. */
            amount?: number;
            /**
             * @description Unit of measure for the acknowledged quantity.
             * @enum {string}
             */
            unitOfMeasure?: "Each";
        };
        /** @description An amount of money, including units in the form of currency. */
        "vendorDirectFulfillmentOrders_2021-12-28_Money": {
            amount?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Decimal"];
            /** @description Three digit currency code in ISO 4217 format. String of length 3. */
            currencyCode?: string;
        };
        /** @description Represents a purchase order. */
        "vendorDirectFulfillmentOrders_2021-12-28_Order": {
            orderDetails?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_OrderDetails"];
            /** @description The purchase order number for this order. Formatting Notes: alpha-numeric code. */
            purchaseOrderNumber: string;
        };
        /** @description Details of an individual order being acknowledged. */
        "vendorDirectFulfillmentOrders_2021-12-28_OrderAcknowledgementItem": {
            /**
             * Format: date-time
             * @description The date and time when the order is acknowledged, in ISO-8601 date/time format. For example: 2018-07-16T23:00:00Z / 2018-07-16T23:00:00-05:00 / 2018-07-16T23:00:00-08:00.
             */
            acknowledgementDate: string;
            acknowledgementStatus: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_AcknowledgementStatus"];
            /** @description Item details including acknowledged quantity. */
            itemAcknowledgements: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_OrderItemAcknowledgement"][];
            /** @description The purchase order number for this order. Formatting Notes: alpha-numeric code. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification"];
            /** @description The vendor's order number for this order. */
            vendorOrderNumber: string;
        };
        /** @description Details of an order. */
        "vendorDirectFulfillmentOrders_2021-12-28_OrderDetails": {
            billToParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification"];
            /** @description The customer order number. */
            customerOrderNumber: string;
            /** @description When `true`, the order contains customizable items. */
            hasCustomizableItems?: boolean;
            /** @description A list of items in this purchase order. */
            items: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_OrderItem"][];
            /**
             * Format: date-time
             * @description The date the order was placed. This  field is expected to be in ISO-8601 date/time format, for example:2018-07-16T23:00:00Z/ 2018-07-16T23:00:00-05:00 /2018-07-16T23:00:00-08:00. If no time zone is specified, UTC should be assumed.
             */
            orderDate: string;
            /**
             * @description Current status of the order.
             * @enum {string}
             */
            orderStatus?: "NEW" | "SHIPPED" | "ACCEPTED" | "CANCELLED";
            sellingParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification"];
            shipmentDetails: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ShipmentDetails"];
            shipToParty: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Address"];
            taxTotal?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TaxItemDetails"];
        };
        /** @description An item within an order */
        "vendorDirectFulfillmentOrders_2021-12-28_OrderItem": {
            buyerCustomizedInfo?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_buyerCustomizedInfoDetail"];
            /** @description Buyer's standard identification number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            giftDetails?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_GiftDetails"];
            /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
            itemSequenceNumber: string;
            netPrice: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Money"];
            orderedQuantity: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ItemQuantity"];
            scheduledDeliveryShipment?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ScheduledDeliveryShipment"];
            taxDetails?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TaxItemDetails"];
            /** @description Title for the item. */
            title?: string;
            totalPrice?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Money"];
            /** @description The vendor selected product identification of the item. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of an individual item within the order being acknowledged. */
        "vendorDirectFulfillmentOrders_2021-12-28_OrderItemAcknowledgement": {
            acknowledgedQuantity: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ItemQuantity"];
            /** @description Buyer's standard identification number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            /** @description Line item sequence number for the item. */
            itemSequenceNumber: string;
            /** @description The vendor selected product identification of the item. Should be the same as was provided in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description A list of purchase orders. */
        "vendorDirectFulfillmentOrders_2021-12-28_OrderList": {
            /** @description Represents a purchase order within the OrderList. */
            orders?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Order"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Pagination"];
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        "vendorDirectFulfillmentOrders_2021-12-28_Pagination": {
            /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return. */
            nextToken?: string;
        };
        /** @description Name, address and tax details of a party. */
        "vendorDirectFulfillmentOrders_2021-12-28_PartyIdentification": {
            address?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Address"];
            /** @description Assigned identification for the party. For example, warehouse code or vendor code. Please refer to specific party for more details. */
            partyId: string;
            taxInfo?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TaxRegistrationDetails"];
        };
        /** @description Dates for the scheduled delivery shipments. */
        "vendorDirectFulfillmentOrders_2021-12-28_ScheduledDeliveryShipment": {
            /**
             * Format: date-time
             * @description Earliest nominated delivery date for the scheduled delivery.
             */
            earliestNominatedDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Latest nominated delivery date for the scheduled delivery.
             */
            latestNominatedDeliveryDate?: string;
            /** @description Scheduled delivery service type. */
            scheduledDeliveryServiceType?: string;
        };
        /** @description Shipment dates. */
        "vendorDirectFulfillmentOrders_2021-12-28_ShipmentDates": {
            /**
             * Format: date-time
             * @description Delivery date promised to the Amazon customer.
             */
            promisedDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Time by which the vendor is required to ship the order.
             */
            requiredShipDate: string;
        };
        /** @description Shipment details required for the shipment. */
        "vendorDirectFulfillmentOrders_2021-12-28_ShipmentDetails": {
            /** @description When true, the order contain a gift. Include the gift message and gift wrap information. */
            isGift?: boolean;
            /** @description When true, this is a priority shipment. */
            isPriorityShipment: boolean;
            /** @description When true, a packing slip is required to be sent to the customer. */
            isPslipRequired: boolean;
            /** @description When true, this order is part of a scheduled delivery program. */
            isScheduledDeliveryShipment?: boolean;
            /** @description Message to customer for order status. */
            messageToCustomer: string;
            shipmentDates: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ShipmentDates"];
            /** @description Ship method to be used for shipping the order. Amazon defines ship method codes indicating the shipping carrier and shipment service level. To see the full list of ship methods in use, including both the code and the friendly name, search the 'Help' section on Vendor Central for 'ship methods'. */
            shipMethod: string;
        };
        /** @description The request schema for the submitAcknowledgement operation. */
        "vendorDirectFulfillmentOrders_2021-12-28_SubmitAcknowledgementRequest": {
            /** @description A list of one or more purchase orders. */
            orderAcknowledgements?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_OrderAcknowledgementItem"][];
        };
        /** @description The response schema for the submitAcknowledgement operation. */
        "vendorDirectFulfillmentOrders_2021-12-28_SubmitAcknowledgementResponse": {
            errors?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TransactionId"];
        };
        /** @description The tax details for the order.
         *     _Note:_ Amazon calculates tax on the list price (Amazon retail price). */
        "vendorDirectFulfillmentOrders_2021-12-28_TaxDetails": {
            taxableAmount?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Money"];
            taxAmount: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Money"];
            taxRate?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Decimal"];
            /**
             * @description Tax type.
             * @enum {string}
             */
            type?: "CONSUMPTION" | "GST" | "MwSt." | "PST" | "TOTAL" | "TVA" | "VAT";
        };
        /** @description Total tax details for the line item. */
        "vendorDirectFulfillmentOrders_2021-12-28_TaxItemDetails": {
            taxLineItem?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TaxLineItem"];
        };
        /** @description A list of tax line items. */
        "vendorDirectFulfillmentOrders_2021-12-28_TaxLineItem": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TaxDetails"][];
        /** @description Tax registration details of the entity. */
        "vendorDirectFulfillmentOrders_2021-12-28_TaxRegistrationDetails": {
            taxRegistrationAddress?: components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            taxRegistrationMessages?: string;
            /** @description Tax registration number for the party. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType?: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        "vendorDirectFulfillmentOrders_2021-12-28_TransactionId": {
            /** @description GUID assigned by Amazon to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Status of acknowledgement. */
        vendorDirectFulfillmentOrdersV1_AcknowledgementStatus: {
            /** @description Acknowledgement code is a unique two digit value which indicates the status of the acknowledgement. For a list of acknowledgement codes that Amazon supports, see the Vendor Direct Fulfillment APIs Use Case Guide. */
            code?: string;
            /** @description Reason for the acknowledgement code. */
            description?: string;
        };
        /** @description Address of the party. */
        vendorDirectFulfillmentOrdersV1_Address: {
            /** @description First line of the address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine1: string;
            /** @description Additional address information, if required. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine2?: string;
            /** @description Additional address information, if required. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            addressLine3?: string;
            /** @description The attention name of the person at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            attention?: string;
            /** @description The city where the person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            county?: string;
            /** @description The district where person, business or institution is located. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            district?: string;
            /** @description The name of the person, business or institution at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. For Amazon label only vendors, this field will have the value `xxxxx` within the object `shipToParty`. */
            phone?: string;
            /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion: string;
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. */
        vendorDirectFulfillmentOrdersV1_Decimal: string;
        /** @description Error response returned when the request is unsuccessful. */
        vendorDirectFulfillmentOrdersV1_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorDirectFulfillmentOrdersV1_ErrorList: components["schemas"]["vendorDirectFulfillmentOrdersV1_Error"][];
        /** @description The response schema for the getOrder operation. */
        vendorDirectFulfillmentOrdersV1_GetOrderResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentOrdersV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Order"];
        };
        /** @description The response schema for the getOrders operation. */
        vendorDirectFulfillmentOrdersV1_GetOrdersResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentOrdersV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentOrdersV1_OrderList"];
        };
        /** @description Gift details for the item. */
        vendorDirectFulfillmentOrdersV1_GiftDetails: {
            /** @description Gift message to be printed in shipment. */
            giftMessage?: string;
            /** @description Gift wrap identifier for the gift wrapping, if any. */
            giftWrapId?: string;
        };
        /** @description Details of quantity ordered. */
        vendorDirectFulfillmentOrdersV1_ItemQuantity: {
            /** @description Acknowledged quantity. This value should not be zero. */
            amount?: number;
            /**
             * @description Unit of measure for the acknowledged quantity.
             * @enum {string}
             */
            unitOfMeasure?: "Each";
        };
        /** @description An amount of money, including units in the form of currency. */
        vendorDirectFulfillmentOrdersV1_Money: {
            amount?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Decimal"];
            /** @description Three digit currency code in ISO 4217 format. String of length 3. */
            currencyCode?: string;
        };
        /** @description Represents a purchase order. */
        vendorDirectFulfillmentOrdersV1_Order: {
            orderDetails?: components["schemas"]["vendorDirectFulfillmentOrdersV1_OrderDetails"];
            /** @description The purchase order number for this order. Formatting Notes: alpha-numeric code. */
            purchaseOrderNumber: string;
        };
        /** @description Details of an individual order being acknowledged. */
        vendorDirectFulfillmentOrdersV1_OrderAcknowledgementItem: {
            /**
             * Format: date-time
             * @description The date and time when the order is acknowledged, in ISO-8601 date/time format. For example: 2018-07-16T23:00:00Z / 2018-07-16T23:00:00-05:00 / 2018-07-16T23:00:00-08:00.
             */
            acknowledgementDate: string;
            acknowledgementStatus: components["schemas"]["vendorDirectFulfillmentOrdersV1_AcknowledgementStatus"];
            /** @description Item details including acknowledged quantity. */
            itemAcknowledgements: components["schemas"]["vendorDirectFulfillmentOrdersV1_OrderItemAcknowledgement"][];
            /** @description The purchase order number for this order. Formatting Notes: alpha-numeric code. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_PartyIdentification"];
            /** @description The vendor's order number for this order. */
            vendorOrderNumber: string;
        };
        /** @description Details of an order. */
        vendorDirectFulfillmentOrdersV1_OrderDetails: {
            billToParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_PartyIdentification"];
            /** @description The customer order number. */
            customerOrderNumber: string;
            /** @description A list of items in this purchase order. */
            items: components["schemas"]["vendorDirectFulfillmentOrdersV1_OrderItem"][];
            /**
             * Format: date-time
             * @description The date the order was placed. This field is expected to be in ISO-8601 date/time format, for example:2018-07-16T23:00:00Z/ 2018-07-16T23:00:00-05:00 /2018-07-16T23:00:00-08:00. If no time zone is specified, UTC should be assumed.
             */
            orderDate: string;
            /**
             * @description Current status of the order.
             * @enum {string}
             */
            orderStatus?: "NEW" | "SHIPPED" | "ACCEPTED" | "CANCELLED";
            sellingParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_PartyIdentification"];
            shipmentDetails: components["schemas"]["vendorDirectFulfillmentOrdersV1_ShipmentDetails"];
            shipToParty: components["schemas"]["vendorDirectFulfillmentOrdersV1_Address"];
            /** @description The total Tax object within shipment that relates to the order. */
            taxTotal?: {
                taxLineItem?: components["schemas"]["vendorDirectFulfillmentOrdersV1_TaxLineItem"];
            };
        };
        /** @description An item within an order */
        vendorDirectFulfillmentOrdersV1_OrderItem: {
            /** @description Buyer's standard identification number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            giftDetails?: components["schemas"]["vendorDirectFulfillmentOrdersV1_GiftDetails"];
            /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
            itemSequenceNumber: string;
            netPrice: components["schemas"]["vendorDirectFulfillmentOrdersV1_Money"];
            orderedQuantity: components["schemas"]["vendorDirectFulfillmentOrdersV1_ItemQuantity"];
            scheduledDeliveryShipment?: components["schemas"]["vendorDirectFulfillmentOrdersV1_ScheduledDeliveryShipment"];
            /** @description Total tax details for the line item. */
            taxDetails?: {
                taxLineItem?: components["schemas"]["vendorDirectFulfillmentOrdersV1_TaxLineItem"];
            };
            /** @description Title for the item. */
            title?: string;
            totalPrice?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Money"];
            /** @description The vendor selected product identification of the item. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of an individual item within the order being acknowledged. */
        vendorDirectFulfillmentOrdersV1_OrderItemAcknowledgement: {
            acknowledgedQuantity: components["schemas"]["vendorDirectFulfillmentOrdersV1_ItemQuantity"];
            /** @description Buyer's standard identification number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            /** @description Line item sequence number for the item. */
            itemSequenceNumber: string;
            /** @description The vendor selected product identification of the item. Should be the same as was provided in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description A list of purchase orders returned as response. */
        vendorDirectFulfillmentOrdersV1_OrderList: {
            /** @description Represents a purchase order within the OrderList. */
            orders?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Order"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Pagination"];
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        vendorDirectFulfillmentOrdersV1_Pagination: {
            /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return. */
            nextToken?: string;
        };
        /** @description Name, address and tax details of a party. */
        vendorDirectFulfillmentOrdersV1_PartyIdentification: {
            address?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Address"];
            /** @description Assigned identification for the party. For example, warehouse code or vendor code. Please refer to specific party for more details. */
            partyId: string;
            taxInfo?: components["schemas"]["vendorDirectFulfillmentOrdersV1_TaxRegistrationDetails"];
        };
        /** @description Dates for the scheduled delivery shipments. */
        vendorDirectFulfillmentOrdersV1_ScheduledDeliveryShipment: {
            /**
             * Format: date-time
             * @description Earliest nominated delivery date for the scheduled delivery.
             */
            earliestNominatedDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Latest nominated delivery date for the scheduled delivery.
             */
            latestNominatedDeliveryDate?: string;
            /** @description Scheduled delivery service type. */
            scheduledDeliveryServiceType?: string;
        };
        /** @description Shipment dates. */
        vendorDirectFulfillmentOrdersV1_ShipmentDates: {
            /**
             * Format: date-time
             * @description Delivery date promised to the Amazon customer.
             */
            promisedDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Time by which the vendor is required to ship the order.
             */
            requiredShipDate: string;
        };
        /** @description Shipment details required for the shipment. */
        vendorDirectFulfillmentOrdersV1_ShipmentDetails: {
            /** @description When true, the order contain a gift. Include the gift message and gift wrap information. */
            isGift?: boolean;
            /** @description When true, this is a priority shipment. */
            isPriorityShipment: boolean;
            /** @description When true, a packing slip is required to be sent to the customer. */
            isPslipRequired: boolean;
            /** @description When true, this order is part of a scheduled delivery program. */
            isScheduledDeliveryShipment?: boolean;
            /** @description Message to customer for order status. */
            messageToCustomer: string;
            shipmentDates: components["schemas"]["vendorDirectFulfillmentOrdersV1_ShipmentDates"];
            /** @description Ship method to be used for shipping the order. Amazon defines ship method codes indicating the shipping carrier and shipment service level. To see the full list of ship methods in use, including both the code and the friendly name, search the 'Help' section on Vendor Central for 'ship methods'. */
            shipMethod: string;
        };
        /** @description The request schema for the submitAcknowledgement operation. */
        vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementRequest: {
            /** @description A list of one or more purchase orders. */
            orderAcknowledgements?: components["schemas"]["vendorDirectFulfillmentOrdersV1_OrderAcknowledgementItem"][];
        };
        /** @description The response schema for the submitAcknowledgement operation. */
        vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentOrdersV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentOrdersV1_TransactionId"];
        };
        /** @description The tax details for the order.
         *     _Note:_ Amazon calculates tax on the list price (Amazon retail price). */
        vendorDirectFulfillmentOrdersV1_TaxDetails: {
            taxableAmount?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Money"];
            taxAmount: components["schemas"]["vendorDirectFulfillmentOrdersV1_Money"];
            taxRate?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Decimal"];
            /**
             * @description Tax type.
             * @enum {string}
             */
            type?: "CONSUMPTION" | "GST" | "MwSt." | "PST" | "TOTAL" | "TVA" | "VAT";
        };
        /** @description A list of tax line items. */
        vendorDirectFulfillmentOrdersV1_TaxLineItem: components["schemas"]["vendorDirectFulfillmentOrdersV1_TaxDetails"][];
        /** @description Tax registration details of the entity. */
        vendorDirectFulfillmentOrdersV1_TaxRegistrationDetails: {
            taxRegistrationAddress?: components["schemas"]["vendorDirectFulfillmentOrdersV1_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            taxRegistrationMessages?: string;
            /** @description Tax registration number for the party. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType?: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        vendorDirectFulfillmentOrdersV1_TransactionId: {
            /** @description GUID assigned by Amazon to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description A field where the selling party can provide additional information for tax-related or any other purposes. */
        vendorDirectFulfillmentPaymentsV1_AdditionalDetails: {
            /** @description The detail of the additional information provided by the selling party. */
            detail: string;
            /** @description The language code of the additional information detail. */
            languageCode?: string;
            /**
             * @description The type of the additional information provided by the selling party.
             * @enum {string}
             */
            type: "SUR" | "OCR";
        };
        /** @description Address of the party. */
        vendorDirectFulfillmentPaymentsV1_Address: {
            /** @description First line of the address. */
            addressLine1: string;
            /** @description Additional street address information, if required. */
            addressLine2?: string;
            /** @description Additional street address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city: string;
            /** @description The two digit country code in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion: string;
        };
        /** @description Monetary and tax details of the charge. */
        vendorDirectFulfillmentPaymentsV1_ChargeDetails: {
            chargeAmount: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Money"];
            /** @description Individual tax details per line item. */
            taxDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_TaxDetail"][];
            /**
             * @description Type of charge applied.
             * @enum {string}
             */
            type: "GIFTWRAP" | "FULFILLMENT" | "MARKETINGINSERT" | "PACKAGING" | "LOADING" | "FREIGHTOUT" | "TAX_COLLECTED_AT_SOURCE";
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
        vendorDirectFulfillmentPaymentsV1_Decimal: string;
        /** @description Error response returned when the request is unsuccessful. */
        vendorDirectFulfillmentPaymentsV1_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorDirectFulfillmentPaymentsV1_ErrorList: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Error"][];
        /** @description Represents the details of an invoice, including invoice number, date, parties involved, payment terms, totals, taxes, charges, and line items. */
        vendorDirectFulfillmentPaymentsV1_InvoiceDetail: {
            /** @description Additional details provided by the selling party, for tax-related or other purposes. */
            additionalDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_AdditionalDetails"][];
            billToParty?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_PartyIdentification"];
            /** @description Total charge amount details for all line items. */
            chargeDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_ChargeDetails"][];
            /**
             * Format: date-time
             * @description Invoice date.
             */
            invoiceDate: string;
            /** @description The unique invoice number. */
            invoiceNumber: string;
            invoiceTotal: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Money"];
            /** @description Provides the details of the items in this invoice. */
            items: components["schemas"]["vendorDirectFulfillmentPaymentsV1_InvoiceItem"][];
            /** @description The payment terms for the invoice. */
            paymentTermsCode?: string;
            /** @description An additional unique reference number used for regulatory or other purposes. */
            referenceNumber?: string;
            remitToParty: components["schemas"]["vendorDirectFulfillmentPaymentsV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentPaymentsV1_PartyIdentification"];
            /** @description Ship-to country code. */
            shipToCountryCode?: string;
            /** @description Individual tax details per line item. */
            taxTotals?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_TaxDetail"][];
        };
        /** @description Provides the details of the items in this invoice. */
        vendorDirectFulfillmentPaymentsV1_InvoiceItem: {
            /** @description Buyer's standard identification number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            /** @description Individual charge details per line item. */
            chargeDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_ChargeDetails"][];
            /** @description Harmonized System of Nomenclature (HSN) tax code. The HSN number cannot contain alphabets. */
            hsnCode?: string;
            invoicedQuantity: components["schemas"]["vendorDirectFulfillmentPaymentsV1_ItemQuantity"];
            /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
            itemSequenceNumber: string;
            netCost: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Money"];
            /** @description The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber: string;
            /** @description Individual tax details per line item. */
            taxDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_TaxDetail"][];
            /** @description The vendor's order number for this order. */
            vendorOrderNumber?: string;
            /** @description The vendor selected product identification of the item. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of item quantity. */
        vendorDirectFulfillmentPaymentsV1_ItemQuantity: {
            /** @description Quantity of units available for a specific item. */
            amount: number;
            /** @description Unit of measure for the available quantity. */
            unitOfMeasure: string;
        };
        /** @description An amount of money, including units in the form of currency. */
        vendorDirectFulfillmentPaymentsV1_Money: {
            amount: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Decimal"];
            /** @description Three digit currency code in ISO 4217 format. */
            currencyCode: string;
        };
        /** @description Name, address and tax details of a party. */
        vendorDirectFulfillmentPaymentsV1_PartyIdentification: {
            address?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Address"];
            /** @description Assigned Identification for the party. */
            partyId: string;
            /** @description Tax registration details of the entity. */
            taxRegistrationDetails?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_TaxRegistrationDetail"][];
        };
        /** @description The request schema for the submitInvoice operation. */
        vendorDirectFulfillmentPaymentsV1_SubmitInvoiceRequest: {
            /** @description An array of invoice details to be submitted. */
            invoices?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_InvoiceDetail"][];
        };
        /** @description The response schema for the submitInvoice operation. */
        vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_TransactionReference"];
        };
        /** @description Details of tax amount applied. */
        vendorDirectFulfillmentPaymentsV1_TaxDetail: {
            taxableAmount?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Money"];
            taxAmount: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Money"];
            taxRate?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Decimal"];
            /**
             * @description Type of the tax applied.
             * @enum {string}
             */
            taxType: "CGST" | "SGST" | "CESS" | "UTGST" | "IGST" | "MwSt." | "PST" | "TVA" | "VAT" | "GST" | "ST" | "Consumption" | "MutuallyDefined" | "DomesticVAT";
        };
        /** @description Tax registration details of the entity. */
        vendorDirectFulfillmentPaymentsV1_TaxRegistrationDetail: {
            taxRegistrationAddress?: components["schemas"]["vendorDirectFulfillmentPaymentsV1_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            taxRegistrationMessage?: string;
            /** @description Tax registration number for the entity. For example, VAT ID, Consumption Tax ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType?: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        vendorDirectFulfillmentPaymentsV1_TransactionReference: {
            /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Error response returned when the request is unsuccessful. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList": {
            /** @description An array of individual error objects containing error details. */
            errors: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_Error"][];
        };
        /** @description The request body for the generateOrderScenarios operation. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_GenerateOrderScenarioRequest": {
            /** @description The list of test orders requested as indicated by party identifiers. */
            orders?: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_OrderScenarioRequest"][];
        };
        /** @description The party identifiers required to generate the test data. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_OrderScenarioRequest": {
            sellingParty: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_PartyIdentification"];
        };
        /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_Pagination": {
            /** @description A generated token to be passed in the next request to retrieve the next set of results. */
            nextToken?: string;
        };
        /** @description The identification object for the party information. For example, warehouse code or vendor code. Please refer to specific party for more details. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_PartyIdentification": {
            /** @description Assigned identification for the party. For example, warehouse code or vendor code. Please refer to specific party for more details. */
            partyId: string;
        };
        /** @description A scenario test case response returned when the request is successful. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_Scenario": {
            /** @description A list of orders that can be used by the caller to test each life cycle or scenario. */
            orders: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_TestOrder"][];
            /** @description An identifier that identifies the type of scenario that user can use for testing. */
            scenarioId: string;
        };
        /** @description The set of test case data returned in response to the test data request. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_TestCaseData": {
            /** @description Set of use cases that describes the possible test scenarios. */
            scenarios?: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_Scenario"][];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_TestOrder": {
            /** @description An error code that identifies the type of error that occurred. */
            orderId: string;
        };
        /** @description The transaction details including the status. If the transaction was successful, also includes the requested test order data. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_Transaction": {
            /**
             * @description The current processing status of the transaction.
             * @enum {string}
             */
            status: "FAILURE" | "PROCESSING" | "SUCCESS";
            testCaseData?: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_TestCaseData"];
            /** @description The unique identifier returned in the response to the generateOrderScenarios request. */
            transactionId: string;
        };
        /** @description A GUID assigned by Amazon to identify this transaction. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_TransactionReference": {
            /** @description A GUID (Globally Unique Identifier) assigned by Amazon to uniquely identify the transaction. */
            transactionId?: string;
        };
        /** @description The payload for the getOrderScenarios operation. */
        "vendorDirectFulfillmentSandboxData_2021-10-28_TransactionStatus": {
            transactionStatus?: components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_Transaction"];
        };
        /** @description Address of the party. */
        "vendorDirectFulfillmentShipping_2021-12-28_Address": {
            /** @description First line of the address. */
            addressLine1: string;
            /** @description Additional street address information, if required. */
            addressLine2?: string;
            /** @description Additional street address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two-letter country code in [ISO 3166-1 alpha-2](https://www.iban.com/country-codes) format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion?: string;
        };
        /**
         * @description The unique carrier code for the carrier for whom container labels are requested.
         * @enum {string}
         */
        "vendorDirectFulfillmentShipping_2021-12-28_CarrierId": "SWA";
        /** @description A container used for shipping and packing items. */
        "vendorDirectFulfillmentShipping_2021-12-28_Container": {
            /** @description Carrier required for EU VOC vendors only. */
            carrier?: string;
            /** @description The container identifier. */
            containerIdentifier: string;
            /** @description An integer that must be submitted for multi-box shipments only, where one item may come in separate packages. */
            containerSequenceNumber?: number;
            /**
             * @description The type of container.
             * @enum {string}
             */
            containerType: "Carton" | "Pallet";
            dimensions?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Dimensions"];
            /** @description The date of the manifest. */
            manifestDate?: string;
            /** @description The manifest identifier. */
            manifestId?: string;
            /** @description A list of packed items. */
            packedItems: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PackedItem"][];
            /** @description SCAC code required for NA VOC vendors only. */
            scacCode?: string;
            /** @description The shipment method. This property is required when calling the `submitShipmentConfirmations` operation, and optional otherwise. */
            shipMethod?: string;
            /** @description The tracking number. */
            trackingNumber?: string;
            weight: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Weight"];
        };
        /** @description The details of the container label. */
        "vendorDirectFulfillmentShipping_2021-12-28_ContainerLabel": {
            /** @description The container (pallet) tracking identifier from the shipping carrier. */
            containerTrackingNumber?: string;
            /** @description The container label content encoded into a Base64 string. */
            content: string;
            format: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ContainerLabelFormat"];
        };
        /**
         * @description The format of the container label.
         * @enum {string}
         */
        "vendorDirectFulfillmentShipping_2021-12-28_ContainerLabelFormat": "PNG" | "ZPL";
        /** @description The request body schema for the `createContainerLabel` operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_CreateContainerLabelRequest": {
            carrierId: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CarrierId"];
            packages: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Packages"];
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            vendorContainerId: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_VendorContainerId"];
        };
        /** @description The response schema for the `createContainerLabel` operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_CreateContainerLabelResponse": {
            containerLabel: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ContainerLabel"];
        };
        /** @description The request body for the createShippingLabels operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_CreateShippingLabelsRequest": {
            /** @description A list of the packages in this shipment. */
            containers?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Container"][];
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
        };
        /** @description Represents a customer invoice associated with a purchase order. */
        "vendorDirectFulfillmentShipping_2021-12-28_CustomerInvoice": {
            /** @description The Base64 customer invoice. */
            content: string;
            /** @description The purchase order number for this order. */
            purchaseOrderNumber: string;
        };
        /** @description Represents a list of customer invoices, potentially paginated. */
        "vendorDirectFulfillmentShipping_2021-12-28_CustomerInvoiceList": {
            /** @description Represents a customer invoice within the `CustomerInvoiceList`. */
            customerInvoices?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CustomerInvoice"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Pagination"];
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation.  <br>**Pattern** : `^-?(0|([1-9]\\d*))(\\.\\d+)?([eE][+-]?\\d+)?$`. */
        "vendorDirectFulfillmentShipping_2021-12-28_Decimal": string;
        /** @description Physical dimensional measurements of a container. */
        "vendorDirectFulfillmentShipping_2021-12-28_Dimensions": {
            height: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Decimal"];
            length: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Decimal"];
            /**
             * @description The unit of measure for dimensions.
             * @enum {string}
             */
            unitOfMeasure: "IN" | "CM";
            width: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Decimal"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "vendorDirectFulfillmentShipping_2021-12-28_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "vendorDirectFulfillmentShipping_2021-12-28_ErrorList": {
            /** @description An array of Error objects representing individual errors encountered during the request. */
            errors: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Error"][];
        };
        /** @description Details of the item being shipped. */
        "vendorDirectFulfillmentShipping_2021-12-28_Item": {
            /** @description The buyer's Amazon Standard Identification Number (ASIN) of an item. Either `buyerProductIdentifier` or `vendorProductIdentifier` is required. */
            buyerProductIdentifier?: string;
            /** @description The sequence number of the item. The number must be the same as the order number of the item. */
            itemSequenceNumber: number;
            shippedQuantity: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ItemQuantity"];
            /** @description An item's product identifier, which the vendor selects. This identifier should be the same as the identifier, such as a SKU, in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of item quantity. */
        "vendorDirectFulfillmentShipping_2021-12-28_ItemQuantity": {
            /** @description Quantity of units shipped for a specific item at a shipment level. If the item is present only in certain packages or pallets within the shipment, please provide this at the appropriate package or pallet level. */
            amount: number;
            /** @description Unit of measure for the shipped quantity. */
            unitOfMeasure: string;
        };
        /** @description Details of the shipment label. */
        "vendorDirectFulfillmentShipping_2021-12-28_LabelData": {
            /** @description This field will contain the Base64 string of the shipment label content. */
            content: string;
            /** @description Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level. */
            packageIdentifier?: string;
            /** @description Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation. */
            shipMethod?: string;
            /** @description Shipping method name for internal reference. */
            shipMethodName?: string;
            /** @description Package tracking identifier from the shipping carrier. */
            trackingNumber?: string;
        };
        /** @description The package that is associated with the container. */
        "vendorDirectFulfillmentShipping_2021-12-28_Package": {
            /** @description The tracking number on the label of shipment package, that you can fetch from the `shippingLabels` response. You can also scan the bar code on the shipping label to get the tracking number. */
            packageTrackingNumber: string;
        };
        /** @description An array of package objects in a container. */
        "vendorDirectFulfillmentShipping_2021-12-28_Packages": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Package"][];
        /** @description An item that has been packed into a container for shipping. */
        "vendorDirectFulfillmentShipping_2021-12-28_PackedItem": {
            /** @description The buyer's Amazon Standard Identification Number (ASIN) of an item. Either `buyerProductIdentifier` or `vendorProductIdentifier` is required. */
            buyerProductIdentifier?: string;
            /** @description The sequence number of the item. The number must be the same as the order number of the item. */
            itemSequenceNumber: number;
            packedQuantity: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ItemQuantity"];
            /** @description The piece number of the item in this container. This is required when the item is split across different containers. */
            pieceNumber?: number;
            /** @description An item's product identifier, which the vendor selects. This identifier should be the same as the identifier, such as a SKU, in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Packing slip information. */
        "vendorDirectFulfillmentShipping_2021-12-28_PackingSlip": {
            /** @description A Base64 string of the packing slip PDF. */
            content: string;
            /**
             * @description The format of the file such as PDF, JPEG etc.
             * @enum {string}
             */
            contentType?: "application/pdf";
            /** @description Purchase order number of the shipment that the packing slip is for. */
            purchaseOrderNumber: string;
        };
        /** @description A list of packing slips. */
        "vendorDirectFulfillmentShipping_2021-12-28_PackingSlipList": {
            /** @description An array of packing slip objects. */
            packingSlips?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PackingSlip"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Pagination"];
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        "vendorDirectFulfillmentShipping_2021-12-28_Pagination": {
            /** @description Pagination occurs when a request produces a response that exceeds the `pageSize`. This means that the response is divided into individual pages. To retrieve the next page or the previous page, you must pass the `nextToken` value or the `previousToken` value as the `pageToken` parameter in the next request. There is no `nextToken` in the pagination object on the last page. */
            nextToken?: string;
        };
        /** @description The name, address, and tax details of a party. */
        "vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification": {
            address?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Address"];
            /** @description The identifier of the party. */
            partyId: string;
            /** @description The tax registration details of the party. */
            taxRegistrationDetails?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_TaxRegistrationDetails"][];
        };
        /** @description Represents the confirmation details of a shipment, including the purchase order number and other shipment details. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShipmentConfirmation": {
            /** @description Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package. */
            containers?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Container"][];
            /** @description Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package. */
            items: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Item"][];
            /** @description Purchase order number corresponding to the shipment. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipmentDetails: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShipmentDetails"];
        };
        /** @description Details about a shipment. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShipmentDetails": {
            /**
             * Format: date-time
             * @description The date on which the shipment is expected to reach the buyer's warehouse. The date is estimated based on the average transit time between the ship-from location and the destination. Usually, the exact appointment time is unknown when creating the shipment confirmation and is later provided by the buyer.
             */
            estimatedDeliveryDate?: string;
            /** @description Provide the priority of the shipment. */
            isPriorityShipment?: boolean;
            /**
             * @description The shipment status.
             * @enum {string}
             */
            shipmentStatus: "SHIPPED" | "FLOOR_DENIAL";
            /**
             * Format: date-time
             * @description The date of the shipment's departure from vendor's location. Vendors send ASNs within 30 minutes of departure from their warehouse/distribution center or six hours prior to the appointment time at the Amazon destination warehouse. The shipped date mentioned in the shipment confirmation cannot be in the future.
             */
            shippedDate: string;
            /** @description The vendor order number is a unique identifier generated by a vendor for their reference. */
            vendorOrderNumber?: string;
        };
        /** @description Details about the estimated delivery window. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShipmentSchedule": {
            /**
             * Format: date-time
             * @description The date and time at the end of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
             */
            apptWindowEndDateTime?: string;
            /**
             * Format: date-time
             * @description The date and time at the start of the appointment window when the shipment is expected to be delivered. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
             */
            apptWindowStartDateTime?: string;
            /**
             * Format: date-time
             * @description Date on which the shipment is expected to reach the customer delivery location. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
             */
            estimatedDeliveryDateTime?: string;
        };
        /** @description Represents an update to the status of a shipment. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShipmentStatusUpdate": {
            /** @description Purchase order number of the shipment for which to update the shipment status. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            statusUpdateDetails: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_StatusUpdateDetails"];
        };
        /** @description Shipping label information for an order, including the purchase order number, selling party, ship from party, label format, and package details. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShippingLabel": {
            /** @description Provides the details of the packages in this shipment. */
            labelData: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_LabelData"][];
            /**
             * @description Format of the label.
             * @enum {string}
             */
            labelFormat: "PNG" | "ZPL";
            /** @description This field will contain the Purchase Order Number for this order. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
        };
        /** @description Response payload with the list of shipping labels. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShippingLabelList": {
            pagination?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Pagination"];
            /** @description An array containing the details of the generated shipping labels. */
            shippingLabels?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShippingLabel"][];
        };
        /** @description Represents the request payload for creating a shipping label, containing the purchase order number, selling party, ship from party, and a list of containers or packages in the shipment. */
        "vendorDirectFulfillmentShipping_2021-12-28_ShippingLabelRequest": {
            /** @description A list of the packages in this shipment. */
            containers?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Container"][];
            /** @description The purchase order number of the order for which to create a shipping label. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PartyIdentification"];
        };
        /** @description Details for the shipment status update given by the vendor for the specific package. */
        "vendorDirectFulfillmentShipping_2021-12-28_StatusUpdateDetails": {
            /** @description Provides a reason code for the status of the package that will provide additional information about the transportation status. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). */
            reasonCode: string;
            shipmentSchedule?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShipmentSchedule"];
            /** @description Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). */
            statusCode: string;
            /**
             * Format: date-time
             * @description The date and time when the shipment status was updated. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
             */
            statusDateTime: string;
            statusLocationAddress: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Address"];
            /** @description The shipment tracking number is required for every package and should match the `trackingNumber` sent for the shipment confirmation. */
            trackingNumber: string;
        };
        /** @description The request schema for the submitShipmentConfirmations operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_SubmitShipmentConfirmationsRequest": {
            /** @description Array of `ShipmentConfirmation` objects. Each `ShipmentConfirmation` object represents the confirmation details for a specific shipment. */
            shipmentConfirmations?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShipmentConfirmation"][];
        };
        /** @description The request schema for the `submitShipmentStatusUpdates` operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_SubmitShipmentStatusUpdatesRequest": {
            /** @description Contains a list of one or more `ShipmentStatusUpdate` objects. Each `ShipmentStatusUpdate` object represents an update to the status of a specific shipment. */
            shipmentStatusUpdates?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShipmentStatusUpdate"][];
        };
        /** @description The request schema for the `submitShippingLabelRequest` operation. */
        "vendorDirectFulfillmentShipping_2021-12-28_SubmitShippingLabelsRequest": {
            /** @description An array of shipping label requests to be processed. */
            shippingLabelRequests?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShippingLabelRequest"][];
        };
        /** @description Tax registration details of the entity. */
        "vendorDirectFulfillmentShipping_2021-12-28_TaxRegistrationDetails": {
            taxRegistrationAddress?: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            taxRegistrationMessages?: string;
            /** @description Tax registration number for the party. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType?: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        "vendorDirectFulfillmentShipping_2021-12-28_TransactionReference": {
            /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description The unique, vendor-provided identifier for the container. */
        "vendorDirectFulfillmentShipping_2021-12-28_VendorContainerId": string;
        /** @description The weight. */
        "vendorDirectFulfillmentShipping_2021-12-28_Weight": {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unitOfMeasure: "KG" | "LB";
            value: components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_Decimal"];
        };
        /** @description Address of the party. */
        vendorDirectFulfillmentShippingV1_Address: {
            /** @description First line of the address. */
            addressLine1: string;
            /** @description Additional street address information, if required. */
            addressLine2?: string;
            /** @description Additional street address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two digit country code in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description A container used for shipping and packing items. */
        vendorDirectFulfillmentShippingV1_Container: {
            /** @description Carrier required for EU VOC vendors only. */
            carrier?: string;
            /** @description The container identifier. */
            containerIdentifier: string;
            /** @description An integer that must be submitted for multi-box shipments only, where one item may come in separate packages. */
            containerSequenceNumber?: number;
            /**
             * @description The type of container.
             * @enum {string}
             */
            containerType: "carton" | "pallet";
            dimensions?: components["schemas"]["vendorDirectFulfillmentShippingV1_Dimensions"];
            /** @description The date of the manifest. */
            manifestDate?: string;
            /** @description The manifest identifier. */
            manifestId?: string;
            /** @description A list of packed items. */
            packedItems: components["schemas"]["vendorDirectFulfillmentShippingV1_PackedItem"][];
            /** @description SCAC code required for NA VOC vendors only. */
            scacCode?: string;
            /** @description The shipment method. */
            shipMethod?: string;
            /** @description The tracking number. */
            trackingNumber?: string;
            weight: components["schemas"]["vendorDirectFulfillmentShippingV1_Weight"];
        };
        /** @description Represents a customer invoice associated with a purchase order. */
        vendorDirectFulfillmentShippingV1_CustomerInvoice: {
            /** @description The Base64encoded customer invoice. */
            content: string;
            /** @description The purchase order number for this order. */
            purchaseOrderNumber: string;
        };
        /** @description Represents a list of customer invoices, potentially paginated. */
        vendorDirectFulfillmentShippingV1_CustomerInvoiceList: {
            /** @description Represents a customer invoice within the CustomerInvoiceList. */
            customerInvoices?: components["schemas"]["vendorDirectFulfillmentShippingV1_CustomerInvoice"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentShippingV1_Pagination"];
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation.  <br>**Pattern** : `^-?(0|([1-9]\\d*))(\\.\\d+)?([eE][+-]?\\d+)?$`. */
        vendorDirectFulfillmentShippingV1_Decimal: string;
        /** @description Physical dimensional measurements of a container. */
        vendorDirectFulfillmentShippingV1_Dimensions: {
            height: components["schemas"]["vendorDirectFulfillmentShippingV1_Decimal"];
            length: components["schemas"]["vendorDirectFulfillmentShippingV1_Decimal"];
            /**
             * @description The unit of measure for dimensions.
             * @enum {string}
             */
            unitOfMeasure: "IN" | "CM";
            width: components["schemas"]["vendorDirectFulfillmentShippingV1_Decimal"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        vendorDirectFulfillmentShippingV1_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorDirectFulfillmentShippingV1_ErrorList: components["schemas"]["vendorDirectFulfillmentShippingV1_Error"][];
        /** @description The response schema for the getCustomerInvoice operation. */
        vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_CustomerInvoice"];
        };
        /** @description The response schema for the getCustomerInvoices operation. */
        vendorDirectFulfillmentShippingV1_GetCustomerInvoicesResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_CustomerInvoiceList"];
        };
        /** @description Response payload with the list of Packing Slips. */
        vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_PackingSlipList"];
        };
        /** @description Response payload with packing slip. */
        vendorDirectFulfillmentShippingV1_GetPackingSlipResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_PackingSlip"];
        };
        /** @description The response schema for the getShippingLabels operation. */
        vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShippingLabelList"];
        };
        /** @description The response schema for the getShippingLabel operation. */
        vendorDirectFulfillmentShippingV1_GetShippingLabelResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShippingLabel"];
        };
        /** @description Details of the item being shipped. */
        vendorDirectFulfillmentShippingV1_Item: {
            /** @description Buyer's Standard Identification Number (ASIN) of an item. Either buyerProductIdentifier or vendorProductIdentifier is required. */
            buyerProductIdentifier?: string;
            /** @description Item Sequence Number for the item. This must be the same value as sent in order for a given item. */
            itemSequenceNumber: number;
            shippedQuantity: components["schemas"]["vendorDirectFulfillmentShippingV1_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order, like SKU Number. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of item quantity. */
        vendorDirectFulfillmentShippingV1_ItemQuantity: {
            /** @description Quantity of units shipped for a specific item at a shipment level. If the item is present only in certain packages or pallets within the shipment, please provide this at the appropriate package or pallet level. */
            amount: number;
            /** @description Unit of measure for the shipped quantity. */
            unitOfMeasure: string;
        };
        /** @description Details of the shipment label. */
        vendorDirectFulfillmentShippingV1_LabelData: {
            /** @description This field will contain the Base64encoded string of the shipment label content. */
            content: string;
            /** @description Identifier for the package. The first package will be 001, the second 002, and so on. This number is used as a reference to refer to this package from the pallet level. */
            packageIdentifier?: string;
            /** @description Ship method to be used for shipping the order. Amazon defines Ship Method Codes indicating shipping carrier and shipment service level. Ship Method Codes are case and format sensitive. The same ship method code should returned on the shipment confirmation. Note that the Ship Method Codes are vendor specific and will be provided to each vendor during the implementation. */
            shipMethod?: string;
            /** @description Shipping method name for internal reference. */
            shipMethodName?: string;
            /** @description Package tracking identifier from the shipping carrier. */
            trackingNumber?: string;
        };
        /** @description Represents an item that has been packed into a container for shipping. */
        vendorDirectFulfillmentShippingV1_PackedItem: {
            /** @description Buyer's Standard Identification Number (ASIN) of an item. Either buyerProductIdentifier or vendorProductIdentifier is required. */
            buyerProductIdentifier?: string;
            /** @description Item Sequence Number for the item. This must be the same value as sent in the order for a given item. */
            itemSequenceNumber: number;
            packedQuantity: components["schemas"]["vendorDirectFulfillmentShippingV1_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the Purchase Order, like SKU Number. */
            vendorProductIdentifier?: string;
        };
        /** @description Packing slip information. */
        vendorDirectFulfillmentShippingV1_PackingSlip: {
            /** @description A Base64encoded string of the packing slip PDF. */
            content: string;
            /**
             * @description The format of the file such as PDF, JPEG etc.
             * @enum {string}
             */
            contentType?: "application/pdf";
            /** @description Purchase order number of the shipment that corresponds to the packing slip. */
            purchaseOrderNumber: string;
        };
        /** @description A list of packing slips. */
        vendorDirectFulfillmentShippingV1_PackingSlipList: {
            /** @description An array of packing slip objects. */
            packingSlips?: components["schemas"]["vendorDirectFulfillmentShippingV1_PackingSlip"][];
            pagination?: components["schemas"]["vendorDirectFulfillmentShippingV1_Pagination"];
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        vendorDirectFulfillmentShippingV1_Pagination: {
            /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more order items to return. */
            nextToken?: string;
        };
        /** @description Name, address and tax details of a party. */
        vendorDirectFulfillmentShippingV1_PartyIdentification: {
            address?: components["schemas"]["vendorDirectFulfillmentShippingV1_Address"];
            /** @description Assigned Identification for the party. */
            partyId: string;
            /** @description Tax registration details of the entity. */
            taxRegistrationDetails?: components["schemas"]["vendorDirectFulfillmentShippingV1_TaxRegistrationDetails"][];
        };
        /** @description Represents the confirmation details of a shipment, including the purchase order number and other shipment details. */
        vendorDirectFulfillmentShippingV1_ShipmentConfirmation: {
            /** @description Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package. */
            containers?: components["schemas"]["vendorDirectFulfillmentShippingV1_Container"][];
            /** @description Provide the details of the items in this shipment. If any of the item details field is common at a package or a pallet level, then provide them at the corresponding package. */
            items: components["schemas"]["vendorDirectFulfillmentShippingV1_Item"][];
            /** @description Purchase order number corresponding to the shipment. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            shipmentDetails: components["schemas"]["vendorDirectFulfillmentShippingV1_ShipmentDetails"];
        };
        /** @description Details about a shipment. */
        vendorDirectFulfillmentShippingV1_ShipmentDetails: {
            /**
             * Format: date-time
             * @description Date on which the shipment is expected to reach the buyer's warehouse. It needs to be an estimate based on the average transit time between the ship-from location and the destination. The exact appointment time will be provided by buyer and is potentially not known when creating the shipment confirmation.
             */
            estimatedDeliveryDate?: string;
            /** @description Provide the priority of the shipment. */
            isPriorityShipment?: boolean;
            /**
             * @description Indicate the shipment status.
             * @enum {string}
             */
            shipmentStatus: "SHIPPED" | "FLOOR_DENIAL";
            /**
             * Format: date-time
             * @description This field indicates the date of the departure of the shipment from vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the Amazon destination warehouse, whichever is sooner. Shipped date mentioned in the Shipment Confirmation should not be in the future.
             */
            shippedDate: string;
            /** @description The vendor order number is a unique identifier generated by a vendor for their reference. */
            vendorOrderNumber?: string;
        };
        /** @description Represents an update to the status of a shipment. */
        vendorDirectFulfillmentShippingV1_ShipmentStatusUpdate: {
            /** @description Purchase order number of the shipment for which to update the shipment status. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            statusUpdateDetails: components["schemas"]["vendorDirectFulfillmentShippingV1_StatusUpdateDetails"];
        };
        /** @description Shipping label information for an order, including the purchase order number, selling party, ship from party, label format, and package details. */
        vendorDirectFulfillmentShippingV1_ShippingLabel: {
            /** @description Provides the details of the packages in this shipment. */
            labelData: components["schemas"]["vendorDirectFulfillmentShippingV1_LabelData"][];
            /**
             * @description Format of the label.
             * @enum {string}
             */
            labelFormat: "PNG" | "ZPL";
            /** @description This field will contain the Purchase Order Number for this order. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
        };
        /** @description Response payload with the list of shipping labels */
        vendorDirectFulfillmentShippingV1_ShippingLabelList: {
            pagination?: components["schemas"]["vendorDirectFulfillmentShippingV1_Pagination"];
            /** @description An array containing the details of the generated shipping labels. */
            shippingLabels?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShippingLabel"][];
        };
        /** @description Represents the request payload for creating a shipping label, containing the purchase order number, selling party, ship from party, and a list of containers or packages in the shipment. */
        vendorDirectFulfillmentShippingV1_ShippingLabelRequest: {
            /** @description A list of the packages in this shipment. */
            containers?: components["schemas"]["vendorDirectFulfillmentShippingV1_Container"][];
            /** @description Purchase order number of the order for which to create a shipping label. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorDirectFulfillmentShippingV1_PartyIdentification"];
        };
        /** @description Details for the shipment status update given by the vendor for the specific package. */
        vendorDirectFulfillmentShippingV1_StatusUpdateDetails: {
            /** @description Provides a reason code for the status of the package that will provide additional information about the transportation status. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). */
            reasonCode: string;
            /** @description Details for the scheduled delivery timeline for a shipment, including the estimated delivery date and time, as well as the start and end times of the appointment window for delivery. */
            shipmentSchedule?: {
                /**
                 * Format: date-time
                 * @description This field indicates the date and time at the end of the appointment window scheduled to deliver the shipment. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
                 */
                apptWindowEndDateTime?: string;
                /**
                 * Format: date-time
                 * @description This field indicates the date and time at the start of the appointment window scheduled to deliver the shipment. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
                 */
                apptWindowStartDateTime?: string;
                /**
                 * Format: date-time
                 * @description Date on which the shipment is expected to reach the customer delivery location. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
                 */
                estimatedDeliveryDateTime?: string;
            };
            /** @description Indicates the shipment status code of the package that provides transportation information for Amazon tracking systems and ultimately for the final customer. For more information, refer to the [Additional Fields Explanation](https://developer-docs.amazon.com/sp-api/docs/vendor-direct-fulfillment-shipping-api-use-case-guide#additional-fields-explanation). */
            statusCode: string;
            /**
             * Format: date-time
             * @description The date and time when the shipment status was updated. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
             */
            statusDateTime: string;
            statusLocationAddress: components["schemas"]["vendorDirectFulfillmentShippingV1_Address"];
            /** @description This is required to be provided for every package and should match with the trackingNumber sent for the shipment confirmation. */
            trackingNumber: string;
        };
        /** @description The request schema for the submitShipmentConfirmations operation. */
        vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsRequest: {
            /** @description Array of ShipmentConfirmation objects, each representing confirmation details for a specific shipment. */
            shipmentConfirmations?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShipmentConfirmation"][];
        };
        /** @description The response schema for the submitShipmentConfirmations operation. */
        vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_TransactionReference"];
        };
        /** @description Represents the request payload for submitting updates to the status of shipments, containing an array of one or more ShipmentStatusUpdate objects. */
        vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesRequest: {
            /** @description Contains a list of one or more ShipmentStatusUpdate objects, each representing an update to the status of a specific shipment. */
            shipmentStatusUpdates?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShipmentStatusUpdate"][];
        };
        /** @description The response schema for the submitShipmentStatusUpdates operation. */
        vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_TransactionReference"];
        };
        /** @description The request schema for the submitShippingLabelRequest operation. */
        vendorDirectFulfillmentShippingV1_SubmitShippingLabelsRequest: {
            /** @description An array of shipping label requests to be processed. */
            shippingLabelRequests?: components["schemas"]["vendorDirectFulfillmentShippingV1_ShippingLabelRequest"][];
        };
        /** @description The response schema for the submitShippingLabelRequest operation. */
        vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentShippingV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentShippingV1_TransactionReference"];
        };
        /** @description Tax registration details of the entity. */
        vendorDirectFulfillmentShippingV1_TaxRegistrationDetails: {
            taxRegistrationAddress?: components["schemas"]["vendorDirectFulfillmentShippingV1_Address"];
            /** @description Tax registration message that can be used for additional tax related details. */
            taxRegistrationMessages?: string;
            /** @description Tax registration number for the party. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType?: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        vendorDirectFulfillmentShippingV1_TransactionReference: {
            /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description The weight. */
        vendorDirectFulfillmentShippingV1_Weight: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unitOfMeasure: "KG" | "LB";
            value: components["schemas"]["vendorDirectFulfillmentShippingV1_Decimal"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        "vendorDirectFulfillmentTransactions_2021-12-28_Error": {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        "vendorDirectFulfillmentTransactions_2021-12-28_ErrorList": {
            /** @description An array of individual error objects containing error details. */
            errors: components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"][];
        };
        /** @description The transaction status details. */
        "vendorDirectFulfillmentTransactions_2021-12-28_Transaction": {
            errors?: components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_ErrorList"];
            /**
             * @description Current processing status of the transaction.
             * @enum {string}
             */
            status: "Failure" | "Processing" | "Success";
            /** @description The unique identifier sent in the 'transactionId' field in response to the post request of a specific transaction. */
            transactionId: string;
        };
        /** @description The payload for the getTransactionStatus operation. */
        "vendorDirectFulfillmentTransactions_2021-12-28_TransactionStatus": {
            transactionStatus?: components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Transaction"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        vendorDirectFulfillmentTransactionsV1_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorDirectFulfillmentTransactionsV1_ErrorList: components["schemas"]["vendorDirectFulfillmentTransactionsV1_Error"][];
        /** @description The response schema for the getTransactionStatus operation. */
        vendorDirectFulfillmentTransactionsV1_GetTransactionResponse: {
            errors?: components["schemas"]["vendorDirectFulfillmentTransactionsV1_ErrorList"];
            payload?: components["schemas"]["vendorDirectFulfillmentTransactionsV1_TransactionStatus"];
        };
        /** @description The transaction status details. */
        vendorDirectFulfillmentTransactionsV1_Transaction: {
            errors?: components["schemas"]["vendorDirectFulfillmentTransactionsV1_ErrorList"];
            /**
             * @description Current processing status of the transaction.
             * @enum {string}
             */
            status: "Failure" | "Processing" | "Success";
            /** @description The unique identifier sent in the 'transactionId' field in response to the post request of a specific transaction. */
            transactionId: string;
        };
        /** @description The payload for the getTransactionStatus operation. */
        vendorDirectFulfillmentTransactionsV1_TransactionStatus: {
            transactionStatus?: components["schemas"]["vendorDirectFulfillmentTransactionsV1_Transaction"];
        };
        /** @description Additional information provided by the selling party for tax-related or any other purpose. */
        vendorInvoices_AdditionalDetails: {
            /** @description The detail of the additional information provided by the selling party. */
            detail: string;
            /** @description The language code of the additional information detail. */
            languageCode?: string;
            /**
             * @description The type of the additional information provided by the selling party.
             * @enum {string}
             */
            type: "SUR" | "OCR" | "CartonCount";
        };
        /** @description A physical address. */
        vendorInvoices_Address: {
            /** @description First line of street address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal or zip code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalOrZipCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description Monetary and tax details of the allowance. */
        vendorInvoices_AllowanceDetails: {
            allowanceAmount: components["schemas"]["vendorInvoices_Money"];
            /** @description Description of the allowance. */
            description?: string;
            /** @description Tax amount details applied on this allowance. */
            taxDetails?: components["schemas"]["vendorInvoices_TaxDetails"][];
            /**
             * @description Type of the allowance applied.
             * @enum {string}
             */
            type: "Discount" | "DiscountIncentive" | "Defective" | "Promotional" | "UnsaleableMerchandise" | "Special";
        };
        /** @description Monetary and tax details of the charge. */
        vendorInvoices_ChargeDetails: {
            chargeAmount: components["schemas"]["vendorInvoices_Money"];
            /** @description Description of the charge. */
            description?: string;
            /** @description Tax amount details applied on this charge. */
            taxDetails?: components["schemas"]["vendorInvoices_TaxDetails"][];
            /**
             * @description Type of the charge applied.
             * @enum {string}
             */
            type: "Freight" | "Packing" | "Duty" | "Service" | "SmallOrder" | "InsurancePlacementCost" | "InsuranceFee" | "SpecialHandlingService" | "CollectionAndRecyclingService" | "EnvironmentalProtectionService" | "TaxCollectedAtSource";
        };
        /** @description References required in order to process a credit note. This information is required only if InvoiceType is CreditNote. */
        vendorInvoices_CreditNoteDetails: {
            /** @description Identifies the consignor reference number (VRET number), if generated by Amazon. */
            consignorsReferenceNumber?: string;
            /** @description Identifies the COOP reference used for COOP agreement. Failure to provide the COOP reference number or the Debit Note number may lead to a rejection of the Credit Note. */
            coopReferenceNumber?: string;
            /** @description Debit Note Number as generated by Amazon. Recommended for Returns and COOP Credit Notes. */
            debitNoteNumber?: string;
            goodsReturnDate?: components["schemas"]["vendorInvoices_DateTime"];
            /** @description Original Invoice Number when sending a credit note relating to an existing invoice. One Invoice only to be processed per Credit Note. This is mandatory for AP Credit Notes. */
            referenceInvoiceNumber?: string;
            /** @description Identifies the Returns Notice Number. Mandatory for all Returns Credit Notes. */
            returnsReferenceNumber?: string;
            /** @description Identifies the Returned Merchandise Authorization ID, if generated. */
            rmaId?: string;
        };
        /**
         * Format: date-time
         * @description Defines a date and time according to ISO8601.
         */
        vendorInvoices_DateTime: string;
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
        vendorInvoices_Decimal: string;
        /** @description Error response returned when the request is unsuccessful. */
        vendorInvoices_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorInvoices_ErrorList: components["schemas"]["vendorInvoices_Error"][];
        /** @description Represents an invoice or credit note document with details about the transaction, parties involved, and line items. */
        vendorInvoices_Invoice: {
            /** @description Additional details provided by the selling party, for tax related or other purposes. */
            additionalDetails?: components["schemas"]["vendorInvoices_AdditionalDetails"][];
            /** @description Total allowance amount details for all line items. */
            allowanceDetails?: components["schemas"]["vendorInvoices_AllowanceDetails"][];
            billToParty?: components["schemas"]["vendorInvoices_PartyIdentification"];
            /** @description Total charge amount details for all line items. */
            chargeDetails?: components["schemas"]["vendorInvoices_ChargeDetails"][];
            date: components["schemas"]["vendorInvoices_DateTime"];
            /** @description Unique number relating to the charges defined in this document. This will be invoice number if the document type is Invoice or CreditNote number if the document type is Credit Note. Failure to provide this reference will result in a rejection. */
            id: string;
            invoiceTotal: components["schemas"]["vendorInvoices_Money"];
            /**
             * @description Identifies the type of invoice.
             * @enum {string}
             */
            invoiceType: "Invoice" | "CreditNote";
            /** @description The list of invoice items. */
            items?: components["schemas"]["vendorInvoices_InvoiceItem"][];
            paymentTerms?: components["schemas"]["vendorInvoices_PaymentTerms"];
            /** @description An additional unique reference number used for regulatory or other purposes. */
            referenceNumber?: string;
            remitToParty: components["schemas"]["vendorInvoices_PartyIdentification"];
            shipFromParty?: components["schemas"]["vendorInvoices_PartyIdentification"];
            shipToParty?: components["schemas"]["vendorInvoices_PartyIdentification"];
            /** @description Total tax amount details for all line items. */
            taxDetails?: components["schemas"]["vendorInvoices_TaxDetails"][];
        };
        /** @description Details of the item being invoiced. */
        vendorInvoices_InvoiceItem: {
            /** @description Individual allowance details per line item. */
            allowanceDetails?: components["schemas"]["vendorInvoices_AllowanceDetails"][];
            /** @description Amazon Standard Identification Number (ASIN) of an item. */
            amazonProductIdentifier?: string;
            /** @description Individual charge details per line item. */
            chargeDetails?: components["schemas"]["vendorInvoices_ChargeDetails"][];
            creditNoteDetails?: components["schemas"]["vendorInvoices_CreditNoteDetails"];
            /** @description HSN Tax code. The HSN number cannot contain alphabets. */
            hsnCode?: string;
            invoicedQuantity: components["schemas"]["vendorInvoices_ItemQuantity"];
            /** @description Unique number related to this line item. */
            itemSequenceNumber: number;
            netCost: components["schemas"]["vendorInvoices_Money"];
            netCostUnitOfMeasure?: components["schemas"]["vendorInvoices_NetCostUnitOfMeasure"];
            /** @description The Amazon purchase order number for this invoiced line item. Formatting Notes: 8-character alpha-numeric code. This value is mandatory only when invoiceType is Invoice, and is not required when invoiceType is CreditNote. */
            purchaseOrderNumber?: string;
            /** @description Individual tax details per line item. */
            taxDetails?: components["schemas"]["vendorInvoices_TaxDetails"][];
            /** @description The vendor selected product identifier of the item. Should be the same as was provided in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of quantity. */
        vendorInvoices_ItemQuantity: {
            /** @description Quantity of an item. This value should not be zero. */
            amount: number;
            totalWeight?: components["schemas"]["vendorInvoices_TotalWeight"];
            /**
             * @description Unit of measure for the quantity.
             * @enum {string}
             */
            unitOfMeasure: "Cases" | "Eaches";
            /** @description The case size, if the unit of measure value is Cases. */
            unitSize?: number;
        };
        /** @description An amount of money, including units in the form of currency. */
        vendorInvoices_Money: {
            amount?: components["schemas"]["vendorInvoices_Decimal"];
            /** @description Three-digit currency code in ISO 4217 format. */
            currencyCode?: string;
        };
        /**
         * @description This field represents weight unit of measure of items that are ordered by cases and supporting priced by weight.
         * @enum {string}
         */
        vendorInvoices_NetCostUnitOfMeasure: "POUNDS" | "OUNCES" | "GRAMS" | "KILOGRAMS";
        /** @description Name, address and tax details of a party. */
        vendorInvoices_PartyIdentification: {
            address?: components["schemas"]["vendorInvoices_Address"];
            /** @description Assigned identification for the party. */
            partyId: string;
            /** @description Tax registration details of the party. */
            taxRegistrationDetails?: components["schemas"]["vendorInvoices_TaxRegistrationDetails"][];
        };
        /** @description Terms of the payment for the invoice. The basis of the payment terms is the invoice date. */
        vendorInvoices_PaymentTerms: {
            /** @description The number of calendar days from the Base date (Invoice date) until the discount is no longer valid. */
            discountDueDays?: number;
            discountPercent?: components["schemas"]["vendorInvoices_Decimal"];
            /** @description The number of calendar days from the base date (invoice date) until the total amount on the invoice is due. */
            netDueDays?: number;
            /**
             * @description The payment term type for the invoice.
             * @enum {string}
             */
            type?: "Basic" | "EndOfMonth" | "FixedDate" | "Proximo" | "PaymentDueUponReceiptOfInvoice" | "LetterofCredit";
        };
        /** @description The request schema for the submitInvoices operation. */
        vendorInvoices_SubmitInvoicesRequest: {
            /** @description An array of Invoice objects representing the invoices or credit notes to be submitted. */
            invoices?: components["schemas"]["vendorInvoices_Invoice"][];
        };
        /** @description The response schema for the submitInvoices operation. */
        vendorInvoices_SubmitInvoicesResponse: {
            errors?: components["schemas"]["vendorInvoices_ErrorList"];
            payload?: components["schemas"]["vendorInvoices_TransactionId"];
        };
        /** @description Details of tax amount applied. */
        vendorInvoices_TaxDetails: {
            taxableAmount?: components["schemas"]["vendorInvoices_Money"];
            taxAmount: components["schemas"]["vendorInvoices_Money"];
            taxRate?: components["schemas"]["vendorInvoices_Decimal"];
            /**
             * @description Type of the tax applied.
             * @enum {string}
             */
            taxType: "CGST" | "SGST" | "CESS" | "UTGST" | "IGST" | "MwSt." | "PST" | "TVA" | "VAT" | "GST" | "ST" | "Consumption" | "MutuallyDefined" | "DomesticVAT";
        };
        /** @description Tax registration details of the entity. */
        vendorInvoices_TaxRegistrationDetails: {
            /** @description The tax registration number for the entity. For example, VAT ID, Consumption Tax ID. */
            taxRegistrationNumber: string;
            /**
             * @description The tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType: "VAT" | "GST";
        };
        /** @description The aggregate weight of this item being invoiced. This information will be available for items sold by weight. */
        vendorInvoices_TotalWeight: {
            amount: components["schemas"]["vendorInvoices_Decimal"];
            /**
             * @description The unit of measure for items sold by weight.
             * @enum {string}
             */
            unitOfMeasure: "POUNDS" | "OUNCES" | "GRAMS" | "KILOGRAMS";
        };
        /** @description Response containing the transaction ID. */
        vendorInvoices_TransactionId: {
            /** @description GUID to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Details of item quantity ordered */
        vendorOrders_AcknowledgementStatusDetails: {
            acceptedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
            /**
             * Format: date-time
             * @description The date when the line item was confirmed by vendor. Must be in ISO-8601 date/time format.
             */
            acknowledgementDate?: string;
            rejectedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
        };
        /** @description Address of the party. */
        vendorOrders_Address: {
            /** @description First line of the address. */
            addressLine1: string;
            /** @description Additional address information, if required. */
            addressLine2?: string;
            /** @description Additional address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It conatins a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description Defines a date time interval according to ISO8601. Interval is separated by double hyphen (--). */
        vendorOrders_DateTimeInterval: string;
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
        vendorOrders_Decimal: string;
        /** @description Error response returned when the request is unsuccessful. */
        vendorOrders_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorOrders_ErrorList: components["schemas"]["vendorOrders_Error"][];
        /** @description The response schema for the getPurchaseOrder operation. */
        vendorOrders_GetPurchaseOrderResponse: {
            errors?: components["schemas"]["vendorOrders_ErrorList"];
            payload?: components["schemas"]["vendorOrders_Order"];
        };
        /** @description The response schema for the getPurchaseOrders operation. */
        vendorOrders_GetPurchaseOrdersResponse: {
            errors?: components["schemas"]["vendorOrders_ErrorList"];
            payload?: components["schemas"]["vendorOrders_OrderList"];
        };
        /** @description The response schema for the getPurchaseOrdersStatus operation. */
        vendorOrders_GetPurchaseOrdersStatusResponse: {
            errors?: components["schemas"]["vendorOrders_ErrorList"];
            payload?: components["schemas"]["vendorOrders_OrderListStatus"];
        };
        /** @description Import details for an import order. */
        vendorOrders_ImportDetails: {
            /** @description Types and numbers of container(s) for import purchase orders. Can be a comma-separated list if the shipment has multiple containers. HC signifies a high-capacity container. Free-text field, limited to 64 characters. The format will be a comma-delimited list containing values of the type: $NUMBER_OF_CONTAINERS_OF_THIS_TYPE-$CONTAINER_TYPE. The list of values for the container type is: 40'(40-foot container), 40'HC (40-foot high-capacity container), 45', 45'HC, 30', 30'HC, 20', 20'HC. */
            importContainers?: string;
            /**
             * @description Incoterms (International Commercial Terms) are used to divide transaction costs and responsibilities between buyer and seller and reflect state-of-the-art transportation practices. This is for import purchase orders only.
             * @enum {string}
             */
            internationalCommercialTerms?: "ExWorks" | "FreeCarrier" | "FreeOnBoard" | "FreeAlongSideShip" | "CarriagePaidTo" | "CostAndFreight" | "CarriageAndInsurancePaidTo" | "CostInsuranceAndFreight" | "DeliveredAtTerminal" | "DeliveredAtPlace" | "DeliverDutyPaid";
            /**
             * @description If the recipient requests, contains the shipment method of payment. This is for import PO's only.
             * @enum {string}
             */
            methodOfPayment?: "PaidByBuyer" | "CollectOnDelivery" | "DefinedByBuyerAndSeller" | "FOBPortOfCall" | "PrepaidBySeller" | "PaidBySeller";
            /** @description The port where goods on an import purchase order must be delivered by the vendor. This should only be specified when the internationalCommercialTerms is FOB. */
            portOfDelivery?: string;
            /** @description Special instructions regarding the shipment. This field is for import purchase orders. */
            shippingInstructions?: string;
        };
        /** @description Details of quantity ordered. */
        vendorOrders_ItemQuantity: {
            /** @description Acknowledged quantity. This value should not be zero. */
            amount?: number;
            /**
             * @description Unit of measure for the acknowledged quantity.
             * @enum {string}
             */
            unitOfMeasure?: "Cases" | "Eaches";
            /** @description The case size, in the event that we ordered using cases. */
            unitSize?: number;
        };
        /** @description Detailed description of items order status. */
        vendorOrders_ItemStatus: components["schemas"]["vendorOrders_OrderItemStatus"][];
        /** @description An amount of money. Includes the currency code and an optional unit of measure for items priced by weight. */
        vendorOrders_Money: {
            amount?: components["schemas"]["vendorOrders_Decimal"];
            /** @description Three digit currency code in ISO 4217 format. String of length 3. */
            currencyCode?: string;
            /**
             * @description The unit of measure for prices of items sold by weight. If this field is absent, the item is sold by eaches.
             * @enum {string}
             */
            unitOfMeasure?: "POUNDS" | "OUNCES" | "GRAMS" | "KILOGRAMS";
        };
        /** @description Represents an order placed by Amazon, including the purchase order number, current state, and order details. */
        vendorOrders_Order: {
            orderDetails?: components["schemas"]["vendorOrders_OrderDetails"];
            /** @description The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber: string;
            /**
             * @description This field will contain the current state of the purchase order.
             * @enum {string}
             */
            purchaseOrderState: "New" | "Acknowledged" | "Closed";
        };
        /** @description Represents an acknowledgement for an order, including the purchase order number, selling party details, acknowledgement date, and a list of acknowledged items. */
        vendorOrders_OrderAcknowledgement: {
            /**
             * Format: date-time
             * @description The date and time when the purchase order is acknowledged, in ISO-8601 date/time format.
             */
            acknowledgementDate: string;
            /** @description A list of the items being acknowledged with associated details. */
            items: components["schemas"]["vendorOrders_OrderAcknowledgementItem"][];
            /** @description The purchase order number. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber: string;
            sellingParty: components["schemas"]["vendorOrders_PartyIdentification"];
        };
        /** @description Details of the item being acknowledged. */
        vendorOrders_OrderAcknowledgementItem: {
            /** @description Amazon Standard Identification Number (ASIN) of an item. */
            amazonProductIdentifier?: string;
            /** @description The discount multiplier that should be applied to the price if a vendor sells books with a list price. This is a multiplier factor to arrive at a final discounted price. A multiplier of .90 would be the factor if a 10% discount is given. */
            discountMultiplier?: string;
            /** @description This is used to indicate acknowledged quantity. */
            itemAcknowledgements: components["schemas"]["vendorOrders_OrderItemAcknowledgement"][];
            /** @description Line item sequence number for the item. */
            itemSequenceNumber?: string;
            listPrice?: components["schemas"]["vendorOrders_Money"];
            netCost?: components["schemas"]["vendorOrders_Money"];
            orderedQuantity: components["schemas"]["vendorOrders_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of an order. */
        vendorOrders_OrderDetails: {
            billToParty?: components["schemas"]["vendorOrders_PartyIdentification"];
            buyingParty?: components["schemas"]["vendorOrders_PartyIdentification"];
            /** @description If requested by the recipient, this field will contain a promotional/deal number. The discount code line is optional. It is used to obtain a price discount on items on the order. */
            dealCode?: string;
            deliveryWindow?: components["schemas"]["vendorOrders_DateTimeInterval"];
            importDetails?: components["schemas"]["vendorOrders_ImportDetails"];
            /** @description A list of items in this purchase order. */
            items: components["schemas"]["vendorOrders_OrderItem"][];
            /**
             * @description Payment method used.
             * @enum {string}
             */
            paymentMethod?: "Invoice" | "Consignment" | "CreditCard" | "Prepaid";
            /**
             * Format: date-time
             * @description The date when purchase order was last changed by Amazon after the order was placed. This date will be greater than 'purchaseOrderDate'. This means the PO data was changed on that date and vendors are required to fulfill the  updated PO. The PO changes can be related to Item Quantity, Ship to Location, Ship Window etc. This field will not be present in orders that have not changed after creation. Must be in ISO-8601 date/time format.
             */
            purchaseOrderChangedDate?: string;
            /**
             * Format: date-time
             * @description The date the purchase order was placed. Must be in ISO-8601 date/time format.
             */
            purchaseOrderDate: string;
            /**
             * Format: date-time
             * @description The date when current purchase order state was changed. Current purchase order state is available in the field 'purchaseOrderState'. Must be in ISO-8601 date/time format.
             */
            purchaseOrderStateChangedDate: string;
            /**
             * @description Type of purchase order.
             * @enum {string}
             */
            purchaseOrderType?: "RegularOrder" | "ConsignedOrder" | "NewProductIntroduction" | "RushOrder";
            sellingParty?: components["schemas"]["vendorOrders_PartyIdentification"];
            shipToParty?: components["schemas"]["vendorOrders_PartyIdentification"];
            shipWindow?: components["schemas"]["vendorOrders_DateTimeInterval"];
        };
        /** @description Details of item quantity ordered. */
        vendorOrders_OrderedQuantityDetails: {
            cancelledQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
            orderedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
            /**
             * Format: date-time
             * @description The date when the line item quantity was updated by buyer. Must be in ISO-8601 date/time format.
             */
            updatedDate?: string;
        };
        /** @description Represents an individual item in an order, including item details, quantities, pricing, and backorder information. */
        vendorOrders_OrderItem: {
            /** @description Amazon Standard Identification Number (ASIN) of an item. */
            amazonProductIdentifier?: string;
            /** @description When true, we will accept backorder confirmations for this item. */
            isBackOrderAllowed: boolean;
            /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
            itemSequenceNumber: string;
            listPrice?: components["schemas"]["vendorOrders_Money"];
            netCost?: components["schemas"]["vendorOrders_Money"];
            orderedQuantity: components["schemas"]["vendorOrders_ItemQuantity"];
            /** @description The vendor selected product identification of the item. */
            vendorProductIdentifier?: string;
        };
        /** @description Represents the acknowledgement details for an individual order item, including the acknowledgement code, acknowledged quantity, scheduled ship and delivery dates, and rejection reason (if applicable). */
        vendorOrders_OrderItemAcknowledgement: {
            acknowledgedQuantity: components["schemas"]["vendorOrders_ItemQuantity"];
            /**
             * @description This indicates the acknowledgement code.
             * @enum {string}
             */
            acknowledgementCode: "Accepted" | "Backordered" | "Rejected";
            /**
             * @description Indicates the reason for rejection.
             * @enum {string}
             */
            rejectionReason?: "TemporarilyUnavailable" | "InvalidProductIdentifier" | "ObsoleteProduct";
            /**
             * Format: date-time
             * @description Estimated delivery date per line item. Must be in ISO-8601 date/time format.
             */
            scheduledDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Estimated ship date per line item. Must be in ISO-8601 date/time format.
             */
            scheduledShipDate?: string;
        };
        /** @description Represents the current status of an order item, including acknowledgement and receiving details. */
        vendorOrders_OrderItemStatus: {
            /** @description Acknowledgement status information. */
            acknowledgementStatus?: {
                acceptedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
                /** @description Details of item quantity confirmed. */
                acknowledgementStatusDetails?: components["schemas"]["vendorOrders_AcknowledgementStatusDetails"][];
                /**
                 * @description Confirmation status of line item.
                 * @enum {string}
                 */
                confirmationStatus?: "ACCEPTED" | "PARTIALLY_ACCEPTED" | "REJECTED" | "UNCONFIRMED";
                rejectedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
            };
            /** @description Buyer's Standard Identification Number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            /** @description Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on. */
            itemSequenceNumber: string;
            listPrice?: components["schemas"]["vendorOrders_Money"];
            netCost?: components["schemas"]["vendorOrders_Money"];
            /** @description Ordered quantity information. */
            orderedQuantity?: {
                orderedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
                /** @description Details of item quantity ordered. */
                orderedQuantityDetails?: components["schemas"]["vendorOrders_OrderedQuantityDetails"][];
            };
            /** @description Item receive status at the buyer's warehouse. */
            receivingStatus?: {
                /**
                 * Format: date-time
                 * @description The date when the most recent item was received at the buyer's warehouse. Must be in ISO-8601 date/time format.
                 */
                lastReceiveDate?: string;
                receivedQuantity?: components["schemas"]["vendorOrders_ItemQuantity"];
                /**
                 * @description Receive status of the line item.
                 * @enum {string}
                 */
                receiveStatus?: "NOT_RECEIVED" | "PARTIALLY_RECEIVED" | "RECEIVED";
            };
            /** @description The vendor selected product identification of the item. */
            vendorProductIdentifier?: string;
        };
        /** @description A list of orders returned as response. */
        vendorOrders_OrderList: {
            /** @description Represents an individual order within the OrderList. */
            orders?: components["schemas"]["vendorOrders_Order"][];
            pagination?: components["schemas"]["vendorOrders_Pagination"];
        };
        /** @description A list of order statuses. */
        vendorOrders_OrderListStatus: {
            /** @description Represents an order status within the OrderListStatus. */
            ordersStatus?: components["schemas"]["vendorOrders_OrderStatus"][];
            pagination?: components["schemas"]["vendorOrders_Pagination"];
        };
        /** @description Current status of a purchase order. */
        vendorOrders_OrderStatus: {
            itemStatus: components["schemas"]["vendorOrders_ItemStatus"];
            /**
             * Format: date-time
             * @description The date when the purchase order was last updated. Must be in ISO-8601 date/time format.
             */
            lastUpdatedDate?: string;
            /**
             * Format: date-time
             * @description The date the purchase order was placed. Must be in ISO-8601 date/time format.
             */
            purchaseOrderDate: string;
            /** @description The buyer's purchase order number for this order. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber: string;
            /**
             * @description The status of the buyer's purchase order for this order.
             * @enum {string}
             */
            purchaseOrderStatus: "OPEN" | "CLOSED";
            sellingParty: components["schemas"]["vendorOrders_PartyIdentification"];
            shipToParty: components["schemas"]["vendorOrders_PartyIdentification"];
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        vendorOrders_Pagination: {
            /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more purchase order items to return. */
            nextToken?: string;
        };
        /** @description Name, address and tax details of a party. */
        vendorOrders_PartyIdentification: {
            address?: components["schemas"]["vendorOrders_Address"];
            /** @description Assigned identification for the party. For example, warehouse code or vendor code. Please refer to specific party for more details. */
            partyId: string;
            taxInfo?: components["schemas"]["vendorOrders_TaxRegistrationDetails"];
        };
        /** @description The request schema for the submitAcknowledgment operation. */
        vendorOrders_SubmitAcknowledgementRequest: {
            /** @description An array of order acknowledgements to be submitted. */
            acknowledgements?: components["schemas"]["vendorOrders_OrderAcknowledgement"][];
        };
        /** @description The response schema for the submitAcknowledgement operation */
        vendorOrders_SubmitAcknowledgementResponse: {
            errors?: components["schemas"]["vendorOrders_ErrorList"];
            payload?: components["schemas"]["vendorOrders_TransactionId"];
        };
        /** @description Tax registration details of the entity. */
        vendorOrders_TaxRegistrationDetails: {
            /** @description Tax registration number for the entity. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType: "VAT" | "GST";
        };
        /** @description Response containing the transaction ID. */
        vendorOrders_TransactionId: {
            /** @description GUID assigned by Amazon to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Address of the party. */
        vendorShipments_Address: {
            /** @description First line of the address. */
            addressLine1: string;
            /** @description Additional street address information, if required. */
            addressLine2?: string;
            /** @description Additional street address information, if required. */
            addressLine3?: string;
            /** @description The city where the person, business or institution is located. */
            city?: string;
            /** @description The two digit country code in ISO 3166-1 alpha-2 format. */
            countryCode: string;
            /** @description The county where person, business or institution is located. */
            county?: string;
            /** @description The district where person, business or institution is located. */
            district?: string;
            /** @description The name of the person, business or institution at that address. */
            name: string;
            /** @description The phone number of the person, business or institution located at that address. */
            phone?: string;
            /** @description The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation. */
            postalCode?: string;
            /** @description The state or region where person, business or institution is located. */
            stateOrRegion?: string;
        };
        /** @description Indicates the carrier details and their contact informations */
        vendorShipments_CarrierDetails: {
            /** @description Code that identifies the carrier for the shipment. The Standard Carrier Alpha Code (SCAC) is a unique two to four letter code used to identify a carrier. Carrier SCAC codes are assigned and maintained by the NMFTA (National Motor Freight Association). */
            code?: string;
            /** @description The field is used to represent the carrier Email id. */
            email?: string;
            /** @description The field is used to represent the carrier used for performing the shipment. */
            name?: string;
            /** @description The field is used to represent the Carrier contact number. */
            phone?: string;
            /** @description The field is also known as PRO number is a unique number assigned by the carrier. It is used to identify and track the shipment that goes out for delivery. This field is mandatory for US, CA, MX shipment confirmations. */
            shipmentReferenceNumber?: string;
        };
        /** @description Details of the carton/package being shipped. */
        vendorShipments_Carton: {
            /** @description A list of carton identifiers. */
            cartonIdentifiers?: components["schemas"]["vendorShipments_ContainerIdentification"][];
            /** @description Carton sequence number for the carton. The first carton will be 001, the second 002, and so on. This number is used as a reference to refer to this carton from the pallet level. */
            cartonSequenceNumber: string;
            dimensions?: components["schemas"]["vendorShipments_Dimensions"];
            /** @description A list of container item details. */
            items: components["schemas"]["vendorShipments_ContainerItem"][];
            /** @description This is required to be provided for every carton in the small parcel shipments. */
            trackingNumber?: string;
            weight?: components["schemas"]["vendorShipments_Weight"];
        };
        /** @description Carton reference details. */
        vendorShipments_CartonReferenceDetails: {
            /** @description Pallet level carton count is mandatory for single item pallet and optional for mixed item pallet. */
            cartonCount?: number;
            /** @description Array of reference numbers for the carton that are part of this pallet/shipment. Please provide the cartonSequenceNumber from the 'cartons' segment to refer to that carton's details here. */
            cartonReferenceNumbers: string[];
        };
        /** @description Transport Request pickup date from Vendor Warehouse by Buyer */
        vendorShipments_CollectFreightPickupDetails: {
            /**
             * Format: date-time
             * @description Date on which the carrier is being scheduled to pickup items from vendor warehouse by Byer used for WePay/Collect vendors.
             */
            carrierAssignmentDate?: string;
            /**
             * Format: date-time
             * @description Date on which the items can be picked up from vendor warehouse by Buyer used for WePay/Collect vendors.
             */
            requestedPickUp?: string;
            /**
             * Format: date-time
             * @description Date on which the items are scheduled to be picked from vendor warehouse by Buyer used for WePay/Collect vendors.
             */
            scheduledPickUp?: string;
        };
        /** @description A list of carton identifiers. */
        vendorShipments_ContainerIdentification: {
            /** @description Container identification number that adheres to the definition of the container identification type. */
            containerIdentificationNumber: string;
            /**
             * @description The container identification type.
             * @enum {string}
             */
            containerIdentificationType: "SSCC" | "AMZNCC" | "GTIN" | "BPS" | "CID";
        };
        /** @description Carton/Pallet level details for the item. */
        vendorShipments_ContainerItem: {
            itemDetails?: components["schemas"]["vendorShipments_ItemDetails"];
            /** @description The reference number for the item. Please provide the itemSequenceNumber from the 'items' segment to refer to that item's details here. */
            itemReference: string;
            shippedQuantity: components["schemas"]["vendorShipments_ItemQuantity"];
        };
        /** @description A list of the items in this transportation and their associated inner container details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level. */
        vendorShipments_Containers: {
            /** @description Number of cartons per layer on the pallet. */
            block?: number;
            /** @description A list of carton identifiers. */
            containerIdentifiers: components["schemas"]["vendorShipments_ContainerIdentification"][];
            /** @description An integer that must be submitted for multi-box shipments only, where one item may come in separate packages. */
            containerSequenceNumber?: string;
            /**
             * @description The type of container.
             * @enum {string}
             */
            containerType: "carton" | "pallet";
            dimensions?: components["schemas"]["vendorShipments_Dimensions"];
            innerContainersDetails?: components["schemas"]["vendorShipments_InnerContainersDetails"];
            /** @description A list of packed items. */
            packedItems?: components["schemas"]["vendorShipments_PackedItems"][];
            /** @description Number of layers per pallet. */
            tier?: number;
            /** @description The tracking number used for identifying the shipment. */
            trackingNumber?: string;
            weight?: components["schemas"]["vendorShipments_Weight"];
        };
        /** @description Container sequence numbers that are involved in this shipment. */
        vendorShipments_ContainerSequenceNumbers: {
            /** @description A list of containers shipped */
            containerSequenceNumber?: string;
        };
        /** @description A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation. <br>**Pattern** : `^-?(0|([1-9]\d*))(\.\d+)?([eE][+-]?\d+)?$`. */
        vendorShipments_Decimal: string;
        /** @description Physical dimensional measurements of a container. */
        vendorShipments_Dimensions: {
            height: components["schemas"]["vendorShipments_Decimal"];
            length: components["schemas"]["vendorShipments_Decimal"];
            /**
             * @description The unit of measure for dimensions.
             * @enum {string}
             */
            unitOfMeasure: "In" | "Ft" | "Meter" | "Yard";
            width: components["schemas"]["vendorShipments_Decimal"];
        };
        /** @description Duration after manufacturing date during which the product is valid for consumption. */
        vendorShipments_Duration: {
            /**
             * @description Unit for duration.
             * @enum {string}
             */
            durationUnit: "Days" | "Months";
            /** @description Value for the duration in terms of the durationUnit. */
            durationValue: number;
        };
        /** @description Error response returned when the request is unsuccessful. */
        vendorShipments_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorShipments_ErrorList: components["schemas"]["vendorShipments_Error"][];
        /** @description Expiry refers to the collection of dates required  for certain items. These could be either expiryDate or mfgDate and expiryAfterDuration. These are mandatory for perishable items. */
        vendorShipments_Expiry: {
            expiryAfterDuration?: components["schemas"]["vendorShipments_Duration"];
            /**
             * Format: date-time
             * @description The date that determines the limit of consumption or use of a product. Its meaning is determined based on the trade item context.
             */
            expiryDate?: string;
            /**
             * Format: date-time
             * @description Production, packaging or assembly date determined by the manufacturer. Its meaning is determined based on the trade item context.
             */
            manufacturerDate?: string;
        };
        /** @description The response schema for the GetShipmentDetails operation. */
        vendorShipments_GetShipmentDetailsResponse: {
            errors?: components["schemas"]["vendorShipments_ErrorList"];
            payload?: components["schemas"]["vendorShipments_ShipmentDetails"];
        };
        /** @description The response schema for the GetShipmentLabels operation. */
        vendorShipments_GetShipmentLabels: {
            errors?: components["schemas"]["vendorShipments_ErrorList"];
            payload?: components["schemas"]["vendorShipments_TransportationLabels"];
        };
        /** @description Provide these fields only if this shipment is a direct import. */
        vendorShipments_ImportDetails: {
            billableWeight?: components["schemas"]["vendorShipments_Weight"];
            /**
             * Format: date-time
             * @description Date on which the shipment is expected to be shipped. This value should not be in the past and not more than 60 days out in the future.
             */
            estimatedShipByDate?: string;
            /**
             * @description Identification of the instructions on how specified item/carton/pallet should be handled.
             * @enum {string}
             */
            handlingInstructions?: "Oversized" | "Fragile" | "Food" | "HandleWithCare";
            /** @description Types and numbers of container(s) for import purchase orders. Can be a comma-separated list if shipment has multiple containers. */
            importContainers?: string;
            /**
             * @description This is used for import purchase orders only. If the recipient requests, this field will contain the shipment method of payment.
             * @enum {string}
             */
            methodOfPayment?: "PaidByBuyer" | "CollectOnDelivery" | "DefinedByBuyerAndSeller" | "FOBPortOfCall" | "PrepaidBySeller" | "PaidBySeller";
            route?: components["schemas"]["vendorShipments_Route"];
            /** @description The container's seal number. */
            sealNumber?: string;
        };
        /** @description Details of the innerContainersDetails. */
        vendorShipments_InnerContainersDetails: {
            /** @description Total containers as part of the shipment */
            containerCount?: number;
            /** @description Container sequence numbers that are involved in this shipment. */
            containerSequenceNumbers?: components["schemas"]["vendorShipments_ContainerSequenceNumbers"][];
        };
        /** @description Details of the item being shipped. */
        vendorShipments_Item: {
            /** @description Buyer Standard Identification Number (ASIN) of an item. */
            amazonProductIdentifier?: string;
            itemDetails?: components["schemas"]["vendorShipments_ItemDetails"];
            /** @description Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level. */
            itemSequenceNumber: string;
            shippedQuantity: components["schemas"]["vendorShipments_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate. */
        vendorShipments_ItemDetails: {
            expiry?: components["schemas"]["vendorShipments_Expiry"];
            /**
             * @description Identification of the instructions on how specified item/carton/pallet should be handled.
             * @enum {string}
             */
            handlingCode?: "Oversized" | "Fragile" | "Food" | "HandleWithCare";
            /** @description The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items. */
            lotNumber?: string;
            maximumRetailPrice?: components["schemas"]["vendorShipments_Money"];
            /** @description The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber?: string;
        };
        /** @description Details of item quantity. */
        vendorShipments_ItemQuantity: {
            /** @description Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level. */
            amount: number;
            totalWeight?: components["schemas"]["vendorShipments_TotalWeight"];
            /**
             * @description Unit of measure for the shipped quantity.
             * @enum {string}
             */
            unitOfMeasure: "Cases" | "Eaches";
            /** @description The case size, in the event that we ordered using cases. Otherwise, 1. */
            unitSize?: number;
        };
        /** @description Label details as part of the transport label response */
        vendorShipments_LabelData: {
            /** @description Unique identification of the carrier. */
            carrierCode?: string;
            /** @description The base-64 encoded string that represents the shipment label. */
            label?: string;
            /**
             * @description The format of the label.
             * @enum {string}
             */
            labelFormat?: "PDF";
            /** @description A sequential number assigned to each label within a shipment. */
            labelSequenceNumber?: number;
            /** @description Tracking Id for the transportation. */
            trackingId?: string;
        };
        /** @description Location identifier. */
        vendorShipments_Location: {
            /** @description The two digit country code. In ISO 3166-1 alpha-2 format. */
            countryCode?: string;
            /** @description Location code. */
            locationCode?: string;
            /** @description Type of location identification. */
            type?: string;
        };
        /** @description An amount of money, including units in the form of currency. */
        vendorShipments_Money: {
            amount: components["schemas"]["vendorShipments_Decimal"];
            /** @description Three digit currency code in ISO 4217 format. */
            currencyCode: string;
        };
        /** @description Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate. */
        vendorShipments_PackageItemDetails: {
            expiry?: components["schemas"]["vendorShipments_Expiry"];
            /** @description The batch or lot number associates an item with information the manufacturer considers relevant for traceability of the trade item to which the Element String is applied. The data may refer to the trade item itself or to items contained. This field is mandatory for all perishable items. */
            lotNumber?: string;
            /** @description The purchase order number for the shipment being confirmed. If the items in this shipment belong to multiple purchase order numbers that are in particular carton or pallet within the shipment, then provide the purchaseOrderNumber at the appropriate carton or pallet level. Formatting Notes: 8-character alpha-numeric code. */
            purchaseOrderNumber?: string;
        };
        /** @description Details of the item being shipped. */
        vendorShipments_PackedItems: {
            /** @description Buyer Standard Identification Number (ASIN) of an item. */
            buyerProductIdentifier?: string;
            itemDetails?: components["schemas"]["vendorShipments_PackageItemDetails"];
            /** @description Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level. */
            itemSequenceNumber?: string;
            packedQuantity?: components["schemas"]["vendorShipments_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Details of item quantity. */
        vendorShipments_PackedQuantity: {
            /** @description Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level. */
            amount: number;
            /**
             * @description Unit of measure for the shipped quantity.
             * @enum {string}
             */
            unitOfMeasure: "Cases" | "Eaches";
            /** @description The case size, in the event that we ordered using cases. Otherwise, 1. */
            unitSize?: number;
        };
        /** @description The pagination elements required to retrieve the remaining data. */
        vendorShipments_Pagination: {
            /** @description A generated string used to pass information to your next request. If NextToken is returned, pass the value of NextToken to the next request. If NextToken is not returned, there are no more shipment items to return. */
            nextToken?: string;
        };
        /** @description Details of the Pallet/Tare being shipped. */
        vendorShipments_Pallet: {
            /** @description Number of cartons per layer on the pallet. Only applicable to container type Pallet. */
            block?: number;
            cartonReferenceDetails?: components["schemas"]["vendorShipments_CartonReferenceDetails"];
            dimensions?: components["schemas"]["vendorShipments_Dimensions"];
            /** @description A list of container item details. */
            items?: components["schemas"]["vendorShipments_ContainerItem"][];
            /** @description A list of pallet identifiers. */
            palletIdentifiers: components["schemas"]["vendorShipments_ContainerIdentification"][];
            /** @description Number of layers per pallet. Only applicable to container type Pallet. */
            tier?: number;
            weight?: components["schemas"]["vendorShipments_Weight"];
        };
        /** @description Name/Address and tax details of the party. */
        vendorShipments_PartyIdentification: {
            address?: components["schemas"]["vendorShipments_Address"];
            /** @description Assigned identification for the party. */
            partyId: string;
            /** @description Tax registration details of the entity. */
            taxRegistrationDetails?: components["schemas"]["vendorShipments_TaxRegistrationDetails"][];
        };
        /** @description Item details for be provided for every item in shipment at either the item or carton or pallet level, whichever is appropriate. */
        vendorShipments_PurchaseOrderItemDetails: {
            maximumRetailPrice?: components["schemas"]["vendorShipments_Money"];
        };
        /** @description Details of the item being shipped. */
        vendorShipments_PurchaseOrderItems: {
            /** @description Amazon Standard Identification Number (ASIN) for a SKU */
            buyerProductIdentifier?: string;
            /** @description Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level. */
            itemSequenceNumber: string;
            maximumRetailPrice?: components["schemas"]["vendorShipments_Money"];
            shippedQuantity: components["schemas"]["vendorShipments_ItemQuantity"];
            /** @description The vendor selected product identification of the item. Should be the same as was sent in the purchase order. */
            vendorProductIdentifier?: string;
        };
        /** @description Transport Request pickup date */
        vendorShipments_PurchaseOrders: {
            /** @description A list of the items that are associated to the PO in this transport and their associated details. */
            items?: components["schemas"]["vendorShipments_PurchaseOrderItems"][];
            /**
             * Format: date-time
             * @description Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.
             */
            purchaseOrderDate?: string;
            /** @description Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment. */
            purchaseOrderNumber?: string;
            /** @description Date range in which shipment is expected for these purchase orders. */
            shipWindow?: string;
        };
        /** @description This is used only for direct import shipment confirmations. */
        vendorShipments_Route: {
            /** @description The port or location involved in transporting the cargo, as specified in transportation contracts or operational plans. */
            stops: components["schemas"]["vendorShipments_Stop"][];
        };
        /** @description A list of one or more shipments with respective details. */
        vendorShipments_Shipment: {
            /** @description The buyer Reference Number is a unique identifier generated by buyer for all Collect/WePay shipments when you submit a transportation request. This field is mandatory for Collect/WePay shipments. */
            buyerReferenceNumber?: string;
            collectFreightPickupDetails?: components["schemas"]["vendorShipments_CollectFreightPickupDetails"];
            /** @description A list of the items in this transportation and their associated inner container details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level. */
            containers?: components["schemas"]["vendorShipments_Containers"][];
            /**
             * @description Indicates the current shipment status.
             * @enum {string}
             */
            currentShipmentStatus?: "Created" | "TransportationRequested" | "CarrierAssigned" | "Shipped";
            /**
             * Format: date-time
             * @description Date and time when the last status was updated.
             */
            currentshipmentStatusDate?: string;
            importDetails?: components["schemas"]["vendorShipments_ImportDetails"];
            /**
             * Format: date-time
             * @description The date and time of the package label created for the shipment by buyer.
             */
            packageLabelCreateDate?: string;
            /** @description Indicates the purchase orders involved for the transportation request. This group is an array create 1 for each PO and list their corresponding items. This information is used for deciding the route,truck allocation and storage efficiently. This is a mandatory information for Buyer performing transportation from vendor warehouse (WePay/Collect) */
            purchaseOrders?: components["schemas"]["vendorShipments_PurchaseOrders"][];
            sellingParty: components["schemas"]["vendorShipments_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorShipments_PartyIdentification"];
            /**
             * Format: date-time
             * @description The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the Buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future.
             */
            shipmentConfirmDate?: string;
            /**
             * Format: date-time
             * @description The date and time of the shipment request created by vendor.
             */
            shipmentCreateDate?: string;
            /**
             * @description Specifies if payment is Collect (WePay) or Prepaid (TheyPay). Required.
             * @enum {string}
             */
            shipmentFreightTerm?: "Collect" | "Prepaid";
            shipmentMeasurements?: components["schemas"]["vendorShipments_TransportShipmentMeasurements"];
            /** @description Indicates the list of current shipment status details and when the last update was received from carrier this is available on shipment Details response. */
            shipmentStatusDetails?: components["schemas"]["vendorShipments_ShipmentStatusDetails"][];
            shipToParty: components["schemas"]["vendorShipments_PartyIdentification"];
            /**
             * Format: date-time
             * @description Date on which the transportation request was submitted.
             */
            transactionDate: string;
            /**
             * @description Indicates the type of transportation request (for example, `New` or `Cancel`). Each `transactionType` has a unique set of operations and there are corresponding details to be populated for each operation.
             * @enum {string}
             */
            transactionType: "New" | "Cancel";
            transportationDetails?: components["schemas"]["vendorShipments_TransportationDetails"];
            /** @description Unique Transportation ID created by Vendor (Should not be used over the last 365 days). */
            vendorShipmentIdentifier: string;
        };
        /** @description A list of one or more shipment confirmations. */
        vendorShipments_ShipmentConfirmation: {
            /** @description The Amazon Reference Number is a unique identifier generated by Amazon for all Collect/WePay shipments when you submit  a routing request. This field is mandatory for Collect/WePay shipments. */
            amazonReferenceNumber?: string;
            /** @description A list of the cartons in this shipment. */
            cartons?: components["schemas"]["vendorShipments_Carton"][];
            /**
             * Format: date-time
             * @description The date and time on which the shipment is estimated to reach buyer's warehouse. It needs to be an estimate based on the average transit time between ship from location and the destination. The exact appointment time will be provided by the buyer and is potentially not known when creating the shipment confirmation.
             */
            estimatedDeliveryDate?: string;
            importDetails?: components["schemas"]["vendorShipments_ImportDetails"];
            /** @description A list of the pallets in this shipment. */
            pallets?: components["schemas"]["vendorShipments_Pallet"][];
            sellingParty: components["schemas"]["vendorShipments_PartyIdentification"];
            shipFromParty: components["schemas"]["vendorShipments_PartyIdentification"];
            /**
             * Format: date-time
             * @description Date on which the shipment confirmation was submitted.
             */
            shipmentConfirmationDate: string;
            /**
             * @description Indicates if this shipment confirmation is the initial confirmation, or intended to replace an already posted shipment confirmation. If replacing an existing shipment confirmation, be sure to provide the identical shipmentIdentifier and sellingParty information as in the previous confirmation.
             * @enum {string}
             */
            shipmentConfirmationType: "Original" | "Replace";
            /** @description Unique shipment ID (not used over the last 365 days). */
            shipmentIdentifier: string;
            shipmentMeasurements?: components["schemas"]["vendorShipments_ShipmentMeasurements"];
            /**
             * @description Shipment hierarchical structure.
             * @enum {string}
             */
            shipmentStructure?: "PalletizedAssortmentCase" | "LooseAssortmentCase" | "PalletOfItems" | "PalletizedStandardCase" | "LooseStandardCase" | "MasterPallet" | "MasterCase";
            /**
             * @description The type of shipment.
             * @enum {string}
             */
            shipmentType?: "TruckLoad" | "LessThanTruckLoad" | "SmallParcel";
            /**
             * Format: date-time
             * @description The date and time of the departure of the shipment from the vendor's location. Vendors are requested to send ASNs within 30 minutes of departure from their warehouse/distribution center or at least 6 hours prior to the appointment time at the buyer destination warehouse, whichever is sooner. Shipped date mentioned in the shipment confirmation should not be in the future.
             */
            shippedDate?: string;
            /** @description A list of the items in this shipment and their associated details. If any of the item detail fields are common at a carton or a pallet level, provide them at the corresponding carton or pallet level. */
            shippedItems: components["schemas"]["vendorShipments_Item"][];
            shipToParty: components["schemas"]["vendorShipments_PartyIdentification"];
            transportationDetails?: components["schemas"]["vendorShipments_TransportationDetailsForShipmentConfirmation"];
        };
        /** @description The request schema for the GetShipmentDetails operation. */
        vendorShipments_ShipmentDetails: {
            pagination?: components["schemas"]["vendorShipments_Pagination"];
            /** @description A list of one or more shipments with underlying details. */
            shipments?: components["schemas"]["vendorShipments_Shipment"][];
        };
        /** @description Shipment Information details for Label request. */
        vendorShipments_ShipmentInformation: {
            /** @description The buyer reference number is a unique identifier generated by the buyer for all Collect and WePay shipments. */
            buyerReferenceNumber?: string;
            /** @description Unique Id with  which  the shipment can be tracked for Small Parcels. */
            masterTrackingId?: string;
            shipFromParty?: components["schemas"]["vendorShipments_PartyIdentification"];
            /**
             * @description Type of shipment whether it is Small Parcel
             * @enum {string}
             */
            shipMode?: "SmallParcel" | "LTL";
            shipToParty?: components["schemas"]["vendorShipments_PartyIdentification"];
            /** @description Number of Labels that are created as part of this shipment. */
            totalLabelCount?: number;
            vendorDetails?: components["schemas"]["vendorShipments_VendorDetails"];
            /** @description Vendor Warehouse ID from where the shipment is scheduled to be picked up by buyer / Carrier. */
            warehouseId?: string;
        };
        /** @description Shipment measurement details. */
        vendorShipments_ShipmentMeasurements: {
            /** @description Number of cartons present in the shipment. Provide the cartonCount only for non-palletized shipments. */
            cartonCount?: number;
            grossShipmentWeight?: components["schemas"]["vendorShipments_Weight"];
            /** @description Number of pallets present in the shipment. Provide the palletCount only for palletized shipments. */
            palletCount?: number;
            shipmentVolume?: components["schemas"]["vendorShipments_Volume"];
        };
        /** @description Shipment Status details. */
        vendorShipments_ShipmentStatusDetails: {
            /**
             * @description Current status of the shipment on whether it is picked up or scheduled.
             * @enum {string}
             */
            shipmentStatus?: "Created" | "TransportationRequested" | "CarrierAssigned" | "Shipped";
            /**
             * Format: date-time
             * @description Date and time on last status update received for the shipment
             */
            shipmentStatusDate?: string;
        };
        /** @description Contractual or operational port or point relevant to the movement of the cargo. */
        vendorShipments_Stop: {
            /**
             * Format: date-time
             * @description Date and time of the arrival of the cargo.
             */
            arrivalTime?: string;
            /**
             * Format: date-time
             * @description Date and time of the departure of the cargo.
             */
            departureTime?: string;
            /**
             * @description Provide the function code.
             * @enum {string}
             */
            functionCode: "PortOfDischarge" | "FreightPayableAt" | "PortOfLoading";
            locationIdentification?: components["schemas"]["vendorShipments_Location"];
        };
        /** @description The request schema for the SubmitShipmentConfirmations operation. */
        vendorShipments_SubmitShipmentConfirmationsRequest: {
            /** @description A list of one or more shipment confirmations. */
            shipmentConfirmations?: components["schemas"]["vendorShipments_ShipmentConfirmation"][];
        };
        /** @description The response schema for the SubmitShipmentConfirmations operation. */
        vendorShipments_SubmitShipmentConfirmationsResponse: {
            errors?: components["schemas"]["vendorShipments_ErrorList"];
            payload?: components["schemas"]["vendorShipments_TransactionReference"];
        };
        /** @description The request schema for the SubmitShipments operation. */
        vendorShipments_SubmitShipments: {
            /** @description A list of one or more shipments with underlying details. */
            shipments?: components["schemas"]["vendorShipments_Shipment"][];
        };
        /** @description Tax registration details of the entity. */
        vendorShipments_TaxRegistrationDetails: {
            /** @description Tax registration number for the entity. For example, VAT ID. */
            taxRegistrationNumber: string;
            /**
             * @description Tax registration type for the entity.
             * @enum {string}
             */
            taxRegistrationType: "VAT" | "GST";
        };
        /** @description The total weight of units that are sold by weight in a shipment. */
        vendorShipments_TotalWeight: {
            amount: components["schemas"]["vendorShipments_Decimal"];
            /**
             * @description The unit of measure for the weight of items that are ordered by cases and support pricing by weight.
             * @enum {string}
             */
            unitOfMeasure: "POUNDS" | "OUNCES" | "GRAMS" | "KILOGRAMS";
        };
        /** @description The response payload for the SubmitShipmentConfirmations operation. */
        vendorShipments_TransactionReference: {
            /** @description GUID assigned by Buyer to identify this transaction. This value can be used with the Transaction Status API to return the status of this transaction. */
            transactionId?: string;
        };
        /** @description Transportation details for this shipment. */
        vendorShipments_TransportationDetails: {
            /** @description The Bill of Lading (BOL) number is a unique number assigned to each shipment of goods by the vendor or shipper during the creation of the Bill of Lading. This number must be unique for every shipment and cannot be a date/time or single character. The BOL numer is mandatory in Shipment Confirmation message for FTL and LTL shipments, and must match the paper BOL provided with the shipment. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field. */
            billOfLadingNumber?: string;
            carrierDetails?: components["schemas"]["vendorShipments_CarrierDetails"];
            /**
             * Format: date-time
             * @description Estimated Date on which shipment will be delivered from Vendor to Buyer
             */
            estimatedDeliveryDate?: string;
            /**
             * Format: date-time
             * @description Date on which shipment will be delivered from Vendor to Buyer
             */
            shipmentDeliveryDate?: string;
            /**
             * @description The type of shipment.
             * @enum {string}
             */
            shipMode?: "TruckLoad" | "LessThanTruckLoad" | "SmallParcel";
            /**
             * Format: date-time
             * @description Date when shipment is performed by the Vendor to Buyer
             */
            shippedDate?: string;
            /**
             * @description The mode of transportation for this shipment.
             * @enum {string}
             */
            transportationMode?: "Road" | "Air" | "Ocean";
        };
        /** @description Transportation details for this shipment. */
        vendorShipments_TransportationDetailsForShipmentConfirmation: {
            /** @description The Bill of Lading (BOL) number is a unique number assigned to each shipment of goods by the vendor or shipper during the creation of the Bill of Lading. This number must be unique for every shipment and cannot be a date/time or single character. The BOL numer is mandatory in Shipment Confirmation message for FTL and LTL shipments, and must match the paper BOL provided with the shipment. Instead of BOL, an alternative reference number (like Delivery Note Number) for the shipment can also be sent in this field. */
            billOfLadingNumber?: string;
            /** @description Code that identifies the carrier for the shipment. The Standard Carrier Alpha Code (SCAC) is a unique two to four letter code used to identify a carrier. Carrier SCAC codes are assigned and maintained by the NMFTA (National Motor Freight Association). This field is mandatory for US, CA, MX shipment confirmations. */
            carrierScac?: string;
            /** @description The field also known as PRO number is a unique number assigned by the carrier. It is used to identify and track the shipment that goes out for delivery. This field is mandatory for UA, CA, MX shipment confirmations. */
            carrierShipmentReferenceNumber?: string;
            /**
             * @description The mode of transportation for this shipment.
             * @enum {string}
             */
            transportationMode?: "Road" | "Air" | "Ocean";
        };
        /** @description The request schema for the GetShipmentLabels operation. */
        vendorShipments_TransportationLabels: {
            pagination?: components["schemas"]["vendorShipments_Pagination"];
            /** @description A list of one or more ShipmentLabels. */
            transportLabels?: components["schemas"]["vendorShipments_TransportLabel"][];
        };
        /** @description A list of one or more ShipmentLabels. */
        vendorShipments_TransportLabel: {
            /**
             * Format: date-time
             * @description Date on which label is created.
             */
            labelCreateDateTime?: string;
            /** @description Indicates the label data,format and type associated . */
            labelData?: components["schemas"]["vendorShipments_LabelData"][];
            shipmentInformation?: components["schemas"]["vendorShipments_ShipmentInformation"];
        };
        /** @description Shipment measurement details. */
        vendorShipments_TransportShipmentMeasurements: {
            shipmentVolume?: components["schemas"]["vendorShipments_Volume"];
            shipmentWeight?: components["schemas"]["vendorShipments_Weight"];
            /** @description Total number of cartons present in the shipment. Provide the cartonCount only for non-palletized shipments. */
            totalCartonCount?: number;
            /** @description Total number of Non Stackable Pallets present in the shipment. */
            totalPalletNonStackable?: number;
            /** @description Total number of Stackable Pallets present in the shipment. */
            totalPalletStackable?: number;
        };
        /** @description Vendor Details as part of Label response. */
        vendorShipments_VendorDetails: {
            sellingParty?: components["schemas"]["vendorShipments_PartyIdentification"];
            /** @description Unique vendor shipment id which is not used in last 365 days */
            vendorShipmentIdentifier?: string;
        };
        /** @description The volume of the shipment. */
        vendorShipments_Volume: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unitOfMeasure: "CuFt" | "CuIn" | "CuM" | "CuY";
            value: components["schemas"]["vendorShipments_Decimal"];
        };
        /** @description The weight of the shipment. */
        vendorShipments_Weight: {
            /**
             * @description The unit of measurement.
             * @enum {string}
             */
            unitOfMeasure: "G" | "Kg" | "Oz" | "Lb";
            value: components["schemas"]["vendorShipments_Decimal"];
        };
        /** @description Error response returned when the request is unsuccessful. */
        vendorTransactionStatus_Error: {
            /** @description An error code that identifies the type of error that occurred. */
            code: string;
            /** @description Additional details that can help the caller understand or fix the issue. */
            details?: string;
            /** @description A message that describes the error condition. */
            message: string;
        };
        /** @description A list of error responses returned when a request is unsuccessful. */
        vendorTransactionStatus_ErrorList: components["schemas"]["vendorTransactionStatus_Error"][];
        /** @description The response schema for the getTransaction operation. */
        vendorTransactionStatus_GetTransactionResponse: {
            errors?: components["schemas"]["vendorTransactionStatus_ErrorList"];
            payload?: components["schemas"]["vendorTransactionStatus_TransactionStatus"];
        };
        /** @description The transaction status. */
        vendorTransactionStatus_Transaction: {
            errors?: components["schemas"]["vendorTransactionStatus_ErrorList"];
            /**
             * @description Current processing status of the transaction.
             * @enum {string}
             */
            status: "Failure" | "Processing" | "Success";
            /** @description The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction. */
            transactionId: string;
        };
        /** @description Represents the status of a transaction. */
        vendorTransactionStatus_TransactionStatus: {
            transactionStatus?: components["schemas"]["vendorTransactionStatus_Transaction"];
        };
    };
    responses: never;
    parameters: {
        /** @description The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. */
        "aplusContent_2020-11-01_asin": string;
        /** @description The set of ASINs. */
        "aplusContent_2020-11-01_asinSet": string[];
        /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ content identifier. */
        "aplusContent_2020-11-01_contentReferenceKey": string;
        /** @description The set of A+ data types to include in the response. */
        "aplusContent_2020-11-01_getContentDocumentIncludedDataSet": ("CONTENTS" | "METADATA")[];
        /** @description The set of A+ data types to include in the response. */
        "aplusContent_2020-11-01_listContentDocumentAsinRelationsIncludedDataSet": "METADATA"[];
        /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
        "aplusContent_2020-11-01_marketplaceId": string;
        /** @description A token that you use to fetch a specific page when there are multiple pages of results. */
        "aplusContent_2020-11-01_pageToken": string;
        /** @description The type of notification.
         *
         *      For more information about notification types, refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values). */
        notifications_NotificationType: string;
    };
    requestBodies: {
        /** @description The content document request details. */
        "aplusContent_2020-11-01_PostContentDocumentRequest": {
            content: {
                "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentRequest"];
            };
        };
        /** @description The request body schema for the getMyFeesEstimates operation */
        productFeesV0_GetMyFeesEstimateRequest: {
            content: {
                "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateRequest"];
            };
        };
        /** @description LinkCarrierAccountRequest body */
        shippingV2_LinkCarrierAccountRequest: {
            content: {
                "application/json": components["schemas"]["shippingV2_LinkCarrierAccountRequest"];
            };
        };
    };
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    validateContentDocumentAsinRelations: {
        parameters: {
            query: {
                /** @description The set of ASINs. */
                asinSet?: string[];
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["aplusContent_2020-11-01_PostContentDocumentRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ValidateContentDocumentAsinRelationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    searchContentDocuments: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
                /** @description A token that you use to fetch a specific page when there are multiple pages of results. */
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_SearchContentDocumentsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    createContentDocument: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: components["requestBodies"]["aplusContent_2020-11-01_PostContentDocumentRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    getContentDocument: {
        parameters: {
            query: {
                /** @description The set of A+ Content data types to include in the response. */
                includedDataSet: ("CONTENTS" | "METADATA")[];
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ Content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_GetContentDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    updateContentDocument: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ Content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["aplusContent_2020-11-01_PostContentDocumentRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    postContentDocumentApprovalSubmission: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentApprovalSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    listContentDocumentAsinRelations: {
        parameters: {
            query: {
                /** @description The set of ASINs. */
                asinSet?: string[];
                /** @description The set of A+ Content data types to include in the response. If you don't include this parameter, the operation returns the related ASINs without metadata. */
                includedDataSet?: "METADATA"[];
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
                /** @description A token that you use to fetch a specific page when there are multiple pages of results. */
                pageToken?: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ Content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ListContentDocumentAsinRelationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    postContentDocumentAsinRelations: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        /** @description The request details for the content document ASIN relations. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentAsinRelationsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentAsinRelationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    postContentDocumentSuspendSubmission: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The unique reference key for the A+ Content document. A content reference key cannot form a permalink and might change in the future. A content reference key is not guaranteed to match any A+ content identifier. */
                contentReferenceKey: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_PostContentDocumentSuspendSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource no longer exists. */
            410: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    searchContentPublishRecords: {
        parameters: {
            query: {
                /** @description The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. */
                asin: string;
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
                /** @description A token that you use to fetch a specific page when there are multiple pages of results. */
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_SearchContentPublishRecordsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["aplusContent_2020-11-01_ErrorList"];
                };
            };
        };
    };
    createNotification: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `createNotification` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["appIntegrations-2024-04-01_CreateNotificationRequest"];
            };
        };
        responses: {
            /** @description Successful creation of notification with the identifier captured in response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_CreateNotificationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
        };
    };
    recordActionFeedback: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A `notificationId` uniquely identifies a notification. */
                notificationId: string;
            };
            cookie?: never;
        };
        /** @description The request body for the `recordActionFeedback` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["appIntegrations-2024-04-01_RecordActionFeedbackRequest"];
            };
        };
        responses: {
            /** @description Successfully processed the recordActionFeedback request. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
        };
    };
    deleteNotifications: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `deleteNotifications` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["appIntegrations-2024-04-01_DeleteNotificationsRequest"];
            };
        };
        responses: {
            /** @description Successfully processed the deleteNotifications request. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["appIntegrations-2024-04-01_ErrorList"];
                };
            };
        };
    };
    rotateApplicationClientSecret: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Application is not enrolled for rotation notification. Please update application notification preference in Developer console. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["application_2023-11-30_ErrorList"];
                };
            };
        };
    };
    checkInboundEligibility: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Represents the packages you want to inbound. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["awd_2024-05-09_InboundPackages"];
            };
        };
        responses: {
            /** @description The 200 response for `checkInboundEligibility`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_InboundEligibility"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    createInbound: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Payload for creating an inbound order. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["awd_2024-05-09_InboundOrderCreationData"];
            };
        };
        responses: {
            /** @description `createInbound` 201 response. */
            201: {
                headers: {
                    /** @description Location header with the order ID for the newly created inbound order. */
                    Location?: string;
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_InboundOrderReference"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    getInbound: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the inbound order that you want to retrieve. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 200 response for `getInbound`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_InboundOrder"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    updateInbound: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the inbound order that you want to update. */
                orderId: string;
            };
            cookie?: never;
        };
        /** @description Represents an AWD inbound order. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["awd_2024-05-09_InboundOrder"];
            };
        };
        responses: {
            /** @description The 204 response for `updateInbound`. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description `ConflictException` 409 response. */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    cancelInbound: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the inbound order you want to cancel. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 204 response for `cancelInbound`. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description `ConflictException` 409 response. */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    confirmInbound: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the inbound order that you want to confirm. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 204 response for `confirmInbound`. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description `ConflictException` 409 response. */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    listInboundShipments: {
        parameters: {
            query?: {
                /**
                 * @description Maximum number of results to return.
                 * @example 10
                 */
                maxResults?: number;
                /**
                 * @description A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
                 * @example SampleToken
                 */
                nextToken?: string;
                /**
                 * @description Filter by inbound shipment status.
                 * @example CREATED
                 */
                shipmentStatus?: "CREATED" | "SHIPPED" | "IN_TRANSIT" | "RECEIVING" | "DELIVERED" | "CLOSED" | "CANCELLED";
                /** @description Field to sort results by. By default, the response will be sorted by UPDATED_AT. */
                sortBy?: "UPDATED_AT" | "CREATED_AT";
                /**
                 * @description Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
                 * @example ASCENDING
                 */
                sortOrder?: "ASCENDING" | "DESCENDING";
                /**
                 * @description List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
                 * @example 2023-01-12T10:00:00.000Z
                 */
                updatedAfter?: string;
                /**
                 * @description List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
                 * @example 2023-01-12T10:00:00.000Z
                 */
                updatedBefore?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 200 response for `listInboundShipments`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ShipmentListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    getInboundShipment: {
        parameters: {
            query?: {
                /**
                 * @description If equal to `SHOW`, the response includes the shipment SKU quantity details.
                 *
                 *     Defaults to `HIDE`, in which case the response does not contain SKU quantities
                 * @example SHOW
                 */
                skuQuantities?: "SHOW" | "HIDE";
            };
            header?: never;
            path: {
                /** @description ID for the shipment. A shipment contains the cases being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 200 response for `getInboundShipment`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_InboundShipment"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    getInboundShipmentLabels: {
        parameters: {
            query?: {
                /**
                 * @description The format type of the output file that contains your labels. The default format type is `PDF`.
                 * @example PDF
                 */
                formatType?: "PDF";
                /**
                 * @description Page type for the generated labels. The default is `PLAIN_PAPER`.
                 * @example PLAIN_PAPER
                 */
                pageType?: "THERMAL_NONPCP" | "PLAIN_PAPER" | "LETTER_6";
            };
            header?: never;
            path: {
                /** @description ID for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 200 response for `getInboundShipmentLabels`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ShipmentLabels"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    updateInboundShipmentTransportDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The shipment ID. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description Transportation details for the shipment. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["awd_2024-05-09_TransportationDetails"];
            };
        };
        responses: {
            /** @description The 204 response for `updateInboundShipmentTransportDetails`. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    listInventory: {
        parameters: {
            query?: {
                /**
                 * @description Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.
                 * @example SHOW
                 */
                details?: "SHOW" | "HIDE";
                /**
                 * @description Maximum number of results to return.
                 * @example 10
                 */
                maxResults?: number;
                /**
                 * @description A token that is used to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `maxResults` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
                 * @example SampleToken
                 */
                nextToken?: string;
                /**
                 * @description Filter by seller or merchant SKU for the item.
                 * @example TestSKU
                 */
                sku?: string;
                /** @description Sort the response in `ASCENDING` or `DESCENDING` order. */
                sortOrder?: "ASCENDING" | "DESCENDING";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The 200 response for `listInventory`. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_InventoryListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["awd_2024-05-09_ErrorList"];
                };
            };
        };
    };
    getCompetitiveSummary: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The batch of `getCompetitiveSummary` requests. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryBatchRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_CompetitiveSummaryBatchResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description The request frequency exceeds the allowed rate. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
        };
    };
    getFeaturedOfferExpectedPriceBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The batch of `getFeaturedOfferExpectedPrice` requests. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["productPricing_2022-05-01_GetFeaturedOfferExpectedPriceBatchRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_GetFeaturedOfferExpectedPriceBatchResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description The request frequency exceeds the allowed rate. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricing_2022-05-01_Errors"];
                };
            };
        };
    };
    getItemOffersBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request associated with the `getItemOffersBatch` API call. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["productPricingV0_GetItemOffersBatchRequest"];
            };
        };
        responses: {
            /** @description Indicates that requests were run in batch.  Check the batch response status lines for information on whether a batch request succeeded. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetItemOffersBatchResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
        };
    };
    getListingOffersBatch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request associated with the `getListingOffersBatch` API call. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["productPricingV0_GetListingOffersBatchRequest"];
            };
        };
        responses: {
            /** @description Indicates that requests were run in batch.  Check the batch response status lines for information on whether a batch request succeeded. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetListingOffersBatchResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_Errors"];
                };
            };
        };
    };
    "catalogItems_2020-12-01_searchCatalogItems": {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of brand names to limit the search to.
                 * @example Beautiful Boats
                 */
                brandNames?: string[];
                /**
                 * @description A comma-delimited list of classification identifiers to limit the search to.
                 * @example 12345678
                 */
                classificationIds?: string[];
                /**
                 * @description A comma-delimited list of data sets to include in the response. Default: summaries.
                 * @example summaries
                 */
                includedData?: ("identifiers" | "images" | "productTypes" | "salesRanks" | "summaries" | "variations" | "vendorDetails")[];
                /**
                 * @description A comma-delimited list of words or item identifiers to search the Amazon catalog for.
                 * @example shoes
                 */
                keywords: string[];
                /**
                 * @description The language the keywords are provided in. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                keywordsLocale?: string;
                /**
                 * @description Locale for retrieving localized summaries. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                locale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description Number of results to be returned per page.
                 * @example 9
                 */
                pageSize?: number;
                /**
                 * @description A token to fetch a certain page when there are multiple pages worth of results.
                 * @example sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234
                 */
                pageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ItemSearchResults"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
        };
    };
    "catalogItems_2020-12-01_getCatalogItem": {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of data sets to include in the response. Default: summaries.
                 * @example summaries
                 */
                includedData?: ("attributes" | "identifiers" | "images" | "productTypes" | "salesRanks" | "summaries" | "variations" | "vendorDetails")[];
                /**
                 * @description Locale for retrieving localized summaries. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                locale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers. Data sets in the response contain data only for the specified marketplaces.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) of the item. */
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_Item"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2020-12-01_ErrorList"];
                };
            };
        };
    };
    searchCatalogItems: {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of brand names that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
                 * @example Beautiful Boats
                 */
                brandNames?: string[];
                /**
                 * @description A comma-delimited list of classification identifiers that you can use to limit the search in queries based on `keywords`. **Note:** Cannot be used with `identifiers`.
                 * @example 12345678
                 */
                classificationIds?: string[];
                /**
                 * @description A comma-delimited list of product identifiers that you can use to search the Amazon catalog. **Note:** You cannot include `identifiers` and `keywords` in the same request.
                 * @example shoes
                 */
                identifiers?: string[];
                /**
                 * @description The type of product identifiers that you can use to search the Amazon catalog. **Note:** `identifiersType` is required when `identifiers` is in the request.
                 * @example ASIN
                 */
                identifiersType?: "ASIN" | "EAN" | "GTIN" | "ISBN" | "JAN" | "MINSAN" | "SKU" | "UPC";
                /**
                 * @description A comma-delimited list of datasets to include in the response.
                 * @example summaries
                 */
                includedData?: ("attributes" | "classifications" | "dimensions" | "identifiers" | "images" | "productTypes" | "relationships" | "salesRanks" | "summaries" | "vendorDetails")[];
                /**
                 * @description A comma-delimited list of keywords that you can use to search the Amazon catalog. **Note:** You cannot include `keywords` and `identifiers` in the same request.
                 * @example shoes
                 */
                keywords?: string[];
                /**
                 * @description The language of the keywords that are included in queries based on `keywords`. Defaults to the primary locale of the marketplace. **Note:** Cannot be used with `identifiers`.
                 * @example en_US
                 */
                keywordsLocale?: string;
                /**
                 * @description The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                locale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description The number of results to include on each page.
                 * @example 9
                 */
                pageSize?: number;
                /**
                 * @description A token that you can use to fetch a specific page when there are multiple pages of results.
                 * @example sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234
                 */
                pageToken?: string;
                /** @description A selling partner identifier, such as a seller account or vendor code. **Note:** Required when `identifiersType` is `SKU`. */
                sellerId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ItemSearchResults"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
        };
    };
    getCatalogItem: {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of datasets to include in the response.
                 * @example summaries
                 */
                includedData?: ("attributes" | "classifications" | "dimensions" | "identifiers" | "images" | "productTypes" | "relationships" | "salesRanks" | "summaries" | "vendorDetails")[];
                /**
                 * @description The locale for which you want to retrieve localized summaries. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                locale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) of the item. */
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_Item"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItems_2022-04-01_ErrorList"];
                };
            };
        };
    };
    getVehicles: {
        parameters: {
            query: {
                /**
                 * @description An identifier for the marketplace in which the resource operates.
                 * @example A1PA6795UKMFR9
                 */
                marketplaceId: string;
                /**
                 * @description A token to fetch a certain page when there are multiple pages worth of results.
                 * @example sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234
                 */
                pageToken?: string;
                /**
                 * @description Date in ISO 8601 format, if provided only vehicles which are modified/added to Amazon's catalog after this date will be returned.
                 * @example 2024-01-05T18:00:03+00:00
                 */
                updatedAfter?: string;
                /**
                 * @description An identifier for vehicle type.
                 * @example CAR
                 */
                vehicleType: "CAR" | "MOTORBIKE";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_VehiclesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vehicles_2024-11-01_ErrorList"];
                };
            };
        };
    };
    listCatalogCategories: {
        parameters: {
            query: {
                /** @description The Amazon Standard Identification Number (ASIN) of the item. */
                ASIN?: string;
                /** @description A marketplace identifier. Specifies the marketplace for the item. */
                MarketplaceId: string;
                /** @description Used to identify items in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit. */
                SellerSKU?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["catalogItemsV0_ListCatalogCategoriesResponse"];
                };
            };
        };
    };
    getBrowseNodeReturnTopics: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description A browse node ID is a unique identifier for a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content. */
                browseNodeId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReturnTopicsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getBrowseNodeReturnTrends: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content. */
                browseNodeId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReturnTrendsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getBrowseNodeReviewTopics: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
                /**
                 * @description The metric by which to sort the data in the response.
                 * @example MENTIONS
                 */
                sortBy: string;
            };
            header?: never;
            path: {
                /** @description The ID of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content. */
                browseNodeId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTopicsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getBrowseNodeReviewTrends: {
        parameters: {
            query: {
                /** @description The marketplace ID is the globally unique identifier of a marketplace. For more information, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description A browse node ID is a unique identifier of a browse node. A browse node is a named location in a browse tree that is used for navigation, product classification, and website content. */
                browseNodeId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_BrowseNodeReviewTrendsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getItemBrowseNode: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. */
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_BrowseNodeResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getItemReviewTopics: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
                /**
                 * @description The metric by which to sort data in the response.
                 * @example MENTIONS
                 */
                sortBy: string;
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. The value must be a child ASIN. */
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ItemReviewTopicsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getItemReviewTrends: {
        parameters: {
            query: {
                /** @description The MarketplaceId is the globally unique identifier of a marketplace, you can refer to the marketplaceId here : https://developer-docs.amazon.com/sp-api/docs/marketplace-ids. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) is the unique identifier of a product within a marketplace. This API takes child ASIN as an input. */
                asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ItemReviewTrendsResponse"];
                };
            };
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["customerFeedback_2024-06-01_ErrorList"];
                };
            };
        };
    };
    getDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the Data Kiosk document. */
                documentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_GetDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
        };
    };
    getQueries: {
        parameters: {
            query?: {
                /** @description The earliest query creation date and time for queries to include in the response, in ISO 8601 date time format. The default is 90 days ago. */
                createdSince?: string;
                /** @description The latest query creation date and time for queries to include in the response, in ISO 8601 date time format. The default is the time of the `getQueries` request. */
                createdUntil?: string;
                /** @description The maximum number of queries to return in a single call. */
                pageSize?: number;
                /** @description A token to fetch a certain page of results when there are multiple pages of results available. The value of this token is fetched from the `pagination.nextToken` field returned in the `GetQueriesResponse` object. All other parameters must be provided with the same values that were provided with the request that generated this token, with the exception of `pageSize` which can be modified between calls to `getQueries`. In the absence of this token value, `getQueries` returns the first page of results. */
                paginationToken?: string;
                /** @description A list of processing statuses used to filter queries. */
                processingStatuses?: ("CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_GetQueriesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
        };
    };
    createQuery: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The body of the request. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["dataKiosk_2023-11-15_CreateQuerySpecification"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_CreateQueryResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
        };
    };
    getQuery: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The query identifier. */
                queryId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_Query"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
        };
    };
    cancelQuery: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the query. This identifier is unique only in combination with a selling partner account ID. */
                queryId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["dataKiosk_2023-11-15_ErrorList"];
                };
            };
        };
    };
    searchDefinitionsProductTypes: {
        parameters: {
            query: {
                /**
                 * @description The title of the ASIN to get the product type recommendation. **Note:** Cannot be used with `keywords`.
                 * @example Running shoes
                 */
                itemName?: string;
                /**
                 * @description A comma-delimited list of keywords to search product types. **Note:** Cannot be used with `itemName`.
                 * @example LUGGAGE
                 */
                keywords?: string[];
                /**
                 * @description The locale for the display names in the response. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                locale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description The locale used for the `keywords` and `itemName` parameters. Defaults to the primary locale of the marketplace.
                 * @example en_US
                 */
                searchLocale?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved a list of Amazon product types that have definitions available. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ProductTypeList"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
        };
    };
    getDefinitionsProductType: {
        parameters: {
            query: {
                /**
                 * @description Locale for retrieving display labels and other presentation details. Defaults to the default language of the first marketplace in the request.
                 * @example DEFAULT
                 */
                locale?: "DEFAULT" | "ar" | "ar_AE" | "de" | "de_DE" | "en" | "en_AE" | "en_AU" | "en_CA" | "en_GB" | "en_IN" | "en_SG" | "en_US" | "es" | "es_ES" | "es_MX" | "es_US" | "fr" | "fr_CA" | "fr_FR" | "it" | "it_IT" | "ja" | "ja_JP" | "nl" | "nl_NL" | "pl" | "pl_PL" | "pt" | "pt_BR" | "pt_PT" | "sv" | "sv_SE" | "tr" | "tr_TR" | "zh" | "zh_CN" | "zh_TW";
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 *     Note: This parameter is limited to one marketplaceId at this time.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description The version of the Amazon product type to retrieve. Defaults to "LATEST",. Prerelease versions of product type definitions may be retrieved with "RELEASE_CANDIDATE". If no prerelease version is currently available, the "LATEST" live version will be provided.
                 * @example LATEST
                 */
                productTypeVersion?: string;
                /**
                 * @description The name of the requirements set to retrieve requirements for.
                 * @example LISTING
                 */
                requirements?: "LISTING" | "LISTING_PRODUCT_ONLY" | "LISTING_OFFER_ONLY";
                /**
                 * @description Identifies if the required attributes for a requirements set are enforced by the product type definition schema. Non-enforced requirements enable structural validation of individual attributes without all the required attributes being present (such as for partial updates).
                 * @example ENFORCED
                 */
                requirementsEnforced?: "ENFORCED" | "NOT_ENFORCED";
                /** @description A selling partner identifier. When provided, seller-specific requirements and values are populated within the product type definition schema, such as brand names associated with the selling partner. */
                sellerId?: string;
            };
            header?: never;
            path: {
                /**
                 * @description The Amazon product type name.
                 * @example LUGGAGE
                 */
                productType: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved an Amazon product type definition. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ProductTypeDefinition"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["definitionsProductTypes_2020-09-01_ErrorList"];
                };
            };
        };
    };
    getScheduledPackage: {
        parameters: {
            query: {
                /** @description An Amazon-defined order identifier. Identifies the order that the seller wants to deliver using Amazon Easy Ship. */
                amazonOrderId: string;
                /** @description An identifier for the marketplace in which the seller is selling. */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_Package"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
        };
    };
    createScheduledPackage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `createScheduledPackage` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["easyShip_2022-03-23_CreateScheduledPackageRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_Package"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
        };
    };
    updateScheduledPackages: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `updateScheduledPackages` operation. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["easyShip_2022-03-23_UpdateScheduledPackagesRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_Packages"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
        };
    };
    createScheduledPackageBulk: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `createScheduledPackageBulk` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["easyShip_2022-03-23_CreateScheduledPackagesRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_CreateScheduledPackagesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
        };
    };
    listHandoverSlots: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `listHandoverSlots` operation. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["easyShip_2022-03-23_ListHandoverSlotsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ListHandoverSlotsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["easyShip_2022-03-23_ErrorList"];
                };
            };
        };
    };
    listReturns: {
        parameters: {
            query?: {
                /**
                 * @description Return items created after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2021-03-18T15:23:58Z
                 */
                createdSince?: string;
                /**
                 * @description Return items created before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2021-03-19T15:23:58Z
                 */
                createdUntil?: string;
                /** @description DEPRECATED. Use the `createdSince` parameter. */
                lastUpdatedAfter?: string;
                /**
                 * @description DEPRECATED. Use the `createdUntil` parameter.
                 * @example 2021-03-19T15:23:58Z
                 */
                lastUpdatedBefore?: string;
                /**
                 * @description Return items updated after the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply `returnLocationId` and `status`.
                 * @example 2021-03-18T20:13:08Z
                 */
                lastUpdatedSince?: string;
                /**
                 * @description Return items whose most recent update is before the specified date are included in the response. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. If you supply this parameter, you must also supply `returnLocationId` and `status`.
                 * @example 2021-03-19T20:13:08Z
                 */
                lastUpdatedUntil?: string;
                /**
                 * @description The number of return items you want to include in the response.
                 *
                 *     **Default:** 10
                 *
                 *     **Maximum:** 100
                 * @example 50
                 */
                maxResults?: number;
                /**
                 * @description A token that you use to retrieve the next page of results. The response includes `nextToken` when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
                 * @example eyJsYXN0VXBkYXRlZFRpbWVzdGFtcCI6eyJzIjpu
                 */
                nextToken?: string;
                /** @description The SmartConnect location ID of the location from which you want to retrieve return items. */
                returnLocationId?: string;
                /**
                 * @description The reverse tracking ID of the return items you want to list.
                 * @example 10024773658
                 */
                reverseTrackingId?: string;
                /** @description The RMA ID of the return items you want to list. */
                rmaId?: string;
                /** @description The status of return items you want to list. You can retrieve all new return items with the `CREATED` status. */
                status?: "CREATED" | "CARRIER_NOTIFIED_TO_PICK_UP_FROM_CUSTOMER" | "CARRIER_OUT_FOR_PICK_UP_FROM_CUSTOMER" | "CUSTOMER_CANCELLED_PICK_UP" | "CUSTOMER_RESCHEDULED_PICK_UP" | "PICKED_FROM_CUSTOMER" | "IN_TRANSIT" | "OUT_FOR_DELIVERY" | "DELIVERED" | "REPLANNED" | "CUSTOMER_DROPPED_OFF" | "PARTIALLY_PROCESSED" | "PROCESSED" | "REJECTED" | "CANCELLED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. The response contains a list of return items. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ReturnsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
        };
    };
    getReturn: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the return item you want. */
                returnId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_Return"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentReturns_2024-09-11_ErrorList"];
                };
            };
        };
    };
    "externalFulfillmentShipments_2024-09-11_getShipments": {
        parameters: {
            query: {
                /**
                 * @description The channel name associated with the location.
                 * @example FBA
                 */
                channelName?: string;
                /**
                 * @description The response includes shipments whose latest update is after the specified time. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2020-06-08T17:23:58Z
                 */
                lastUpdatedAfter?: string;
                /**
                 * @description The response includes shipments whose latest update is before the specified time. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2020-06-08T17:23:58Z
                 */
                lastUpdatedBefore?: string;
                /**
                 * @description The Amazon channel location identifier for the shipments you want to retrieve.
                 * @example ABCD
                 */
                locationId?: string;
                /**
                 * @description The marketplace ID associated with the location. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A21TJRUUN4KGV
                 */
                marketplaceId?: string;
                /**
                 * @description The maximum number of shipments to include in the response.
                 * @example 10
                 */
                maxResults?: number;
                /**
                 * @description A token that you use to retrieve the next page of results. The response includes `nextToken` when there are multiple pages of results. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages.
                 * @example eyJsYXN0VXBkYXRlZFRpbWVzdGFtcCI6eyJzIjpLL
                 */
                paginationToken?: string;
                /**
                 * @description The status of shipment you want to include in the response. To retrieve all new shipments, set this value to `ACCEPTED`.
                 * @example CONFIRMED
                 */
                status: "CREATED" | "ACCEPTED" | "CONFIRMED" | "PACKAGE_CREATED" | "PICKUP_SLOT_RETRIEVED" | "INVOICE_GENERATED" | "SHIPLABEL_GENERATED" | "CANCELLED" | "SHIPPED" | "DELIVERED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. The response contains a list of shipments. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipmentsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    "externalFulfillmentShipments_2024-09-11_getShipment": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /**
                 * @description The ID of the shipment you want to retrieve.
                 * @example D1px1063T
                 */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_Shipment"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    processShipment: {
        parameters: {
            query: {
                /** @description The status of the shipment. */
                operation: "CONFIRM" | "REJECT";
            };
            header?: never;
            path: {
                /** @description The ID of the shipment you want to confirm or reject. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description Information about the shipment and its line items. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipmentAcknowledgementRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    retrieveInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the shipment whose invoice you want to retrieve. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_InvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    generateInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the shipment whose invoice you want. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_InvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    createPackages: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description A list of packages in the shipment. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_Packages"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    updatePackage: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the package whose information you want to update. */
                packageId: string;
                /** @description The ID of the shipment to which the package belongs. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_Package"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    updatePackageStatus: {
        parameters: {
            query?: {
                /** @description **DEPRECATED**. Do not use. Package status is defined in the body parameter. */
                status?: "SHIPPED";
            };
            header?: never;
            path: {
                /** @description The ID of the package whose status you want to update. */
                packageId: string;
                /** @description The ID of the shipment to which the package belongs. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_PackageDeliveryStatus"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    generateShipLabels: {
        parameters: {
            query: {
                /** @description Specify whether you want to generate or regenerate a label. */
                operation: "GENERATE" | "REGENERATE";
                /** @description The ID of the shipping option whose shipping labels you want. */
                shippingOptionId?: string;
            };
            header?: never;
            path: {
                /** @description The ID of the shipment whose shipping labels you want to generate and retrieve. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description Shipping details for when shipping is not done by the marketplace channel. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipLabelsInput"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ShipLabelsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    retrieveShippingOptions: {
        parameters: {
            query: {
                /** @description The ID of the package for which you want to retrieve shipping options. */
                packageId: string;
            };
            header?: never;
            path: {
                /** @description The ID of the shipment to which the package belongs. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ShippingOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified conflicts with the current state */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentShipments_2024-09-11_ErrorList"];
                };
            };
        };
    };
    batchInventory: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description A list of inventory requests. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_BatchInventoryRequest"];
            };
        };
        responses: {
            /** @description Multi-status response that contains information about numerous resources. */
            207: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_BatchInventoryResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["externalFulfillmentInventory_2024-09-11_ErrorList"];
                };
            };
        };
    };
    getPrepInstructions: {
        parameters: {
            query: {
                /** @description A list of ASIN values. Used to identify items for which you want item preparation instructions to help with item sourcing decisions.
                 *
                 *     Note: ASINs must be included in the product catalog for at least one of the marketplaces that the seller  participates in. Any ASIN that is not included in the product catalog for at least one of the marketplaces that the seller participates in is returned in the InvalidASINList property in the response. You can find out which marketplaces a seller participates in by calling the getMarketplaceParticipations operation in the Selling Partner API for Sellers. */
                ASINList?: string[];
                /** @description A list of SellerSKU values. Used to identify items for which you want labeling requirements and item preparation instructions for shipment to Amazon's fulfillment network. The SellerSKU is qualified by the Seller ID, which is included with every call to the Seller Partner API.
                 *
                 *     Note: Include seller SKUs that you have used to list items on Amazon's retail website. If you include a seller SKU that you have never used to list an item on Amazon's retail website, the seller SKU is returned in the InvalidSKUList property in the response. */
                SellerSKUList?: string[];
                /** @description The country code of the country to which the items will be shipped. Note that labeling requirements and item preparation instructions can vary by country. */
                ShipToCountryCode: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetPrepInstructionsResponse"];
                };
            };
        };
    };
    getShipmentItems: {
        parameters: {
            query: {
                /** @description A date used for selecting inbound shipment items that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller. */
                LastUpdatedAfter?: string;
                /** @description A date used for selecting inbound shipment items that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller. */
                LastUpdatedBefore?: string;
                /** @description A marketplace identifier. Specifies the marketplace where the product would be stored. */
                MarketplaceId: string;
                /** @description A string token returned in the response to your previous request. */
                NextToken?: string;
                /** @description Indicates whether items are returned using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or using NextToken, which continues returning items specified in a previous request. */
                QueryType: "DATE_RANGE" | "NEXT_TOKEN";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
        };
    };
    getShipments: {
        parameters: {
            query: {
                /** @description A date used for selecting inbound shipments that were last updated after (or at) a specified time. The selection includes updates made by Amazon and by the seller. */
                LastUpdatedAfter?: string;
                /** @description A date used for selecting inbound shipments that were last updated before (or at) a specified time. The selection includes updates made by Amazon and by the seller. */
                LastUpdatedBefore?: string;
                /** @description A marketplace identifier. Specifies the marketplace where the product would be stored. */
                MarketplaceId: string;
                /** @description A string token returned in the response to your previous request. */
                NextToken?: string;
                /** @description Indicates whether shipments are returned using shipment information (by providing the ShipmentStatusList or ShipmentIdList parameters), using a date range (by providing the LastUpdatedAfter and LastUpdatedBefore parameters), or by using NextToken to continue returning items specified in a previous request. */
                QueryType: "SHIPMENT" | "DATE_RANGE" | "NEXT_TOKEN";
                /** @description A list of shipment IDs used to select the shipments that you want. If both ShipmentStatusList and ShipmentIdList are specified, only shipments that match both parameters are returned. */
                ShipmentIdList?: string[];
                /** @description A list of ShipmentStatus values. Used to select shipments with a current status that matches the status values that you specify. */
                ShipmentStatusList?: ("WORKING" | "READY_TO_SHIP" | "SHIPPED" | "RECEIVING" | "CANCELLED" | "DELETED" | "CLOSED" | "ERROR" | "IN_TRANSIT" | "DELIVERED" | "CHECKED_IN")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentsResponse"];
                };
            };
        };
    };
    getBillOfLading: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A shipment identifier originally returned by the createInboundShipmentPlan operation. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetBillOfLadingResponse"];
                };
            };
        };
    };
    getShipmentItemsByShipmentId: {
        parameters: {
            query?: {
                /** @description Deprecated. Do not use. */
                MarketplaceId?: string;
            };
            header?: never;
            path: {
                /** @description A shipment identifier used for selecting items in a specific inbound shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetShipmentItemsResponse"];
                };
            };
        };
    };
    getLabels: {
        parameters: {
            query: {
                /** @description The type of labels requested.  */
                LabelType: "BARCODE_2D" | "UNIQUE" | "PALLET";
                /** @description The number of packages in the shipment. */
                NumberOfPackages?: number;
                /** @description The number of pallets in the shipment. This returns four identical labels for each pallet. */
                NumberOfPallets?: number;
                /** @description A list of identifiers that specify packages for which you want package labels printed.
                 *
                 *     If you provide box content information with the [FBA Inbound Shipment Carton Information Feed](https://developer-docs.amazon.com/sp-api/docs/fulfillment-by-amazon-feed-type-values#fba-inbound-shipment-carton-information-feed), then `PackageLabelsToPrint` must match the `CartonId` values you provide through that feed. If you provide box content information with the Fulfillment Inbound API v2024-03-20, then `PackageLabelsToPrint` must match the `boxID` values from the [`listShipmentBoxes`](https://developer-docs.amazon.com/sp-api/reference/listshipmentboxes) response. If these values do not match as required, the operation returns the `IncorrectPackageIdentifier` error code. */
                PackageLabelsToPrint?: string[];
                /** @description The page size for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments. Max value:1000. */
                PageSize?: number;
                /** @description The page start index for paginating through the total packages' labels. This is a required parameter for Non-Partnered LTL Shipments. */
                PageStartIndex?: number;
                /** @description The page type to use to print the labels. Submitting a PageType value that is not supported in your marketplace returns an error. */
                PageType: "PackageLabel_Letter_2" | "PackageLabel_Letter_4" | "PackageLabel_Letter_6" | "PackageLabel_Letter_6_CarrierLeft" | "PackageLabel_A4_2" | "PackageLabel_A4_4" | "PackageLabel_Plain_Paper" | "PackageLabel_Plain_Paper_CarrierBottom" | "PackageLabel_Thermal" | "PackageLabel_Thermal_Unified" | "PackageLabel_Thermal_NonPCP" | "PackageLabel_Thermal_No_Carrier_Rotation";
            };
            header?: never;
            path: {
                /** @description A shipment identifier originally returned by the createInboundShipmentPlan operation. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInboundV0_GetLabelsResponse"];
                };
            };
        };
    };
    getItemEligibilityPreview: {
        parameters: {
            query: {
                /** @description The ASIN of the item for which you want an eligibility preview. */
                asin: string;
                /** @description The identifier for the marketplace in which you want to determine eligibility. Required only when program=INBOUND. */
                marketplaceIds?: string[];
                /** @description The program that you want to check eligibility against. */
                program: "INBOUND" | "COMMINGLING";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                    ItemEligibilityPreview: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInbound_GetItemEligibilityPreviewResponse"];
                };
            };
        };
    };
    createInventoryItem: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description CreateInventoryItem Request Body Parameter. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fbaInventory_CreateInventoryItemRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_CreateInventoryItemResponse"];
                };
            };
        };
    };
    deleteInventoryItem: {
        parameters: {
            query: {
                /** @description The marketplace ID for the marketplace for which the sellerSku is to be deleted. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description A single seller SKU used for querying the specified seller SKU inventory summaries. */
                sellerSku: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_DeleteInventoryItemResponse"];
                };
            };
        };
    };
    addInventory: {
        parameters: {
            query?: never;
            header: {
                /** @description A unique token/requestId provided with each call to ensure idempotency. */
                "x-amzn-idempotency-token": string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description List of items to add to Sandbox inventory. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fbaInventory_AddInventoryRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_AddInventoryResponse"];
                };
            };
        };
    };
    getInventorySummaries: {
        parameters: {
            query: {
                /** @description true to return inventory summaries with additional summarized inventory details and quantities. Otherwise, returns inventory summaries only (default value). */
                details?: boolean;
                /** @description The granularity ID for the inventory aggregation level. */
                granularityId: string;
                /** @description The granularity type for the inventory aggregation level. */
                granularityType: "Marketplace";
                /** @description The marketplace ID for the marketplace for which to return inventory summaries. */
                marketplaceIds: string[];
                /** @description String token returned in the response of your previous request. The string token will expire 30 seconds after being created. */
                nextToken?: string;
                /** @description A single seller SKU used for querying the specified seller SKU inventory summaries. */
                sellerSku?: string;
                /** @description A list of seller SKUs for which to return inventory summaries. You may specify up to 50 SKUs. */
                sellerSkus?: string[];
                /** @description A start date and time in ISO8601 format. If specified, all inventory summaries that have changed since then are returned. You must specify a date and time that is no earlier than 18 months prior to the date and time when you call the API. Note: Changes in inboundWorkingQuantity, inboundShippedQuantity and inboundReceivingQuantity are not detected. */
                startDateTime?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fbaInventory_GetInventorySummariesResponse"];
                };
            };
        };
    };
    deliveryOffers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description GetDeliveryOffersRequest parameter */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetDeliveryOffersResponse"];
                };
            };
        };
    };
    getFeatures: {
        parameters: {
            query: {
                /** @description The marketplace for which to return the list of features. */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeaturesResponse"];
                };
            };
        };
    };
    getFeatureInventory: {
        parameters: {
            query: {
                /** @description The marketplace for which to return a list of the inventory that is eligible for the specified feature. */
                marketplaceId: string;
                /** @description A string token returned in the response to your previous request that is used to return the next response page. A value of `null` will return the first page. */
                nextToken?: string;
                /** @description A date that you can use to select inventory that has been updated since a specified date. An update is defined as any change in feature-enabled inventory availability. The date must be in the format `yyyy-MM-ddTHH:mm:ss.sssZ` */
                queryStartDate?: string;
            };
            header?: never;
            path: {
                /** @description The name of the feature for which to return a list of eligible inventory. */
                featureName: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureInventoryResponse"];
                };
            };
        };
    };
    getFeatureSKU: {
        parameters: {
            query: {
                /** @description The marketplace for which to return the count. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The name of the feature. */
                featureName: string;
                /** @description Used to identify an item in the given marketplace. `sellerSku` is qualified by the seller's `sellerId`, which is included with every operation that you submit. */
                sellerSku: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFeatureSkuResponse"];
                };
            };
        };
    };
    listAllFulfillmentOrders: {
        parameters: {
            query?: {
                /** @description A string token returned in the response to your previous request. */
                nextToken?: string;
                /** @description A date used to select fulfillment orders that were last updated after (or at) a specified time. An update is defined as any change in fulfillment order status, including the creation of a new fulfillment order. */
                queryStartDate?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListAllFulfillmentOrdersResponse"];
                };
            };
        };
    };
    createFulfillmentOrder: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description CreateFulfillmentOrderRequest parameter */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentOrderResponse"];
                };
            };
        };
    };
    getFulfillmentOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
                sellerFulfillmentOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentOrderResponse"];
                };
            };
        };
    };
    updateFulfillmentOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
                sellerFulfillmentOrderId: string;
            };
            cookie?: never;
        };
        /** @description The request body of the `updateFulfillmentOrder` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_UpdateFulfillmentOrderResponse"];
                };
            };
        };
    };
    cancelFulfillmentOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
                sellerFulfillmentOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CancelFulfillmentOrderResponse"];
                };
            };
        };
    };
    createFulfillmentReturn: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An identifier the seller assigns to the fulfillment order at the time it was created. The seller uses their own records to find the correct `sellerFulfillmentOrderId` value based on the buyer's request to return items. */
                sellerFulfillmentOrderId: string;
            };
            cookie?: never;
        };
        /** @description The request body of the `createFulfillmentReturn` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_CreateFulfillmentReturnResponse"];
                };
            };
        };
    };
    submitFulfillmentOrderStatusUpdate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
                sellerFulfillmentOrderId: string;
            };
            cookie?: never;
        };
        /** @description The identifier assigned to the item by the seller when the fulfillment order was created. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_SubmitFulfillmentOrderStatusUpdateResponse"];
                };
            };
        };
    };
    getFulfillmentPreview: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description GetFulfillmentPreviewRequest parameter */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetFulfillmentPreviewResponse"];
                };
            };
        };
    };
    listReturnReasonCodes: {
        parameters: {
            query: {
                /** @description The language that the `TranslatedDescription` property of the `ReasonCodeDetails` response object should be translated into. */
                language?: string;
                /** @description The marketplace for which the seller wants return reason codes. */
                marketplaceId?: string;
                /** @description The identifier assigned to the item by the seller when the fulfillment order was created. The service uses this value to determine the marketplace for which the seller wants return reason codes. */
                sellerFulfillmentOrderId?: string;
                /** @description The seller SKU for which return reason codes are required. */
                sellerSku: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_ListReturnReasonCodesResponse"];
                };
            };
        };
    };
    getPackageTrackingDetails: {
        parameters: {
            query?: {
                /** @description The Amazon fulfillment tracking number. You can obtain this value from the `getFulfillmentOrder` operation. */
                amazonFulfillmentTrackingNumber?: string;
                /** @description The unencrypted package identifier. You can obtain this value from the `getFulfillmentOrder` operation. */
                packageNumber?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentOutbound_2020-07-01_GetPackageTrackingDetailsResponse"];
                };
            };
        };
    };
    getShipmentDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide). */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetShipmentDetailsResponse"];
                };
            };
        };
    };
    shipmentInvoicingV0_submitInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_SubmitInvoiceResponse"];
                };
            };
        };
    };
    getInvoiceStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The shipment identifier for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipmentInvoicingV0_GetInvoiceStatusResponse"];
                };
            };
        };
    };
    createFeedDocument: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Specifies the content type for the createFeedDocument operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["feeds_2021-06-30_CreateFeedDocumentSpecification"];
            };
        };
        responses: {
            /** @description Successfully created a feed document that is ready to receive contents. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_CreateFeedDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getFeedDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier of the feed document. */
                feedDocumentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_FeedDocument"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getFeeds: {
        parameters: {
            query?: {
                /** @description The earliest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is 90 days ago. Feeds are retained for a maximum of 90 days. */
                createdSince?: string;
                /** @description The latest feed creation date and time for feeds included in the response, in ISO 8601 format. The default is now. */
                createdUntil?: string;
                /** @description A list of feed types used to filter feeds. When feedTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either feedTypes or nextToken is required. */
                feedTypes?: string[];
                /** @description A list of marketplace identifiers used to filter feeds. The feeds returned will match at least one of the marketplaces that you specify. */
                marketplaceIds?: string[];
                /** @description A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getFeeds operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail. */
                nextToken?: string;
                /** @description The maximum number of feeds to return in a single call. */
                pageSize?: number;
                /** @description A list of processing statuses used to filter feeds. */
                processingStatuses?: ("CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_GetFeedsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    createFeed: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Information required to create the feed. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["feeds_2021-06-30_CreateFeedSpecification"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_CreateFeedResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getFeed: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the feed. This identifier is unique only in combination with a seller ID. */
                feedId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_Feed"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    cancelFeed: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the feed. This identifier is unique only in combination with a seller ID. */
                feedId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["feeds_2021-06-30_ErrorList"];
                };
            };
        };
    };
    listTransactions: {
        parameters: {
            query: {
                /**
                 * @description The identifier of the marketplace from which you want to retrieve transactions. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example ATIV93840DER
                 */
                marketplaceId?: string;
                /**
                 * @description A string token returned in the response of your previous request.
                 * @example jehgri34yo7jr9e8f984tr9i4o
                 */
                nextToken?: string;
                /**
                 * @description The response includes financial events posted on or after this date. This date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The date-time must be more than two minutes before the time of the request.
                 * @example 2023-01-12
                 */
                postedAfter: string;
                /**
                 * @description A date used for selecting transactions posted before (but not at) a specified time. The date-time must be later than PostedAfter and no later than two minutes before the request was submitted, in ISO 8601 date time format. If PostedAfter and PostedBefore are more than 180 days apart, no transactions are returned. You must specify the PostedAfter parameter if you specify the PostedBefore parameter. Default: Now minus two minutes.
                 * @example 2023-02-12
                 */
                postedBefore?: string;
                /**
                 * @description The status of the transaction.
                 *
                 *     **Possible values:**
                 *
                 *     * `DEFERRED`: the transaction is currently deferred.
                 *     * `RELEASED`: the transaction is currently released.
                 *     * `DEFERRED_RELEASED`: the transaction was deferred in the past, but is now released. The status of a deferred transaction is updated to `DEFERRED_RELEASED` when the transaction is released.
                 * @example RELEASED
                 */
                transactionStatus?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ListTransactionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["finances_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getPaymentMethods: {
        parameters: {
            query: {
                /**
                 * @description The identifier of the marketplace from which you want to retrieve payment methods. For the list of possible marketplace identifiers, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example ATVPDKIKX0DER
                 */
                marketplaceId: string;
                /**
                 * @description A comma-separated list of the payment method types you want to include in the response.
                 * @example BANK_ACCOUNT,CARD
                 */
                paymentMethodTypes?: ("BANK_ACCOUNT" | "CARD" | "SELLER_WALLET")[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_GetPaymentMethodsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
        };
    };
    initiatePayout: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `initiatePayout` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["transfers_2024-06-01_InitiatePayoutRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_InitiatePayoutResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["transfers_2024-06-01_ErrorList"];
                };
            };
        };
    };
    listAccounts: {
        parameters: {
            query: {
                /**
                 * @description A marketplace identifier. Specifies the marketplace for which items are returned.
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_BankAccountListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    "sellerWallet_2024-03-01_getAccount": {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /**
                 * @description ID of the Amazon SW account
                 * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                accountId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_BankAccount"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    listAccountBalances: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /**
                 * @description ID of the Amazon SW account
                 * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                accountId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_BalanceListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    listAccountTransactions: {
        parameters: {
            query: {
                /**
                 * @description ID of the Amazon SW account
                 * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                accountId: string;
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
                /**
                 * @description Pagination token to retrieve a specific page of results.
                 * @example Next Page Token
                 */
                nextPageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransactionListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    createTransaction: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header: {
                /**
                 * @description Digital signature for the source currency transaction amount.
                 * @example 1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7
                 */
                amountDigitalSignature: string;
                /**
                 * @description Digital signature for the destination bank account details.
                 * @example U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw
                 */
                destAccountDigitalSignature: string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Defines the actual payload of the request */
        requestBody: {
            content: {
                "application/json": components["schemas"]["sellerWallet_2024-03-01_TransactionInitiationRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_CreateTransactionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request was well-formed (i.e., syntactically correct) but could not be processed because of some restrictions like insufficient funds, transaction limit breach, etc. */
            422: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    getTransaction: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /**
                 * @description ID of the Amazon SW transaction
                 * @example amzn1.transaction.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_Transaction"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    getTransferPreview: {
        parameters: {
            query: {
                /**
                 * @description Represents the base transaction amount without any markup fees, rates that will be used to get the transfer preview.
                 * @example 1000
                 */
                baseAmount: number;
                /**
                 * @description Represents 2 character country code of destination transaction account in ISO 3166 standard format.
                 * @example FR
                 */
                destinationCountryCode: string;
                /**
                 * @description Represents 3 letter currency code in ISO 4217 standard format of the destination transaction country.
                 * @example EUR
                 */
                destinationCurrencyCode: string;
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
                /**
                 * @description Represents 2 character country code of source transaction account in ISO 3166 standard format.
                 * @example US
                 */
                sourceCountryCode: string;
                /**
                 * @description Represents 3 letter currency code in ISO 4217 standard format of the source transaction country.
                 * @example USD
                 */
                sourceCurrencyCode: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferRatePreview"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    listTransferSchedules: {
        parameters: {
            query: {
                /**
                 * @description ID of the Amazon SW account
                 * @example amzn1.account.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                accountId: string;
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
                /**
                 * @description Pagination token to retrieve a specific page of results.
                 * @example Next Page Token
                 */
                nextPageToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferScheduleListing"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    updateTransferSchedule: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header: {
                /**
                 * @description Digital signature for the source currency transaction amount.
                 * @example 1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7
                 */
                amountDigitalSignature: string;
                /**
                 * @description Digital signature for the destination bank account details.
                 * @example U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw
                 */
                destAccountDigitalSignature: string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Defines the actual payload of the scheduled transfer request that is to be updated.
         *      */
        requestBody: {
            content: {
                "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferSchedule"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferSchedule"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    createTransferSchedule: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header: {
                /**
                 * @description Digital signature for the source currency transaction amount.
                 * @example 1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7
                 */
                amountDigitalSignature: string;
                /**
                 * @description Digital signature for the destination bank account details.
                 * @example U8AsRXdh5fvjozFIv6vRUal1EHdFHhrCArIgmWbPtW0HuTlN_LPteg8G8tbvF4QmoRekOO84nQxg8j4gs0wEyAktg2Sm80a_FaTswv-U8XUXGHZ1UBagGD9zEPrGBbia_N5gm4fCOW-V3mSieblwBiUyq8frUYL606WtuStHtE3zJgaj9-B1ObhudxxQALuBKjPeksc7-qyrT8lwchdkiaprNwsqpv3aKid7Ux3uwEzxiEedO3QWvv6nCZnNNxK-zz2Zj6tPDE_mgQk5tJv4xRgMxtcTMmr7_ce4A9wqRxQqwBerIHpOIzpZizmXAG56uG8-hJojmPwnsPif7ihMuw
                 */
                destAccountDigitalSignature: string;
            };
            path?: never;
            cookie?: never;
        };
        /** @description Defines the actual payload of the request */
        requestBody: {
            content: {
                "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferScheduleRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferSchedule"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Transfer schedule already exists for same source and destination account combination. */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    getTransferSchedule: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /**
                 * @description The schedule ID of the Amazon Seller Wallet transfer.
                 * @example amzn1.transferschedule.AKNWCDNVP3FNJDCLK876
                 */
                transferScheduleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_TransferSchedule"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    deleteScheduleTransaction: {
        parameters: {
            query: {
                /**
                 * @description The marketplace for which items are returned. The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
                 * @example A1RKKUPIHCS9HS
                 */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /**
                 * @description A unique reference ID for a scheduled transfer.
                 * @example amzn1.scheduletransfer.AGUGL2EM3ZHYSRJWH2UCRPIM5JFQ
                 */
                transferScheduleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully deleted the transfer schedule. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_DeleteTransferSchedule"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Request Timed Out. */
            408: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellerWallet_2024-03-01_ErrorList"];
                };
            };
        };
    };
    listFinancialEventGroups: {
        parameters: {
            query?: {
                /** @description A date used for selecting financial event groups that opened after (or at) a specified date and time, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. The date-time must be no later than two minutes before the request was submitted. */
                FinancialEventGroupStartedAfter?: string;
                /** @description A date used for selecting financial event groups that opened before (but not at) a specified date and time, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. The date-time  must be later than FinancialEventGroupStartedAfter and no later than two minutes before the request was submitted. If FinancialEventGroupStartedAfter and FinancialEventGroupStartedBefore are more than 180 days apart, no financial event groups are returned. */
                FinancialEventGroupStartedBefore?: string;
                /** @description The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'. */
                MaxResultsPerPage?: number;
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventGroupsResponse"];
                };
            };
        };
    };
    listFinancialEventsByGroupId: {
        parameters: {
            query?: {
                /** @description The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'. */
                MaxResultsPerPage?: number;
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
                /** @description A date used for selecting financial events posted after (or at) a specified time. The date-time **must** be more than two minutes before the time of the request, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. */
                PostedAfter?: string;
                /** @description A date used for selecting financial events posted before (but not at) a specified time. The date-time must be later than `PostedAfter` and no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. If `PostedAfter` and `PostedBefore` are more than 180 days apart, no financial events are returned. You must specify the `PostedAfter` parameter if you specify the `PostedBefore` parameter. Default: Now minus two minutes. */
                PostedBefore?: string;
            };
            header?: never;
            path: {
                /** @description The identifier of the financial event group to which the events belong. */
                eventGroupId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
        };
    };
    listFinancialEvents: {
        parameters: {
            query?: {
                /** @description The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'. */
                MaxResultsPerPage?: number;
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
                /** @description A date used for selecting financial events posted after (or at) a specified time. The date-time must be no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. */
                PostedAfter?: string;
                /** @description A date used for selecting financial events posted before (but not at) a specified time. The date-time must be later than PostedAfter and no later than two minutes before the request was submitted, in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date time format. If PostedAfter and PostedBefore are more than 180 days apart, no financial events are returned. You must specify the PostedAfter parameter if you specify the PostedBefore parameter. Default: Now minus two minutes. */
                PostedBefore?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
        };
    };
    listFinancialEventsByOrderId: {
        parameters: {
            query?: {
                /** @description The maximum number of results to return per page. If the response exceeds the maximum number of transactions or 10 MB, the API responds with 'InvalidInput'. */
                MaxResultsPerPage?: number;
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
            };
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Financial Events successfully retrieved. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["financesV0_ListFinancialEventsResponse"];
                };
            };
        };
    };
    listInboundPlans: {
        parameters: {
            query?: {
                /** @description The number of inbound plans to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
                /** @description Sort by field. */
                sortBy?: "LAST_UPDATED_TIME" | "CREATION_TIME";
                /** @description The sort order. */
                sortOrder?: "ASC" | "DESC";
                /** @description The status of an inbound plan. */
                status?: "ACTIVE" | "VOIDED" | "SHIPPED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListInboundPlans 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListInboundPlansResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    createInboundPlan: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The body of the request to `createInboundPlan`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CreateInboundPlanRequest"];
            };
        };
        responses: {
            /** @description CreateInboundPlan 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CreateInboundPlanResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getInboundPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetInboundPlan 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_InboundPlan"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listInboundPlanBoxes: {
        parameters: {
            query?: {
                /** @description The number of boxes to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListInboundPlanBoxes 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListInboundPlanBoxesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    cancelInboundPlan: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description CancelInboundPlan 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CancelInboundPlanResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listInboundPlanItems: {
        parameters: {
            query?: {
                /** @description The number of items to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListInboundPlanItems 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListInboundPlanItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    updateInboundPlanName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `updateInboundPlanName`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateInboundPlanNameRequest"];
            };
        };
        responses: {
            /** @description UpdateInboundPlanName 204 response */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listPackingGroupBoxes: {
        parameters: {
            query?: {
                /** @description The number of packing group boxes to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a packing group. */
                packingGroupId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListPackingGroupBoxes 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListPackingGroupBoxesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listPackingGroupItems: {
        parameters: {
            query?: {
                /** @description The number of packing group items to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a packing group. */
                packingGroupId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListPackingGroupItems 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListPackingGroupItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    setPackingInformation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `setPackingInformation`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_SetPackingInformationRequest"];
            };
        };
        responses: {
            /** @description SetPackingInformation 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_SetPackingInformationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listPackingOptions: {
        parameters: {
            query?: {
                /** @description The number of packing options to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListPackingOptions 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListPackingOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generatePackingOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GeneratePackingOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GeneratePackingOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    confirmPackingOption: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a packing option. */
                packingOptionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ConfirmPackingOption 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmPackingOptionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listInboundPlanPallets: {
        parameters: {
            query?: {
                /** @description The number of pallets to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListInboundPlanPallets 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListInboundPlanPalletsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listPlacementOptions: {
        parameters: {
            query?: {
                /** @description The number of placement options to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListPlacementOptions 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListPlacementOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generatePlacementOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `generatePlacementOptions`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GeneratePlacementOptionsRequest"];
            };
        };
        responses: {
            /** @description GeneratePlacementOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GeneratePlacementOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    confirmPlacementOption: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs. */
                placementOptionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ConfirmPlacementOption 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmPlacementOptionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetShipment 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_Shipment"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listShipmentBoxes: {
        parameters: {
            query?: {
                /** @description The number of boxes to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListShipmentBoxes 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListShipmentBoxesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listShipmentContentUpdatePreviews: {
        parameters: {
            query?: {
                /** @description The number of content update previews to return. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListShipmentContentUpdatePreviews 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListShipmentContentUpdatePreviewsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generateShipmentContentUpdatePreviews: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `generateShipmentContentUpdatePreviews`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateShipmentContentUpdatePreviewsRequest"];
            };
        };
        responses: {
            /** @description GenerateShipmentContentUpdatePreviews 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateShipmentContentUpdatePreviewsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getShipmentContentUpdatePreview: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of a content update preview. */
                contentUpdatePreviewId: string;
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetShipmentContentUpdatePreview 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ContentUpdatePreview"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    confirmShipmentContentUpdatePreview: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of a content update preview. */
                contentUpdatePreviewId: string;
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ConfirmShipmentContentUpdatePreview 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmShipmentContentUpdatePreviewResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getDeliveryChallanDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetDeliveryChallanDocument 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GetDeliveryChallanDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listDeliveryWindowOptions: {
        parameters: {
            query?: {
                /** @description The number of delivery window options to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description The shipment to get delivery window options for. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListDeliveryWindowOptions 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListDeliveryWindowOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generateDeliveryWindowOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description The shipment to generate delivery window options for. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GenerateDeliveryWindowOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateDeliveryWindowOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    confirmDeliveryWindowOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The id of the delivery window option to be confirmed. */
                deliveryWindowOptionId: string;
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description The shipment to confirm the delivery window option for. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ConfirmDeliveryWindowOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmDeliveryWindowOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listShipmentItems: {
        parameters: {
            query?: {
                /** @description The number of items to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListShipmentItems 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListShipmentItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    updateShipmentName: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `updateShipmentName`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateShipmentNameRequest"];
            };
        };
        responses: {
            /** @description UpdateShipmentName 204 response */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listShipmentPallets: {
        parameters: {
            query?: {
                /** @description The number of pallets to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListShipmentPallets 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListShipmentPalletsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    cancelSelfShipAppointment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `cancelSelfShipAppointment`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CancelSelfShipAppointmentRequest"];
            };
        };
        responses: {
            /** @description CancelSelfShipAppointment 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CancelSelfShipAppointmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getSelfShipAppointmentSlots: {
        parameters: {
            query?: {
                /** @description The number of self ship appointment slots to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetSelfShipAppointmentSlots 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GetSelfShipAppointmentSlotsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generateSelfShipAppointmentSlots: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `generateSelfShipAppointmentSlots`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateSelfShipAppointmentSlotsRequest"];
            };
        };
        responses: {
            /** @description GenerateSelfShipAppointmentSlots 201 response */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateSelfShipAppointmentSlotsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    scheduleSelfShipAppointment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
                /** @description An identifier to a self-ship appointment slot. */
                slotId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `scheduleSelfShipAppointment`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ScheduleSelfShipAppointmentRequest"];
            };
        };
        responses: {
            /** @description ScheduleSelfShipAppointment 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ScheduleSelfShipAppointmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    updateShipmentSourceAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `updateShipmentSourceAddress`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateShipmentSourceAddressRequest"];
            };
        };
        responses: {
            /** @description UpdateShipmentSourceAddress 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateShipmentSourceAddressResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    updateShipmentTrackingDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
                /** @description Identifier of a shipment. A shipment contains the boxes and units being inbounded. */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `updateShipmentTrackingDetails`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateShipmentTrackingDetailsRequest"];
            };
        };
        responses: {
            /** @description UpdateShipmentTrackingDetails 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateShipmentTrackingDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listTransportationOptions: {
        parameters: {
            query?: {
                /** @description The number of transportation options to return in the response matching the given query. */
                pageSize?: number;
                /** @description A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result. */
                paginationToken?: string;
                /** @description The placement option to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified. */
                placementOptionId?: string;
                /** @description The shipment to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified. */
                shipmentId?: string;
            };
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListTransportationOptions 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListTransportationOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    generateTransportationOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `generateTransportationOptions`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateTransportationOptionsRequest"];
            };
        };
        responses: {
            /** @description GenerateTransportationOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_GenerateTransportationOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    confirmTransportationOptions: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an inbound plan. */
                inboundPlanId: string;
            };
            cookie?: never;
        };
        /** @description The body of the request to `confirmTransportationOptions`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmTransportationOptionsRequest"];
            };
        };
        responses: {
            /** @description ConfirmTransportationOptions 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ConfirmTransportationOptionsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listItemComplianceDetails: {
        parameters: {
            query: {
                /** @description The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
                /** @description A list of merchant SKUs, a merchant-supplied identifier of a specific SKU. */
                mskus: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListItemComplianceDetails 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListItemComplianceDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    updateItemComplianceDetails: {
        parameters: {
            query: {
                /** @description The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The body of the request to `updateItemComplianceDetails`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateItemComplianceDetailsRequest"];
            };
        };
        responses: {
            /** @description UpdateItemComplianceDetails 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_UpdateItemComplianceDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    createMarketplaceItemLabels: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The body of the request to `createMarketplaceItemLabels`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CreateMarketplaceItemLabelsRequest"];
            };
        };
        responses: {
            /** @description CreateMarketplaceItemLabels 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_CreateMarketplaceItemLabelsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    listPrepDetails: {
        parameters: {
            query: {
                /** @description The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceId: string;
                /** @description A list of merchant SKUs, a merchant-supplied identifier of a specific SKU. */
                mskus: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description ListPrepDetails 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ListPrepDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    setPrepDetails: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The body of the request to `setPrepDetails`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_SetPrepDetailsRequest"];
            };
        };
        responses: {
            /** @description SetPrepDetails 202 response */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_SetPrepDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    getInboundOperationStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier of an asynchronous operation. */
                operationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description GetInboundOperationStatus 200 response */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_InboundOperationStatus"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["fulfillmentInbound_2024-03-20_ErrorList"];
                };
            };
        };
    };
    "listingsItems_2020-09-01_putListingsItem": {
        parameters: {
            query: {
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        /** @description The request body schema for the putListingsItem operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["listingsItems_2020-09-01_ListingsItemPutRequest"];
            };
        };
        responses: {
            /** @description Successfully understood the request to create or fully-update a listings item. See the response to determine if the submission has been accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
        };
    };
    "listingsItems_2020-09-01_deleteListingsItem": {
        parameters: {
            query: {
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully understood the listings item delete request. See the response to determine whether the submission has been accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
        };
    };
    "listingsItems_2020-09-01_patchListingsItem": {
        parameters: {
            query: {
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        /** @description The request body schema for the patchListingsItem operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["listingsItems_2020-09-01_ListingsItemPatchRequest"];
            };
        };
        responses: {
            /** @description Successfully understood the listings item patch request. See the response to determine if the submission was accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2020-09-01_ErrorList"];
                };
            };
        };
    };
    searchListingsItems: {
        parameters: {
            query: {
                /**
                 * @description A date-time that is used to filter listing items. The response includes listings items that were created at or after this time. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2024-03-01T01:30:00.000Z
                 */
                createdAfter?: string;
                /**
                 * @description A date-time that is used to filter listing items. The response includes listings items that were created at or before this time. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2024-03-31T21:45:00.000Z
                 */
                createdBefore?: string;
                /**
                 * @description A comma-delimited list of product identifiers that you can use to search for listings items.
                 *
                 *     **Note**:
                 *     1. This is required when you specify `identifiersType`.
                 *     2. You cannot use 'identifiers' if you specify `variationParentSku` or `packageHierarchySku`.
                 * @example GM-ZDPI-9B4E
                 */
                identifiers?: string[];
                /**
                 * @description A type of product identifiers that you can use to search for listings items.
                 *
                 *     **Note**:
                 *     This is required when `identifiers` is provided.
                 * @example SKU
                 */
                identifiersType?: "ASIN" | "EAN" | "FNSKU" | "GTIN" | "ISBN" | "JAN" | "MINSAN" | "SKU" | "UPC";
                /**
                 * @description A comma-delimited list of datasets that you want to include in the response. Default: `summaries`.
                 * @example summaries
                 */
                includedData?: ("summaries" | "attributes" | "issues" | "offers" | "fulfillmentAvailability" | "procurement" | "relationships" | "productTypes")[];
                /**
                 * @description A locale that is used to localize issues. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". When a localization is not available in the specified locale, localized messages default to "en_US".
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A date-time that is used to filter listing items. The response includes listings items that were last updated at or after this time. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2024-05-05T23:45:00.000Z
                 */
                lastUpdatedAfter?: string;
                /**
                 * @description A date-time that is used to filter listing items. The response includes listings items that were last updated at or before this time. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
                 * @example 2024-05-01T01:15:00.000Z
                 */
                lastUpdatedBefore?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description Filter results to include listing items that contain or are contained by the specified SKU.
                 *
                 *     **Note**: You cannot use `packageHierarchySku` if you include `identifiers` or `variationParentSku` in your request.
                 * @example GM-ZDPI-9B4E
                 */
                packageHierarchySku?: string;
                /**
                 * @description The number of results that you want to include on each page.
                 * @example 9
                 */
                pageSize?: number;
                /**
                 * @description A token that you can use to fetch a specific page when there are multiple pages of results.
                 * @example sdlkj234lkj234lksjdflkjwdflkjsfdlkj234234234234
                 */
                pageToken?: string;
                /**
                 * @description An attribute by which to sort the returned listing items.
                 * @example lastUpdatedDate
                 */
                sortBy?: "sku" | "createdDate" | "lastUpdatedDate";
                /**
                 * @description The order in which to sort the result items.
                 * @example DESC
                 */
                sortOrder?: "ASC" | "DESC";
                /**
                 * @description Filters results to include listing items that are variation children of the specified SKU.
                 *
                 *     **Note**: You cannot use `variationParentSku` if you include `identifiers` or `packageHierarchySku` in your request.
                 * @example GM-ZDPI-9B4E
                 */
                variationParentSku?: string;
                /**
                 * @description Filter results to include only listing items that have issues that match one or more of the specified severity levels.
                 * @example WARNING
                 */
                withIssueSeverity?: ("WARNING" | "ERROR")[];
                /**
                 * @description Filter results to include only listing items that don't contain the specified statuses.
                 * @example BUYABLE
                 */
                withoutStatus?: ("BUYABLE" | "DISCOVERABLE")[];
                /**
                 * @description Filter results to include only listing items that have the specified status.
                 * @example DISCOVERABLE
                 */
                withStatus?: ("BUYABLE" | "DISCOVERABLE")[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ItemSearchResults"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
        };
    };
    getListingsItem: {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of data sets to include in the response. Default: `summaries`.
                 * @example summaries
                 */
                includedData?: ("summaries" | "attributes" | "issues" | "offers" | "fulfillmentAvailability" | "procurement" | "relationships" | "productTypes")[];
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_Item"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
        };
    };
    putListingsItem: {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of data sets to include in the response. Default: `issues`.
                 * @example issues
                 */
                includedData?: ("identifiers" | "issues")[];
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description The mode of operation for the request.
                 * @example VALIDATION_PREVIEW
                 */
                mode?: "VALIDATION_PREVIEW";
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        /** @description The request body schema for the `putListingsItem` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["listingsItems_2021-08-01_ListingsItemPutRequest"];
            };
        };
        responses: {
            /** @description Successfully understood the request to create or fully-update a listings item. See the response to determine if the submission has been accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
        };
    };
    deleteListingsItem: {
        parameters: {
            query: {
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully understood the listings item delete request. See the response to determine whether the submission has been accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
        };
    };
    patchListingsItem: {
        parameters: {
            query: {
                /**
                 * @description A comma-delimited list of data sets to include in the response. Default: `issues`.
                 * @example issues
                 */
                includedData?: ("identifiers" | "issues")[];
                /**
                 * @description A locale for localization of issues. When not provided, the default language code of the first marketplace is used. Examples: `en_US`, `fr_CA`, `fr_FR`. Localized messages default to `en_US` when a localization is not available in the specified locale.
                 * @example en_US
                 */
                issueLocale?: string;
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description The mode of operation for the request.
                 * @example VALIDATION_PREVIEW
                 */
                mode?: "VALIDATION_PREVIEW";
            };
            header?: never;
            path: {
                /** @description A selling partner identifier, such as a merchant account or vendor code. */
                sellerId: string;
                /** @description A selling partner provided identifier for an Amazon listing. */
                sku: string;
            };
            cookie?: never;
        };
        /** @description The request body schema for the `patchListingsItem` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["listingsItems_2021-08-01_ListingsItemPatchRequest"];
            };
        };
        responses: {
            /** @description Successfully understood the listings item patch request. See the response to determine if the submission was accepted. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ListingsItemSubmissionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsItems_2021-08-01_ErrorList"];
                };
            };
        };
    };
    getListingsRestrictions: {
        parameters: {
            query: {
                /**
                 * @description The Amazon Standard Identification Number (ASIN) of the item.
                 * @example B0000ASIN1
                 */
                asin: string;
                /**
                 * @description The condition used to filter restrictions.
                 * @example used_very_good
                 */
                conditionType?: "new_new" | "new_open_box" | "new_oem" | "refurbished_refurbished" | "used_like_new" | "used_very_good" | "used_good" | "used_acceptable" | "collectible_like_new" | "collectible_very_good" | "collectible_good" | "collectible_acceptable" | "club_club";
                /**
                 * @description A comma-delimited list of Amazon marketplace identifiers for the request.
                 * @example ATVPDKIKX0DER
                 */
                marketplaceIds: string[];
                /**
                 * @description A locale for reason text localization. When not provided, the default language code of the first marketplace is used. Examples: "en_US", "fr_CA", "fr_FR". Localized messages default to "en_US" when a localization is not available in the specified locale.
                 * @example en_US
                 */
                reasonLocale?: string;
                /** @description A selling partner identifier, such as a merchant account. */
                sellerId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved the listings restrictions. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_RestrictionList"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["listingsRestrictions_2021-08-01_ErrorList"];
                };
            };
        };
    };
    getMessagingActionsForOrder: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This specifies the order for which you want a list of available message types. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns hypermedia links under the _links.actions key that specify which messaging actions are allowed for the order. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetMessagingActionsForOrderResponse"];
                };
            };
        };
    };
    GetAttributes: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Response has successfully been returned. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_GetAttributesResponse"];
                };
            };
        };
    };
    CreateAmazonMotors: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateAmazonMotorsRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateAmazonMotorsResponse"];
                };
            };
        };
    };
    confirmCustomizationDetails: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmCustomizationDetailsResponse"];
                };
            };
        };
    };
    createConfirmDeliveryDetails: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmDeliveryDetailsResponse"];
                };
            };
        };
    };
    createConfirmOrderDetails: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateConfirmOrderDetailsRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmOrderDetailsResponse"];
                };
            };
        };
    };
    createConfirmServiceDetails: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateConfirmServiceDetailsRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateConfirmServiceDetailsResponse"];
                };
            };
        };
    };
    createDigitalAccessKey: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateDigitalAccessKeyRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateDigitalAccessKeyResponse"];
                };
            };
        };
    };
    sendInvoice: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_InvoiceRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_InvoiceResponse"];
                };
            };
        };
    };
    createLegalDisclosure: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateLegalDisclosureRequest"];
            };
        };
        responses: {
            /** @description The legal disclosure message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateLegalDisclosureResponse"];
                };
            };
        };
    };
    createUnexpectedProblem: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateUnexpectedProblemRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateUnexpectedProblemResponse"];
                };
            };
        };
    };
    CreateWarranty: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This identifies the marketplace in which the order was placed. You can only specify one marketplace. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This identifies the order for which a message is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        /** @description This contains the message body for a message. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["messaging_CreateWarrantyRequest"];
            };
        };
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["messaging_CreateWarrantyResponse"];
                };
            };
        };
    };
    getAdditionalSellerInputs: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `GetAdditionalSellerInputs` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description The request's authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetAdditionalSellerInputsResponse"];
                };
            };
        };
    };
    getEligibleShipmentServices: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `GetEligibleShipmentServices` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description The request's authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetEligibleShipmentServicesResponse"];
                };
            };
        };
    };
    merchantFulfillmentV0_createShipment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request schema for the `CreateShipment` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description The request's authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CreateShipmentResponse"];
                };
            };
        };
    };
    merchantFulfillmentV0_getShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon-defined shipment identifier for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description The request's authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_GetShipmentResponse"];
                };
            };
        };
    };
    merchantFulfillmentV0_cancelShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon-defined shipment identifier for the shipment to cancel. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description The request's authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["merchantFulfillmentV0_CancelShipmentResponse"];
                };
            };
        };
    };
    getDestinations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationsResponse"];
                };
            };
        };
    };
    createDestination: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["notifications_CreateDestinationRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateDestinationResponse"];
                };
            };
        };
    };
    getDestination: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier generated when you created the destination. */
                destinationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetDestinationResponse"];
                };
            };
        };
    };
    deleteDestination: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the destination that you want to delete. */
                destinationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteDestinationResponse"];
                };
            };
        };
    };
    getSubscription: {
        parameters: {
            query?: {
                /** @description The version of the payload object to be used in the notification. */
                payloadVersion?: string;
            };
            header?: never;
            path: {
                /** @description The type of notification.
                 *
                 *      For more information about notification types, refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values). */
                notificationType: components["parameters"]["notifications_NotificationType"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
        };
    };
    createSubscription: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The type of notification.
                 *
                 *      For more information about notification types, refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values). */
                notificationType: components["parameters"]["notifications_NotificationType"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["notifications_CreateSubscriptionRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_CreateSubscriptionResponse"];
                };
            };
        };
    };
    getSubscriptionById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The type of notification.
                 *
                 *      For more information about notification types, refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values). */
                notificationType: components["parameters"]["notifications_NotificationType"];
                /** @description The identifier for the subscription that you want to get. */
                subscriptionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                    "Successful Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_GetSubscriptionByIdResponse"];
                };
            };
        };
    };
    deleteSubscriptionById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The type of notification.
                 *
                 *      For more information about notification types, refer to [Notification Type Values](https://developer-docs.amazon.com/sp-api/docs/notification-type-values). */
                notificationType: components["parameters"]["notifications_NotificationType"];
                /** @description The identifier for the subscription that you want to delete. */
                subscriptionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                    "Successful Operation Response": unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description The resource specified conflicts with the current state. */
            409: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["notifications_DeleteSubscriptionByIdResponse"];
                };
            };
        };
    };
    ordersV0_getOrders: {
        parameters: {
            query: {
                /** @description The `sourceId` of the location from where you want the order fulfilled. */
                ActualFulfillmentSupplySourceId?: string;
                /** @description A list of `AmazonOrderId` values. An `AmazonOrderId` is an Amazon-defined order identifier, in 3-7-7 format. */
                AmazonOrderIds?: string[];
                /** @description The email address of a buyer. Used to select orders that contain the specified email address. */
                BuyerEmail?: string;
                /** @description Use this date to select orders created after (or at) a specified time. Only orders placed after the specified time are returned. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
                 *
                 *     **Note**: Either the `CreatedAfter` parameter or the `LastUpdatedAfter` parameter is required. Both cannot be empty. `LastUpdatedAfter` and `LastUpdatedBefore` cannot be set when `CreatedAfter` is set. */
                CreatedAfter?: string;
                /** @description Use this date to select orders created before (or at) a specified time. Only orders placed before the specified time are returned. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
                 *
                 *     **Note**: `CreatedBefore` is optional when `CreatedAfter` is set. If specified, `CreatedBefore` must be equal to or after the `CreatedAfter` date and at least two minutes before current time. */
                CreatedBefore?: string;
                /** @description Use this date to select orders with a earliest delivery date after (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
                EarliestDeliveryDateAfter?: string;
                /** @description Use this date to select orders with a earliest delivery date before (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
                EarliestDeliveryDateBefore?: string;
                /** @description A list of `EasyShipShipmentStatus` values. Used to select Easy Ship orders with statuses that match the specified values. If `EasyShipShipmentStatus` is specified, only Amazon Easy Ship orders are returned.
                 *
                 *     **Possible values:**
                 *     - `PendingSchedule` (The package is awaiting the schedule for pick-up.)
                 *     - `PendingPickUp` (Amazon has not yet picked up the package from the seller.)
                 *     - `PendingDropOff` (The seller will deliver the package to the carrier.)
                 *     - `LabelCanceled` (The seller canceled the pickup.)
                 *     - `PickedUp` (Amazon has picked up the package from the seller.)
                 *     - `DroppedOff` (The package is delivered to the carrier by the seller.)
                 *     - `AtOriginFC` (The packaged is at the origin fulfillment center.)
                 *     - `AtDestinationFC` (The package is at the destination fulfillment center.)
                 *     - `Delivered` (The package has been delivered.)
                 *     - `RejectedByBuyer` (The package has been rejected by the buyer.)
                 *     - `Undeliverable` (The package cannot be delivered.)
                 *     - `ReturningToSeller` (The package was not delivered and is being returned to the seller.)
                 *     - `ReturnedToSeller` (The package was not delivered and was returned to the seller.)
                 *     - `Lost` (The package is lost.)
                 *     - `OutForDelivery` (The package is out for delivery.)
                 *     - `Damaged` (The package was damaged by the carrier.) */
                EasyShipShipmentStatuses?: string[];
                /** @description A list of `ElectronicInvoiceStatus` values. Used to select orders with electronic invoice statuses that match the specified values.
                 *
                 *     **Possible values:**
                 *     - `NotRequired` (Electronic invoice submission is not required for this order.)
                 *     - `NotFound` (The electronic invoice was not submitted for this order.)
                 *     - `Processing` (The electronic invoice is being processed for this order.)
                 *     - `Errored` (The last submitted electronic invoice was rejected for this order.)
                 *     - `Accepted` (The last submitted electronic invoice was submitted and accepted.) */
                ElectronicInvoiceStatuses?: string[];
                /** @description A list that indicates how an order was fulfilled. Filters the results by fulfillment channel.
                 *
                 *     **Possible values**: `AFN` (fulfilled by Amazon), `MFN` (fulfilled by seller). */
                FulfillmentChannels?: string[];
                /** @description When true, this order is marked to be picked up from a store rather than delivered. */
                IsISPU?: boolean;
                /** @description Use this date to select orders that were last updated after (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
                 *
                 *     **Note**: Either the `CreatedAfter` parameter or the `LastUpdatedAfter` parameter is required. Both cannot be empty. `CreatedAfter` or `CreatedBefore` cannot be set when `LastUpdatedAfter` is set. */
                LastUpdatedAfter?: string;
                /** @description Use this date to select orders that were last updated before (or at) a specified time. An update is defined as any change in order status, including the creation of a new order. Includes updates made by Amazon and by the seller. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format.
                 *
                 *     **Note**: `LastUpdatedBefore` is optional when `LastUpdatedAfter` is set. But if specified, `LastUpdatedBefore` must be equal to or after the `LastUpdatedAfter` date and at least two minutes before current time. */
                LastUpdatedBefore?: string;
                /** @description Use this date to select orders with a latest delivery date after (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
                LatestDeliveryDateAfter?: string;
                /** @description Use this date to select orders with a latest delivery date before (or at) a specified time. The date must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) format. */
                LatestDeliveryDateBefore?: string;
                /** @description A list of `MarketplaceId` values. Used to select orders that were placed in the specified marketplaces.
                 *
                 *     Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) for a complete list of `marketplaceId` values. */
                MarketplaceIds: string[];
                /** @description A number that indicates the maximum number of orders that can be returned per page. Value must be 1 - 100. Default 100. */
                MaxResultsPerPage?: number;
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
                /** @description A list of `OrderStatus` values used to filter the results.
                 *
                 *     **Possible values:**
                 *     - `PendingAvailability` (This status is available for pre-orders only. The order has been placed, payment has not been authorized, and the release date of the item is in the future.)
                 *     - `Pending` (The order has been placed but payment has not been authorized.)
                 *     - `Unshipped` (Payment has been authorized and the order is ready for shipment, but no items in the order have been shipped.)
                 *     - `PartiallyShipped` (One or more, but not all, items in the order have been shipped.)
                 *     - `Shipped` (All items in the order have been shipped.)
                 *     - `InvoiceUnconfirmed` (All items in the order have been shipped. The seller has not yet given confirmation to Amazon that the invoice has been shipped to the buyer.)
                 *     - `Canceled` (The order has been canceled.)
                 *     - `Unfulfillable` (The order cannot be fulfilled. This state applies only to Multi-Channel Fulfillment orders.) */
                OrderStatuses?: string[];
                /** @description A list of payment method values. Use this field to select orders that were paid with the specified payment methods.
                 *
                 *     **Possible values**: `COD` (cash on delivery), `CVS` (convenience store), `Other` (Any payment method other than COD or CVS). */
                PaymentMethods?: string[];
                /** @description An order identifier that is specified by the seller. Used to select only the orders that match the order identifier. If `SellerOrderId` is specified, then `FulfillmentChannels`, `OrderStatuses`, `PaymentMethod`, `LastUpdatedAfter`, LastUpdatedBefore, and `BuyerEmail` cannot be specified. */
                SellerOrderId?: string;
                /** @description The store chain store identifier. Linked to a specific store in a store chain. */
                StoreChainStoreId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrdersResponse"];
                };
            };
        };
    };
    ordersV0_getOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderResponse"];
                };
            };
        };
    };
    getOrderAddress: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon order identifier in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderAddressResponse"];
                };
            };
        };
    };
    getOrderBuyerInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon order identifier in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderBuyerInfoResponse"];
                };
            };
        };
    };
    getOrderItems: {
        parameters: {
            query?: {
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
            };
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsResponse"];
                };
            };
        };
    };
    getOrderItemsBuyerInfo: {
        parameters: {
            query?: {
                /** @description A string token returned in the response of your previous request. */
                NextToken?: string;
            };
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderItemsBuyerInfoResponse"];
                };
            };
        };
    };
    getOrderRegulatedInfo: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon order identifier in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                    ApprovedOrder: unknown;
                    PendingOrder: unknown;
                    RejectedOrder: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_GetOrderRegulatedInfoResponse"];
                };
            };
        };
    };
    updateVerificationStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon order identifier in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        /** @description The request body for the `updateVerificationStatus` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateVerificationStatusErrorResponse"];
                };
            };
        };
    };
    updateShipmentStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        /** @description The request body for the `updateShipmentStatus` operation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_UpdateShipmentStatusErrorResponse"];
                };
            };
        };
    };
    confirmShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon-defined order identifier, in 3-7-7 format. */
                orderId: string;
            };
            cookie?: never;
        };
        /** @description Request body of `confirmShipment`. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["ordersV0_ConfirmShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ordersV0_ConfirmShipmentErrorResponse"];
                };
            };
        };
    };
    getMyFeesEstimates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body schema for the getMyFeesEstimates operation */
        requestBody: {
            content: {
                "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include **Access Denied**, **Unauthorized**, **Expired Token**, or **Invalid Signature**. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimatesErrorList"];
                };
            };
        };
    };
    getMyFeesEstimateForASIN: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) of the item. */
                Asin: string;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["productFeesV0_GetMyFeesEstimateRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
        };
    };
    getMyFeesEstimateForSKU: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit. */
                SellerSKU: string;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["productFeesV0_GetMyFeesEstimateRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productFeesV0_GetMyFeesEstimateResponse"];
                };
            };
        };
    };
    getCompetitivePricing: {
        parameters: {
            query: {
                /** @description A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace. */
                Asins?: string[];
                /** @description Indicates whether to request pricing information from the point of view of Consumer or Business buyers. Default is Consumer. */
                CustomerType?: "Consumer" | "Business";
                /** @description Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter. Possible values: Asin, Sku. */
                ItemType: "Asin" | "Sku";
                /** @description A marketplace identifier. Specifies the marketplace for which prices are returned. */
                MarketplaceId: string;
                /** @description A list of up to twenty seller SKU values used to identify items in the given marketplace. */
                Skus?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
        };
    };
    getItemOffers: {
        parameters: {
            query: {
                /** @description Indicates whether to request Consumer or Business offers. Default is Consumer. */
                CustomerType?: "Consumer" | "Business";
                /** @description Filters the offer listings to be considered based on item condition. Possible values: New, Used, Collectible, Refurbished, Club. */
                ItemCondition: "New" | "Used" | "Collectible" | "Refurbished" | "Club";
                /** @description A marketplace identifier. Specifies the marketplace for which prices are returned. */
                MarketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The Amazon Standard Identification Number (ASIN) of the item. */
                Asin: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
        };
    };
    getListingOffers: {
        parameters: {
            query: {
                /** @description Indicates whether to request Consumer or Business offers. Default is Consumer. */
                CustomerType?: "Consumer" | "Business";
                /** @description Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club. */
                ItemCondition: "New" | "Used" | "Collectible" | "Refurbished" | "Club";
                /** @description A marketplace identifier. Specifies the marketplace for which prices are returned. */
                MarketplaceId: string;
            };
            header?: never;
            path: {
                /** @description Identifies an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit. */
                SellerSKU: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetOffersResponse"];
                };
            };
        };
    };
    getPricing: {
        parameters: {
            query: {
                /** @description A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace. */
                Asins?: string[];
                /** @description Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club. */
                ItemCondition?: "New" | "Used" | "Collectible" | "Refurbished" | "Club";
                /** @description Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter. */
                ItemType: "Asin" | "Sku";
                /** @description A marketplace identifier. Specifies the marketplace for which prices are returned. */
                MarketplaceId: string;
                /** @description Indicates whether to request pricing information for the seller's B2C or B2B offers. Default is B2C. */
                OfferType?: "B2C" | "B2B";
                /** @description A list of up to twenty seller SKU values used to identify items in the given marketplace. */
                Skus?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["productPricingV0_GetPricingResponse"];
                };
            };
        };
    };
    listOfferMetrics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `listOfferMetrics` operation. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["replenishment-2022-11-07_ListOfferMetricsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ListOfferMetricsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
        };
    };
    listOffers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `listOffers` operation. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["replenishment-2022-11-07_ListOffersRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ListOffersResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
        };
    };
    getSellingPartnerMetrics: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body for the `getSellingPartnerMetrics` operation. */
        requestBody?: {
            content: {
                "application/json": components["schemas"]["replenishment-2022-11-07_GetSellingPartnerMetricsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_GetSellingPartnerMetricsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["replenishment-2022-11-07_ErrorList"];
                };
            };
        };
    };
    getReportDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the report document. */
                reportDocumentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ReportDocument"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getReports: {
        parameters: {
            query?: {
                /** @description The earliest report creation date and time for reports to include in the response, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days. */
                createdSince?: string;
                /** @description The latest report creation date and time for reports to include in the response, in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> date time format. The default is now. */
                createdUntil?: string;
                /** @description A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify. */
                marketplaceIds?: string[];
                /** @description A string token returned in the response to your previous request. `nextToken` is returned when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the `getReports` operation and include this token as the only parameter. Specifying `nextToken` with any other parameters will cause the request to fail. */
                nextToken?: string;
                /** @description The maximum number of reports to return in a single call. */
                pageSize?: number;
                /** @description A list of processing statuses used to filter reports. */
                processingStatuses?: ("CANCELLED" | "DONE" | "FATAL" | "IN_PROGRESS" | "IN_QUEUE")[];
                /** @description A list of report types used to filter reports. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required. */
                reportTypes?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_GetReportsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    createReport: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Information required to create the report. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["reports_2021-06-30_CreateReportSpecification"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_CreateReportResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getReport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the report. This identifier is unique only in combination with a seller ID. */
                reportId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_Report"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    cancelReport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the report. This identifier is unique only in combination with a seller ID. */
                reportId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getReportSchedules: {
        parameters: {
            query: {
                /** @description A list of report types used to filter report schedules. Refer to [Report Type Values](https://developer-docs.amazon.com/sp-api/docs/report-type-values) for more information. */
                reportTypes: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ReportScheduleList"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    createReportSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Information required to create the report schedule. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["reports_2021-06-30_CreateReportScheduleSpecification"];
            };
        };
        responses: {
            /** @description Success. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_CreateReportScheduleResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getReportSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the report schedule. This identifier is unique only in combination with a seller ID. */
                reportScheduleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ReportSchedule"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    cancelReportSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The identifier for the report schedule. This identifier is unique only in combination with a seller ID. */
                reportScheduleId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["reports_2021-06-30_ErrorList"];
                };
            };
        };
    };
    getOrderMetrics: {
        parameters: {
            query: {
                /** @description Filters the results by the Amazon program that you specify. Do not include this filter if you want the response to include order metrics for all programs. **Example:** `AmazonHaul` returns order metrics for the Amazon Haul program only. */
                amazonProgram?: "AmazonHaul";
                /** @description Filters the results by the ASIN that you specify. Specifying both ASIN and SKU returns an error. Do not include this filter if you want the response to include order metrics for all ASINs. Example: B0792R1RSN, if you want the response to include order metrics for only ASIN B0792R1RSN. */
                asin?: string;
                /** @description Filters the results by the buyer type that you specify, B2B (business to business) or B2C (business to customer). Example: B2B, if you want the response to include order metrics for only B2B buyers. */
                buyerType?: "B2B" | "B2C" | "All";
                /** @description Specifies the day that the week starts on when granularity=Week, either Monday or Sunday. Default: Monday. Example: Sunday, if you want the week to start on a Sunday. */
                firstDayOfWeek?: "Monday" | "Sunday";
                /** @description Filters the results by the fulfillment network that you specify, MFN (merchant fulfillment network) or AFN (Amazon fulfillment network). Do not include this filter if you want the response to include order metrics for all fulfillment networks. Example: AFN, if you want the response to include order metrics for only Amazon fulfillment network. */
                fulfillmentNetwork?: string;
                /** @description The granularity of the grouping of order metrics, based on a unit of time. Specifying granularity=Hour results in a successful request only if the interval specified is less than or equal to 30 days from now. For all other granularities, the interval specified must be less or equal to 2 years from now. Specifying granularity=Total results in order metrics that are aggregated over the entire interval that you specify. If the interval start and end date don’t align with the specified granularity, the head and tail end of the response interval will contain partial data. Example: Day to get a daily breakdown of the request interval, where the day boundary is defined by the granularityTimeZone. */
                granularity: "Hour" | "Day" | "Week" | "Month" | "Year" | "Total";
                /** @description An IANA-compatible time zone for determining the day boundary. Required when specifying a granularity value greater than Hour. The granularityTimeZone value must align with the offset of the specified interval value. For example, if the interval value uses Z notation, then granularityTimeZone must be UTC. If the interval value uses an offset, then granularityTimeZone must be an IANA-compatible time zone that matches the offset. Example: US/Pacific to compute day boundaries, accounting for daylight time savings, for US/Pacific zone. */
                granularityTimeZone?: string;
                /** @description A time interval used for selecting order metrics. This takes the form of two dates separated by two hyphens (first date is inclusive; second date is exclusive). Dates are in ISO8601 format and must represent absolute time (either Z notation or offset notation). Example: 2018-09-01T00:00:00-07:00--2018-09-04T00:00:00-07:00 requests order metrics for Sept 1st, 2nd and 3rd in the -07:00 zone. */
                interval: string;
                /** @description A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.
                 *
                 *     For example, ATVPDKIKX0DER indicates the US marketplace. */
                marketplaceIds: string[];
                /** @description Filters the results by the SKU that you specify. Specifying both ASIN and SKU returns an error. Do not include this filter if you want the response to include order metrics for all SKUs. Example: TestSKU, if you want the response to include order metrics for only SKU TestSKU. */
                sku?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OrderMetric action taken on the resource OrderMetrics. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sales_GetOrderMetricsResponse"];
                };
            };
        };
    };
    getAccount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetAccountResponse"];
                };
            };
        };
    };
    getMarketplaceParticipations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Marketplace participations successfully retrieved. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["sellers_GetMarketplaceParticipationsResponse"];
                };
            };
        };
    };
    getAppointmentSlots: {
        parameters: {
            query: {
                /** @description ASIN associated with the service. */
                asin: string;
                /** @description A time up to which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `endTime` is provided, `startTime` should also be provided. Default value is as per business configuration. Maximum range of appointment slots can be 90 days. */
                endTime?: string;
                /** @description An identifier for the marketplace for which appointment slots are queried */
                marketplaceIds: string[];
                /** @description A time from which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `startTime` is provided, `endTime` should also be provided. Default value is as per business configuration. */
                startTime?: string;
                /** @description Store identifier defining the region scope to retrive appointment slots. */
                storeId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
        };
    };
    createServiceDocumentUploadDestination: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Upload document operation input details. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_ServiceUploadDocument"];
            };
        };
        responses: {
            /** @description Successfully created an upload destination for the given resource. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-requestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description The request's Content-Type header is invalid. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-requestid"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-requestid"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateServiceDocumentUploadDestination"];
                };
            };
        };
    };
    createReservation: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Reservation details */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_CreateReservationRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CreateReservationResponse"];
                };
            };
        };
    };
    updateReservation: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description Reservation Identifier */
                reservationId: string;
            };
            cookie?: never;
        };
        /** @description Reservation details */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_UpdateReservationRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description The reservation specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateReservationResponse"];
                };
            };
        };
    };
    cancelReservation: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description Reservation Identifier */
                reservationId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description The reservation specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelReservationResponse"];
                };
            };
        };
    };
    getServiceJobs: {
        parameters: {
            query: {
                /** @description List of Amazon Standard Identification Numbers (ASIN) of the items. Max values supported is 20. */
                asins?: string[];
                /** @description A date used for selecting jobs created at or after a specified time. Must be in ISO 8601 format. Required if `LastUpdatedAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error. */
                createdAfter?: string;
                /** @description A date used for selecting jobs created at or before a specified time. Must be in ISO 8601 format. */
                createdBefore?: string;
                /** @description A date used for selecting jobs updated at or after a specified time. Must be in ISO 8601 format. Required if `createdAfter` is not specified. Specifying both `CreatedAfter` and `LastUpdatedAfter` returns an error. */
                lastUpdatedAfter?: string;
                /** @description A date used for selecting jobs updated at or before a specified time. Must be in ISO 8601 format. */
                lastUpdatedBefore?: string;
                /** @description Used to select jobs that were placed in the specified marketplaces. */
                marketplaceIds: string[];
                /** @description A non-negative integer that indicates the maximum number of jobs to return in the list, Value must be 1 - 20. Default 20. */
                pageSize?: number;
                /** @description String returned in the response of your previous request. */
                pageToken?: string;
                /** @description A defined set of related knowledge, skills, experience, tools, materials, and work processes common to service delivery for a set of products and/or service scenarios. Max values supported is 20. */
                requiredSkills?: string[];
                /** @description A date used for filtering jobs schedules at or before a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date. */
                scheduleEndDate?: string;
                /** @description A date used for filtering jobs schedules at or after a specified time. Must be in ISO 8601 format. Schedule end date should not be earlier than schedule start date. */
                scheduleStartDate?: string;
                /** @description A list of one or more job status by which to filter the list of jobs. */
                serviceJobStatus?: ("NOT_SERVICED" | "CANCELLED" | "COMPLETED" | "PENDING_SCHEDULE" | "NOT_FULFILLABLE" | "HOLD" | "PAYMENT_DECLINED")[];
                /** @description List of service order ids for the query you want to perform.Max values supported 20. */
                serviceOrderIds?: string[];
                /** @description Sort fields on which you want to sort the output. */
                sortField?: "JOB_DATE" | "JOB_STATUS";
                /** @description Sort order for the query you want to perform. */
                sortOrder?: "ASC" | "DESC";
                /** @description List of Amazon-defined identifiers for the region scope. Max values supported is 50. */
                storeIds?: string[];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobsResponse"];
                };
            };
        };
    };
    getServiceJobByServiceJobId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A service job identifier. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetServiceJobByServiceJobIdResponse"];
                };
            };
        };
    };
    addAppointmentForServiceJobByServiceJobId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon defined service job identifier. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        /** @description Add appointment operation input details. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_AddAppointmentRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
        };
    };
    rescheduleAppointmentForServiceJobByServiceJobId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An existing appointment identifier for the Service Job. */
                appointmentId: string;
                /** @description An Amazon defined service job identifier. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        /** @description Reschedule appointment operation input details. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_RescheduleAppointmentRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_SetAppointmentResponse"];
                };
            };
        };
    };
    setAppointmentFulfillmentData: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon-defined identifier of active service job appointment. */
                appointmentId: string;
                /** @description An Amazon-defined service job identifier. Get this value by calling the `getServiceJobs` operation of the Services API. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        /** @description Appointment fulfillment data collection details. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_SetAppointmentFulfillmentDataRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description The entity of the request is in a format not supported by the requested resource. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_ErrorList"];
                };
            };
        };
    };
    assignAppointmentResources: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon-defined identifier of active service job appointment. */
                appointmentId: string;
                /** @description An Amazon-defined service job identifier. Get this value by calling the `getServiceJobs` operation of the Services API. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_AssignAppointmentResourcesRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_AssignAppointmentResourcesResponse"];
                };
            };
        };
    };
    getAppointmmentSlotsByJobId: {
        parameters: {
            query: {
                /** @description A time up to which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `endTime` is provided, `startTime` should also be provided. Default value is as per business configuration. Maximum range of appointment slots can be 90 days. */
                endTime?: string;
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
                /** @description A time from which the appointment slots will be retrieved. The specified time must be in ISO 8601 format. If `startTime` is provided, `endTime` should also be provided. Default value is as per business configuration. */
                startTime?: string;
            };
            header?: never;
            path: {
                /** @description A service job identifier to retrive appointment slots for associated service. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_GetAppointmentSlotsResponse"];
                };
            };
        };
    };
    cancelServiceJobByServiceJobId: {
        parameters: {
            query: {
                /** @description A cancel reason code that specifies the reason for cancelling a service job. */
                cancellationReasonCode: string;
            };
            header?: never;
            path: {
                /** @description An Amazon defined service job identifier. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CancelServiceJobByServiceJobIdResponse"];
                };
            };
        };
    };
    completeServiceJobByServiceJobId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description An Amazon defined service job identifier. */
                serviceJobId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Unprocessable Entity. Unable to process the contained instructions. */
            422: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_CompleteServiceJobByServiceJobIdResponse"];
                };
            };
        };
    };
    getFixedSlotCapacity: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
                /** @description Next page token returned in the response of your previous request. */
                nextPageToken?: string;
            };
            header?: never;
            path: {
                /** @description Resource Identifier. */
                resourceId: string;
            };
            cookie?: never;
        };
        /** @description Request body. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_FixedSlotCapacityQuery"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacity"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_FixedSlotCapacityErrors"];
                };
            };
        };
    };
    getRangeSlotCapacity: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
                /** @description Next page token returned in the response of your previous request. */
                nextPageToken?: string;
            };
            header?: never;
            path: {
                /** @description Resource Identifier. */
                resourceId: string;
            };
            cookie?: never;
        };
        /** @description Request body. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_RangeSlotCapacityQuery"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacity"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_RangeSlotCapacityErrors"];
                };
            };
        };
    };
    updateSchedule: {
        parameters: {
            query: {
                /** @description An identifier for the marketplace in which the resource operates. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description Resource (store) Identifier */
                resourceId: string;
            };
            cookie?: never;
        };
        /** @description Schedule details */
        requestBody: {
            content: {
                "application/json": components["schemas"]["services_UpdateScheduleRequest"];
            };
        };
        responses: {
            /** @description Success response. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     **Note:** For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["services_UpdateScheduleResponse"];
                };
            };
        };
    };
    shipping_getAccount: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The account was valid. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetAccountResponse"];
                };
            };
        };
    };
    purchaseShipment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description PurchaseShipmentRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipping_PurchaseShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseShipmentResponse"];
                };
            };
        };
    };
    getRates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description GetRatesRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipping_GetRatesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description Request is missing or has invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetRatesResponse"];
                };
            };
        };
    };
    createShipment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description CreateShipmentRequest Body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipping_CreateShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CreateShipmentResponse"];
                };
            };
        };
    };
    shipping_getShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Shipment id to return the entire shipment object */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetShipmentResponse"];
                };
            };
        };
    };
    cancelShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Shipment Id to cancel a shipment */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_CancelShipmentResponse"];
                };
            };
        };
    };
    retrieveShippingLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Shipment Id to retreive label */
                shipmentId: string;
                /** @description Tracking Id */
                trackingId: string;
            };
            cookie?: never;
        };
        /** @description RetrieveShippingLabelRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipping_RetrieveShippingLabelRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_RetrieveShippingLabelResponse"];
                };
            };
        };
    };
    purchaseLabels: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Shipment id for purchase shipping label */
                shipmentId: string;
            };
            cookie?: never;
        };
        /** @description PurchaseShippingLabelRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shipping_PurchaseLabelsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_PurchaseLabelsResponse"];
                };
            };
        };
    };
    getTrackingInformation: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Tracking Id */
                trackingId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description 403 can be caused for reasons like Access Denied, Unauthorized, Expired Token, Invalid Signature or Resource Not Found. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shipping_GetTrackingInformationResponse"];
                };
            };
        };
    };
    getAccessPoints: {
        parameters: {
            query: {
                /**
                 * @description Access point types
                 * @example HELIX
                 */
                accessPointTypes: ("HELIX" | "CAMPUS_LOCKER" | "OMNI_LOCKER" | "ODIN_LOCKER" | "DOBBY_LOCKER" | "CORE_LOCKER" | "3P" | "CAMPUS_ROOM")[];
                /**
                 * @description Country code for access point
                 * @example US
                 */
                countryCode: string;
                /**
                 * @description postal code for access point
                 * @example EX332JL
                 */
                postalCode: string;
            };
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetAccessPointsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getCarrierAccountFormInputs: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetCarrierAccountFormInputsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getCarrierAccounts: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description GetCarrierAccountsRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_GetCarrierAccountsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetCarrierAccountsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    linkCarrierAccount: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description An identifier for the carrier with which the seller's account is being linked. */
                carrierId: string;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["shippingV2_LinkCarrierAccountRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_LinkCarrierAccountResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    shippingV2_linkCarrierAccount: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description An identifier for the carrier with which the seller's account is being linked. */
                carrierId: string;
            };
            cookie?: never;
        };
        requestBody: components["requestBodies"]["shippingV2_LinkCarrierAccountRequest"];
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_LinkCarrierAccountResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    unlinkCarrierAccount: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description carrier Id to unlink with merchant. */
                carrierId: string;
            };
            cookie?: never;
        };
        /** @description UnlinkCarrierAccountRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_UnlinkCarrierAccountRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_UnlinkCarrierAccountResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    createClaim: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description Request body for the createClaim operation */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_CreateClaimRequest"];
            };
        };
        responses: {
            /** @description Success */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_CreateClaimResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    generateCollectionForm: {
        parameters: {
            query?: never;
            header?: {
                /** @description A unique value which the server uses to recognize subsequent retries of the same request. */
                "x-amzn-IdempotencyKey"?: string;
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description GenerateCollectionFormRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_GenerateCollectionFormRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GenerateCollectionFormResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getCollectionForm: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description collection form Id to reprint a collection. */
                collectionFormId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetCollectionFormResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getCollectionFormHistory: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description GetCollectionFormHistoryRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_GetCollectionFormHistoryRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetCollectionFormHistoryResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    submitNdrFeedback: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description Request body for ndrFeedback operation */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_SubmitNdrFeedbackRequest"];
            };
        };
        responses: {
            /** @description Success */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    oneClickShipment: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description OneClickShipmentRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_OneClickShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_OneClickShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    shippingV2_purchaseShipment: {
        parameters: {
            query?: never;
            header?: {
                /** @description A unique value which the server uses to recognize subsequent retries of the same request. */
                "x-amzn-IdempotencyKey"?: string;
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description PurchaseShipmentRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_PurchaseShipmentRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_PurchaseShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    shippingV2_cancelShipment: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description The shipment identifier originally returned by the purchaseShipment operation. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_CancelShipmentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getShipmentDocuments: {
        parameters: {
            query: {
                /** @description The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation. */
                dpi?: number;
                /** @description The file format of the document. Must be one of the supported formats returned by the getRates operation. */
                format?: string;
                /** @description The package client reference identifier originally provided in the request body parameter for the getRates operation. */
                packageClientReferenceId: string;
            };
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path: {
                /** @description The shipment identifier originally returned by the purchaseShipment operation. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetShipmentDocumentsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getAdditionalInputs: {
        parameters: {
            query: {
                /** @description The rate identifier for the shipping offering (rate) returned in the response to the getRates operation. */
                rateId: string;
                /** @description The request token returned in the response to the getRates operation. */
                requestToken: string;
            };
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetAdditionalInputsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    directPurchaseShipment: {
        parameters: {
            query?: never;
            header?: {
                /** @description The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA).
                 *     The secondary language subtag is almost always a regional designation.
                 *     This does not support additional subtags beyond the primary and secondary language subtags.
                 *      */
                locale?: string;
                /** @description A unique value which the server uses to recognize subsequent retries of the same request. */
                "x-amzn-IdempotencyKey"?: string;
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description DirectPurchaseRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_DirectPurchaseRequest"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description A unique value which the server uses to recognize subsequent retries of the same request. */
                    "x-amzn-IdempotencyKey"?: string;
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_DirectPurchaseResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    shippingV2_getRates: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description GetRatesRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_GetRatesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetRatesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getTracking: {
        parameters: {
            query: {
                /** @description A carrier identifier originally returned by the getRates operation for the selected rate. */
                carrierId: string;
                /** @description A carrier-generated tracking identifier originally returned by the purchaseShipment operation. */
                trackingId: string;
            };
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetTrackingResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getUnmanifestedShipments: {
        parameters: {
            query?: never;
            header?: {
                /** @description Amazon shipping business to assume for this request. The default is AmazonShipping_UK. */
                "x-amzn-shipping-business-id"?: "AmazonShipping_US" | "AmazonShipping_IN" | "AmazonShipping_UK" | "AmazonShipping_UAE" | "AmazonShipping_SA" | "AmazonShipping_EG" | "AmazonShipping_IT" | "AmazonShipping_ES" | "AmazonShipping_FR" | "AmazonShipping_JP";
            };
            path?: never;
            cookie?: never;
        };
        /** @description GetUmanifestedShipmentsRequest body */
        requestBody: {
            content: {
                "application/json": components["schemas"]["shippingV2_GetUnmanifestedShipmentsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_GetUnmanifestedShipmentsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["shippingV2_ErrorList"];
                };
            };
        };
    };
    getSolicitationActionsForOrder: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This specifies the order for which you want a list of available solicitation types. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Returns hypermedia links under the _links.actions key that specify which solicitation actions are allowed for the order. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_GetSolicitationActionsForOrderResponse"];
                };
            };
        };
    };
    createProductReviewAndSellerFeedbackSolicitation: {
        parameters: {
            query: {
                /** @description A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified. */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description An Amazon order identifier. This specifies the order for which a solicitation is sent. */
                amazonOrderId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The message was created for the order. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/hal+json": components["schemas"]["solicitations_CreateProductReviewAndSellerFeedbackSolicitationResponse"];
                };
            };
        };
    };
    getSupplySources: {
        parameters: {
            query?: {
                /** @description The pagination token to retrieve a specific page of results. */
                nextPageToken?: string;
                /** @description The number of supply sources to return per paginated request. */
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_GetSupplySourcesResponse"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    createSupplySource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description A request to create a supply source. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["supplySources_2020-07-01_CreateSupplySourceRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_CreateSupplySourceResponse"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    getSupplySource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier of a supply source. */
                supplySourceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_SupplySource"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    updateSupplySource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identitier of a supply source. */
                supplySourceId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["supplySources_2020-07-01_UpdateSupplySourceRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An error that indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    archiveSupplySource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier of a supply source. */
                supplySourceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    updateSupplySourceStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier of a supply source. */
                supplySourceId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["supplySources_2020-07-01_UpdateSupplySourceStatusRequest"];
            };
        };
        responses: {
            /** @description Success. */
            204: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
            /** @description The temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["supplySources_2020-07-01_ErrorList"];
                };
            };
        };
    };
    getInvoicesAttributes: {
        parameters: {
            query: {
                /** @description The marketplace identifier. */
                marketplaceId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoicesAttributesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getInvoicesDocument: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The export document identifier. */
                invoicesDocumentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoicesDocumentResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getInvoicesExports: {
        parameters: {
            query: {
                /** @description The latest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default value is the time of the request. */
                dateEnd?: string;
                /** @description The earliest export creation date and time for exports that you want to include in the response. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 30 days ago. */
                dateStart?: string;
                /** @description The returned exports match the specified marketplace. */
                marketplaceId: string;
                /** @description The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages. */
                nextToken?: string;
                /** @description The maximum number of invoices to return in a single call.
                 *
                 *     Minimum: 1
                 *
                 *     Maximum: 100 */
                pageSize?: number;
                /** @description Return exports matching the status specified.  */
                status?: "REQUESTED" | "PROCESSING" | "DONE" | "ERROR";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoicesExportsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    createInvoicesExport: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Information required to create the export request. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ExportInvoicesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ExportInvoicesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getInvoicesExport: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier for the export. */
                exportId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoicesExportResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getInvoices: {
        parameters: {
            query: {
                /** @description The latest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is the current date-time. */
                dateEnd?: string;
                /** @description The earliest invoice creation date for invoices that you want to include in the response. Dates are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. The default is 24 hours prior to the time of the request. */
                dateStart?: string;
                /** @description Return invoices that match this external ID. This is typically the Government Invoice ID. */
                externalInvoiceId?: string;
                /** @description The marketplace-specific classification of the invoice type. Use the `getInvoicesAttributes` operation to check `invoiceType` options. */
                invoiceType?: string;
                /** @description The response includes only the invoices that match the specified marketplace. */
                marketplaceId: string;
                /** @description The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages. */
                nextToken?: string;
                /** @description The maximum number of invoices you want to return in a single call.
                 *
                 *     Minimum: 1
                 *
                 *     Maximum: 200 */
                pageSize?: number;
                /** @description Return invoices with the specified series number. */
                series?: string;
                /** @description The attribute by which you want to sort the invoices in the response. */
                sortBy?: "START_DATE_TIME";
                /** @description Sort the invoices in the response in ascending or descending order. */
                sortOrder?: "DESC" | "ASC";
                /** @description A list of statuses that you can use to filter invoices. Use the `getInvoicesAttributes` operation to check invoice status options.
                 *
                 *     Min count: 1 */
                statuses?: string[];
                /** @description The ID of the transaction identifier filter. If you provide a value for this field, you must also provide a value for the `transactionIdentifierName` field. */
                transactionIdentifierId?: string;
                /** @description The name of the transaction identifier filter. If you provide a value for this field, you must also provide a value for the `transactionIdentifierId` field.Use the `getInvoicesAttributes` operation to check `transactionIdentifierName` options. */
                transactionIdentifierName?: string;
                /** @description The marketplace-specific classification of the transaction type for which the invoice was created. Use the `getInvoicesAttributes` operation to check `transactionType` options. */
                transactionType?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoicesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    getInvoice: {
        parameters: {
            query: {
                /** @description The marketplace from which you want the invoice. */
                marketplaceId: string;
            };
            header?: never;
            path: {
                /** @description The invoice identifier. */
                invoiceId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_GetInvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description A list of error responses returned when a request is unsuccessful. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InvoicesApiModel_2024-06-19_ErrorList"];
                };
            };
        };
    };
    createRestrictedDataToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The restricted data token request details. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["tokens_2021-03-01_CreateRestrictedDataTokenRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_CreateRestrictedDataTokenResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description The specified resource does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["tokens_2021-03-01_ErrorList"];
                };
            };
        };
    };
    createUploadDestinationForResource: {
        parameters: {
            query: {
                /** @description An MD5 hash of the content to be submitted to the upload destination. This value is used to determine if the data has been corrupted or tampered with during transit. */
                contentMD5: string;
                /** @description The content type of the file you upload. */
                contentType?: string;
                /** @description The marketplace ID is the globally unique identifier of a marketplace. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids). */
                marketplaceIds: string[];
            };
            header?: never;
            path: {
                /** @description The upload destination for your resource. For example, if you create an upload destination for the `createLegalDisclosure` operation of the Messaging API, the `{resource}` would be `/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure`, and the entire path would be `/uploads/2020-11-01/uploadDestinations/messaging/v1/orders/{amazonOrderId}/messages/legalDisclosure`. If you create an upload destination for an Aplus content document, the `{resource}` would be `aplus/2020-11-01/contentDocuments` and the path would be `/uploads/2020-11-01/uploadDestinations/aplus/2020-11-01/contentDocuments`. */
                resource: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            201: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation.
                     *     _Note:_ For this status code, the rate limit header is deprecated and no longer returned. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["uploads_2020-11-01_CreateUploadDestinationResponse"];
                };
            };
        };
    };
    submitInventoryUpdate: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Identifier for the warehouse for which to update inventory. */
                warehouseId: string;
            };
            cookie?: never;
        };
        /** @description The request body containing the inventory update data to submit. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentInventoryV1_SubmitInventoryUpdateResponse"];
                };
            };
        };
    };
    submitAcknowledgement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body containing the acknowledgement to an order */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_SubmitAcknowledgementRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_TransactionId"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getOrders: {
        parameters: {
            query: {
                /** @description Purchase orders that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter: string;
                /** @description Purchase orders that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore: string;
                /** @description When true, returns the complete purchase order details. Otherwise, only purchase order numbers are returned. */
                includeDetails?: string;
                /** @description The limit to the number of purchase orders returned. */
                limit?: number;
                /** @description Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouse identifier for the fulfillment warehouse. If not specified, the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort the list in ascending or descending order by order creation date. */
                sortOrder?: "ASC" | "DESC";
                /** @description Returns only the purchase orders that match the specified status. If not specified, the result will contain orders that match any status. */
                status?: "NEW" | "SHIPPED" | "ACCEPTED" | "CANCELLED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_OrderList"];
                    orders: unknown;
                    pagination: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The order identifier for the purchase order that you want. Formatting Notes: alpha-numeric code. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_Order"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrders_2021-12-28_ErrorList"];
                };
            };
        };
    };
    vendorDirectFulfillmentOrdersV1_submitAcknowledgement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body containing the acknowledgement to an order. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_SubmitAcknowledgementResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentOrdersV1_getOrders: {
        parameters: {
            query: {
                /** @description Purchase orders that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter: string;
                /** @description Purchase orders that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore: string;
                /** @description When true, returns the complete purchase order details. Otherwise, only purchase order numbers are returned. */
                includeDetails?: string;
                /** @description The limit to the number of purchase orders returned. */
                limit?: number;
                /** @description Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouse identifier for the fulfillment warehouse. If not specified, the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort the list in ascending or descending order by order creation date. */
                sortOrder?: "ASC" | "DESC";
                /** @description Returns only the purchase orders that match the specified status. If not specified, the result will contain orders that match any status. */
                status?: "NEW" | "SHIPPED" | "ACCEPTED" | "CANCELLED";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrdersResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentOrdersV1_getOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The order identifier for the purchase order that you want. Formatting Notes: alpha-numeric code. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentOrdersV1_GetOrderResponse"];
                };
            };
        };
    };
    submitInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body containing one or more invoices for vendor orders. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentPaymentsV1_SubmitInvoiceResponse"];
                };
            };
        };
    };
    generateOrderScenarios: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request payload containing parameters for generating test order data scenarios. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_GenerateOrderScenarioRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_TransactionReference"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
        };
    };
    getOrderScenarios: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The transaction identifier returned in the response to the generateOrderScenarios operation. */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_TransactionStatus"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentSandboxData_2021-10-28_ErrorList"];
                };
            };
        };
    };
    createContainerLabel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing the container label data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CreateContainerLabelRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CreateContainerLabelResponse"];
                    containerLabel: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getCustomerInvoices: {
        parameters: {
            query: {
                /** @description Orders that became available after this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdAfter: string;
                /** @description Orders that became available before this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdBefore: string;
                /** @description The limit to the number of records returned */
                limit?: number;
                /** @description Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort ASC or DESC by order creation date. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CustomerInvoiceList"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getCustomerInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Purchase order number of the shipment for which to return the invoice. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CustomerInvoice"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getPackingSlips: {
        parameters: {
            query: {
                /** @description Packing slips that become available after this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdAfter: string;
                /** @description Packing slips that became available before this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdBefore: string;
                /** @description The maximum number of records to return. */
                limit?: number;
                /** @description Used for pagination when there are more packing slips than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor `warehouseId` for order fulfillment. If not specified, the result contains orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description The packing slip creation dates, which are sorted by ascending or descending order. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PackingSlipList"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getPackingSlip: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The `purchaseOrderNumber` for the packing slip that you want. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_PackingSlip"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    submitShipmentConfirmations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing the shipment confirmations data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_SubmitShipmentConfirmationsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_TransactionReference"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    submitShipmentStatusUpdates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing the shipment status update data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_SubmitShipmentStatusUpdatesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_TransactionReference"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getShippingLabels: {
        parameters: {
            query: {
                /** @description Shipping labels that became available after this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdAfter: string;
                /** @description Shipping labels that became available before this date and time will be included in the result. Values are in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format. */
                createdBefore: string;
                /** @description The limit to the number of records returned. */
                limit?: number;
                /** @description Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor `warehouseId` for order fulfillment. If not specified, the result contains orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description The sort order creation date. You can choose between ascending (`ASC`) or descending (`DESC`) sort order. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShippingLabelList"];
                    pagination: unknown;
                    shippingLabels: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    submitShippingLabelRequest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body that contains the shipping labels data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_SubmitShippingLabelsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_TransactionReference"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    getShippingLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The purchase order number for which you want to return the shipping label. It should be the same `purchaseOrderNumber` that you received in the order. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShippingLabel"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    createShippingLabels: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The purchase order number for which you want to return the shipping labels. It should be the same number as the `purchaseOrderNumber` in the order. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        /** @description The request payload that contains the parameters for creating shipping labels. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_CreateShippingLabelsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ShippingLabel"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request conflicts with the current state of the resource (shipment). */
            409: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShipping_2021-12-28_ErrorList"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getCustomerInvoices: {
        parameters: {
            query: {
                /** @description Orders that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter: string;
                /** @description Orders that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore: string;
                /** @description The limit to the number of records returned */
                limit?: number;
                /** @description Used for pagination when there are more orders than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort ASC or DESC by order creation date. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoicesResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getCustomerInvoice: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Purchase order number of the shipment for which to return the invoice. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetCustomerInvoiceResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getPackingSlips: {
        parameters: {
            query: {
                /** @description Packing slips that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter: string;
                /** @description Packing slips that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore: string;
                /** @description The limit to the number of records returned */
                limit?: number;
                /** @description Used for pagination when there are more packing slips than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouseId for order fulfillment. If not specified the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort ASC or DESC by packing slip creation date. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipListResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getPackingSlip: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The purchaseOrderNumber for the packing slip you want. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetPackingSlipResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_submitShipmentConfirmations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing the shipment confirmations data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentConfirmationsResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_submitShipmentStatusUpdates: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing the shipment status update data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShipmentStatusUpdatesResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getShippingLabels: {
        parameters: {
            query: {
                /** @description Shipping labels that became available after this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter: string;
                /** @description Shipping labels that became available before this date and time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore: string;
                /** @description The limit to the number of records returned. */
                limit?: number;
                /** @description Used for pagination when there are more ship labels than the specified result size limit. The token value is returned in the previous API call. */
                nextToken?: string;
                /** @description The vendor warehouseId for order fulfillment. If not specified, the result will contain orders for all warehouses. */
                shipFromPartyId?: string;
                /** @description Sort ASC or DESC by order creation date. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelListResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_submitShippingLabelRequest: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Request body containing one or more shipping labels data. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_SubmitShippingLabelsResponse"];
                };
            };
        };
    };
    vendorDirectFulfillmentShippingV1_getShippingLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The purchase order number for which you want to return the shipping label. It should be the same purchaseOrderNumber as received in the order. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description Encountered an unexpected condition which prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentShippingV1_GetShippingLabelResponse"];
                };
            };
        };
    };
    getTransactionStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Previously returned in the response to the POST request of a specific transaction. */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_TransactionStatus"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_ErrorList"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactions_2021-12-28_Error"];
                };
            };
        };
    };
    vendorDirectFulfillmentTransactionsV1_getTransactionStatus: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description Previously returned in the response to the POST request of a specific transaction. */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorDirectFulfillmentTransactionsV1_GetTransactionResponse"];
                };
            };
        };
    };
    vendorOrders_submitAcknowledgement: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Submits acknowledgements for one or more purchase orders from a vendor. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_SubmitAcknowledgementResponse"];
                };
            };
        };
    };
    getPurchaseOrders: {
        parameters: {
            query?: {
                /** @description Purchase orders that changed after this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                changedAfter?: string;
                /** @description Purchase orders that changed before this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                changedBefore?: string;
                /** @description Purchase orders that became available after this time will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter?: string;
                /** @description Purchase orders that became available before this time will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore?: string;
                /** @description When true, returns purchase orders with complete details. Otherwise, only purchase order numbers are returned. Default value is true. */
                includeDetails?: string;
                /** @description When true, returns purchase orders which were modified after the order was placed. Vendors are required to pull the changed purchase order and fulfill the updated purchase order and not the original one. Default value is false. */
                isPOChanged?: string;
                /** @description The limit to the number of records returned. Default value is 100 records. */
                limit?: number;
                /** @description Used for pagination when there is more purchase orders than the specified result size limit. The token value is returned in the previous API call */
                nextToken?: string;
                /** @description Filters purchase orders based on the specified ordering vendor code. This value should be same as 'sellingParty.partyId' in the purchase order. If not included in the filter, all purchase orders for all of the vendor codes that exist in the vendor group used to authorize the API client application are returned. */
                orderingVendorCode?: string;
                /** @description Current state of the purchase order item. If this value is Cancelled, this API will return purchase orders which have one or more items cancelled by Amazon with updated item quantity as zero. */
                poItemState?: "Cancelled";
                /** @description Filters purchase orders based on the purchase order state. */
                purchaseOrderState?: "New" | "Acknowledged" | "Closed";
                /** @description Sort in ascending or descending order by purchase order creation date. */
                sortOrder?: "ASC" | "DESC";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                    payload: unknown;
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersResponse"];
                };
            };
        };
    };
    getPurchaseOrder: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The purchase order identifier for the order that you want. Formatting Notes: 8-character alpha-numeric code. */
                purchaseOrderNumber: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrderResponse"];
                };
            };
        };
    };
    getPurchaseOrdersStatus: {
        parameters: {
            query?: {
                /** @description Purchase orders that became available after this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                createdAfter?: string;
                /** @description Purchase orders that became available before this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                createdBefore?: string;
                /** @description Filters purchase orders based on their item confirmation status. If the item confirmation status is not included in the filter, purchase orders for all confirmation statuses are included. */
                itemConfirmationStatus?: "ACCEPTED" | "PARTIALLY_ACCEPTED" | "REJECTED" | "UNCONFIRMED";
                /** @description Filters purchase orders based on the purchase order's item receive status. If the item receive status is not included in the filter, purchase orders for all receive statuses are included. */
                itemReceiveStatus?: "NOT_RECEIVED" | "PARTIALLY_RECEIVED" | "RECEIVED";
                /** @description The limit to the number of records returned. Default value is 100 records. */
                limit?: number;
                /** @description Used for pagination when there are more purchase orders than the specified result size limit. */
                nextToken?: string;
                /** @description Filters purchase orders based on the specified ordering vendor code. This value should be same as 'sellingParty.partyId' in the purchase order. If not included in filter, all purchase orders for all the vendor codes that exist in the vendor group used to authorize API client application are returned. */
                orderingVendorCode?: string;
                /** @description Provides purchase order status for the specified purchase order number. */
                purchaseOrderNumber?: string;
                /** @description Filters purchase orders based on the specified purchase order status. If not included in filter, this will return purchase orders for all statuses. */
                purchaseOrderStatus?: "OPEN" | "CLOSED";
                /** @description Filters purchase orders for a specific buyer's Fulfillment Center/warehouse by providing ship to location id here. This value should be same as 'shipToParty.partyId' in the purchase order. If not included in filter, this will return purchase orders for all the buyer's warehouses used for vendor group purchase orders. */
                shipToPartyId?: string;
                /** @description Sort in ascending or descending order by purchase order creation date. */
                sortOrder?: "ASC" | "DESC";
                /** @description Purchase orders for which the last purchase order update happened after this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                updatedAfter?: string;
                /** @description Purchase orders for which the last purchase order update happened before this timestamp will be included in the result. Must be in ISO-8601 date/time format. */
                updatedBefore?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorOrders_GetPurchaseOrdersStatusResponse"];
                };
            };
        };
    };
    submitInvoices: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description The request body containing the invoice data to submit. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorInvoices_SubmitInvoicesResponse"];
                };
            };
        };
    };
    SubmitShipmentConfirmations: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description A request to submit shipment confirmation. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsRequest"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
        };
    };
    GetShipmentDetails: {
        parameters: {
            query?: {
                /** @description Get Shipment Details by passing buyer Reference ID */
                buyerReferenceNumber?: string;
                /** @description Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment. */
                buyerWarehouseCode?: string;
                /** @description Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                createdAfter?: string;
                /** @description Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                createdBefore?: string;
                /** @description Get Shipment Details by passing Current shipment status. */
                currentShipmentStatus?: string;
                /** @description Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                estimatedDeliveryAfter?: string;
                /** @description Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                estimatedDeliveryBefore?: string;
                /** @description The limit to the number of records returned. Default value is 50 records. */
                limit?: number;
                /** @description Used for pagination when there are more shipments than the specified result size limit. */
                nextToken?: string;
                /** @description Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                packageLabelCreatedAfter?: string;
                /** @description Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                packageLabelCreatedBefore?: string;
                /** @description Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                requestedPickUpAfter?: string;
                /** @description Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                requestedPickUpBefore?: string;
                /** @description Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                scheduledPickUpAfter?: string;
                /** @description Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                scheduledPickUpBefore?: string;
                /** @description Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment. */
                sellerWarehouseCode?: string;
                /** @description Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shipmentConfirmedAfter?: string;
                /** @description Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shipmentConfirmedBefore?: string;
                /** @description Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shipmentDeliveryAfter?: string;
                /** @description Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shipmentDeliveryBefore?: string;
                /** @description Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shippedAfter?: string;
                /** @description Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format. */
                shippedBefore?: string;
                /** @description Sort in ascending or descending order by purchase order creation date. */
                sortOrder?: "ASC" | "DESC";
                /** @description Get Shipment Details by passing Vendor Shipment ID */
                vendorShipmentIdentifier?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentDetailsResponse"];
                };
            };
        };
    };
    SubmitShipments: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description A request to submit shipment request. */
        requestBody: {
            content: {
                "application/json": components["schemas"]["vendorShipments_SubmitShipments"];
            };
        };
        responses: {
            /** @description Success. */
            202: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request size exceeded the maximum accepted size. */
            413: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_SubmitShipmentConfirmationsResponse"];
                };
            };
        };
    };
    GetShipmentLabels: {
        parameters: {
            query?: {
                /** @description Get Shipment labels by passing buyer reference number. */
                buyerReferenceNumber?: string;
                /** @description Shipment labels created after this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format. */
                labelCreatedAfter?: string;
                /** @description Shipment labels created before this time will be included in the result. This field must be in [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format. */
                labelCreatedBefore?: string;
                /** @description The limit to the number of records returned. Default value is 50 records. */
                limit?: number;
                /** @description A token that you use to retrieve the next page of results. The response includes `nextToken` when the number of results exceeds the specified `pageSize` value. To get the next page of results, call the operation with this token and include the same arguments as the call that produced the token. To get a complete list, call this operation until `nextToken` is null. Note that this operation can return empty pages. */
                nextToken?: string;
                /** @description Get Shipping labels based on vendor warehouse code. This value must be same as the `sellingParty.partyId` in the shipment. */
                sellerWarehouseCode?: string;
                /** @description Sort the list by shipment label creation date in ascending or descending order. */
                sortOrder?: "ASC" | "DESC";
                /** @description Get Shipment labels by passing vendor shipment identifier. */
                vendorShipmentIdentifier?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorShipments_GetShipmentLabels"];
                };
            };
        };
    };
    vendorTransactionStatus_getTransaction: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The GUID provided by Amazon in the 'transactionId' field in response to the post request of a specific transaction. */
                transactionId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description Request has missing or invalid parameters and cannot be parsed. */
            400: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description The request's Authorization header is not formatted correctly or does not contain a valid token. */
            401: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature. */
            403: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description The resource specified does not exist. */
            404: {
                headers: {
                    /** @description Your rate limit (requests per second) for this operation. */
                    "x-amzn-RateLimit-Limit"?: string;
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description The request payload is in an unsupported format. */
            415: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description The frequency of requests was greater than allowed. */
            429: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description An unexpected condition occurred that prevented the server from fulfilling the request. */
            500: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
            /** @description Temporary overloading or maintenance of the server. */
            503: {
                headers: {
                    /** @description Unique request reference identifier. */
                    "x-amzn-RequestId"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["vendorTransactionStatus_GetTransactionResponse"];
                };
            };
        };
    };
}
