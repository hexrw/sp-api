name: publish-models

on:
  release:
    types:
      - published

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  publish:
    # Only run for models releases
    if: |
      startsWith(github.event.release.tag_name, '@selling-partner-api/models@') ||
      startsWith(github.event.release.tag_name, 'models-v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.release.tag_name }}
          submodules: recursive
          fetch-depth: 0

      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "1.2.23"

      - name: Setup Node for npm publish
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build models package
        run: bun run build:models

      - name: Validate version
        run: |
          TAG="${{ github.event.release.tag_name }}"
          # Handle both tag formats
          VERSION="${TAG#@selling-partner-api/models@}"
          VERSION="${VERSION#models-v}"
          PACKAGE_VERSION=$(node -p "require('./packages/models/package.json').version")
          
          if [ "${PACKAGE_VERSION}" != "${VERSION}" ]; then
            echo "Version mismatch: tag has ${VERSION} but package.json has ${PACKAGE_VERSION}" >&2
            exit 1
          fi
          
          echo "Version validated: ${VERSION}"

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_SECRET }}
        run: |
          cd packages/models
          npm publish --provenance --access public

      - name: Setup Node for GitHub Packages
        uses: actions/setup-node@v5
        with:
          node-version: "22"
          registry-url: "https://npm.pkg.github.com"
          scope: "@selling-partner-api"

      - name: Publish to GitHub Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd packages/models
          npm publish --provenance --access public
